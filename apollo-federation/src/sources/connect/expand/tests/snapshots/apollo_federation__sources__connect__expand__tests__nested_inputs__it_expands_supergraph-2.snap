---
source: apollo-federation/src/sources/connect/expand/tests/mod.rs
expression: connectors.by_service_name
---
{
    "connectors_Query_foo_0": Connector {
        id: ConnectId {
            label: "connectors.example http: GET /{$args.bar!}/{$args.baz.buzz!}/{$args.baz.quux.quaz!}",
            subgraph_name: "connectors",
            source_name: Some(
                "example",
            ),
            directive: ObjectOrInterfaceFieldDirectivePosition {
                field: Object(Query.foo),
                directive_name: "connect",
                directive_index: 0,
            },
        },
        transport: HttpJsonTransport {
            source_url: Some(
                "http://example",
            ),
            connect_template: URLTemplate {
                base: None,
                path: [
                    ParameterValue {
                        parts: [
                            Var(
                                VariableExpression {
                                    var_path: "$args.bar",
                                    batch_separator: None,
                                    required: true,
                                },
                            ),
                        ],
                    },
                    ParameterValue {
                        parts: [
                            Var(
                                VariableExpression {
                                    var_path: "$args.baz.buzz",
                                    batch_separator: None,
                                    required: true,
                                },
                            ),
                        ],
                    },
                    ParameterValue {
                        parts: [
                            Var(
                                VariableExpression {
                                    var_path: "$args.baz.quux.quaz",
                                    batch_separator: None,
                                    required: true,
                                },
                            ),
                        ],
                    },
                ],
                query: {},
            },
            method: Get,
            headers: {},
            body: None,
        },
        selection: Named(
            SubSelection {
                selections: [],
                star: None,
            },
        ),
        entity_resolver: None,
    },
}
