---
source: apollo-router/tests/type_conditions.rs
expression: response
---
{
  "data": {
    "search": null
  },
  "errors": [
    {
      "message": "couldn't find mock for query {\"query\":\"query Search__searchSubgraph__0 {\\n  search {\\n    __typename\\n    ... on MovieResult {\\n      sections {\\n        __typename\\n        ... on EntityCollectionSection {\\n          __typename\\n          id\\n        }\\n        ... on GallerySection {\\n          __typename\\n          id\\n        }\\n      }\\n      id\\n    }\\n    ... on ArticleResult {\\n      id\\n      sections {\\n        __typename\\n        ... on GallerySection {\\n          __typename\\n          id\\n        }\\n        ... on EntityCollectionSection {\\n          __typename\\n          id\\n        }\\n      }\\n    }\\n  }\\n}\\n\",\"operationName\":\"Search__searchSubgraph__0\"}",
      "extensions": {
        "code": "FETCH_ERROR"
      }
    }
  ],
  "extensions": {
    "apolloQueryPlan": {
      "object": {
        "kind": "QueryPlan",
        "node": {
          "kind": "Sequence",
          "nodes": [
            {
              "kind": "Fetch",
              "serviceName": "searchSubgraph",
              "variableUsages": [],
              "operation": "query Search__searchSubgraph__0 {\n  search {\n    __typename\n    ... on MovieResult {\n      sections {\n        __typename\n        ... on EntityCollectionSection {\n          __typename\n          id\n        }\n        ... on GallerySection {\n          __typename\n          id\n        }\n      }\n      id\n    }\n    ... on ArticleResult {\n      id\n      sections {\n        __typename\n        ... on GallerySection {\n          __typename\n          id\n        }\n        ... on EntityCollectionSection {\n          __typename\n          id\n        }\n      }\n    }\n  }\n}\n",
              "operationName": "Search__searchSubgraph__0",
              "operationKind": "query",
              "id": null,
              "inputRewrites": null,
              "outputRewrites": null,
              "contextRewrites": null,
              "schemaAwareHash": "587c887350ef75eaf4b647be94fd682616bcd33909e15fb797cee226e95fa36a",
              "authorization": {
                "is_authenticated": false,
                "scopes": [],
                "policies": []
              }
            },
            {
              "kind": "Flatten",
              "path": [
                "search",
                "@",
                "sections",
                "@"
              ],
              "node": {
                "kind": "Fetch",
                "serviceName": "artworkSubgraph",
                "requires": [
                  {
                    "kind": "InlineFragment",
                    "typeCondition": "EntityCollectionSection",
                    "selections": [
                      {
                        "kind": "Field",
                        "name": "__typename"
                      },
                      {
                        "kind": "Field",
                        "name": "id"
                      }
                    ]
                  },
                  {
                    "kind": "InlineFragment",
                    "typeCondition": "GallerySection",
                    "selections": [
                      {
                        "kind": "Field",
                        "name": "__typename"
                      },
                      {
                        "kind": "Field",
                        "name": "id"
                      }
                    ]
                  }
                ],
                "variableUsages": [
                  "movieResultParam"
                ],
                "operation": "query Search__artworkSubgraph__1($representations: [_Any!]!, $movieResultParam: String) {\n  _entities(representations: $representations) {\n    ... on EntityCollectionSection {\n      title\n      artwork(params: $movieResultParam)\n    }\n    ... on GallerySection {\n      artwork(params: $movieResultParam)\n    }\n  }\n}\n",
                "operationName": "Search__artworkSubgraph__1",
                "operationKind": "query",
                "id": null,
                "inputRewrites": null,
                "outputRewrites": null,
                "contextRewrites": null,
                "schemaAwareHash": "622eb49d4e52ff2636348e103f941d04b783fec97de59d0ae6635d9272f97ad8",
                "authorization": {
                  "is_authenticated": false,
                  "scopes": [],
                  "policies": []
                }
              }
            }
          ]
        }
      },
      "text": "QueryPlan {\n  Sequence {\n    Fetch(service: \"searchSubgraph\") {\n      {\n        search {\n          __typename\n          ... on MovieResult {\n            sections {\n              __typename\n              ... on EntityCollectionSection {\n                __typename\n                id\n              }\n              ... on GallerySection {\n                __typename\n                id\n              }\n            }\n            id\n          }\n          ... on ArticleResult {\n            id\n            sections {\n              __typename\n              ... on GallerySection {\n                __typename\n                id\n              }\n              ... on EntityCollectionSection {\n                __typename\n                id\n              }\n            }\n          }\n        }\n      }\n    },\n    Flatten(path: \"search.@.sections.@\") {\n      Fetch(service: \"artworkSubgraph\") {\n        {\n          ... on EntityCollectionSection {\n            __typename\n            id\n          }\n          ... on GallerySection {\n            __typename\n            id\n          }\n        } =>\n        {\n          ... on EntityCollectionSection {\n            title\n            artwork(params: $movieResultParam)\n          }\n          ... on GallerySection {\n            artwork(params: $movieResultParam)\n          }\n        }\n      },\n    },\n  },\n}"
    }
  }
}
