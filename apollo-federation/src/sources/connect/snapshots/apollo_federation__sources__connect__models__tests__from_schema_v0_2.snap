---
source: apollo-federation/src/sources/connect/models.rs
expression: "&connectors"
---
{
    ConnectId {
        label: "connectors.json http: GET /posts",
        subgraph_name: "connectors",
        source_name: Some(
            "json",
        ),
        directive: Field(
            ObjectOrInterfaceFieldDirectivePosition {
                field: Object(Query.posts),
                directive_name: "connect",
                directive_index: 0,
            },
        ),
    }: Connector {
        id: ConnectId {
            label: "connectors.json http: GET /posts",
            subgraph_name: "connectors",
            source_name: Some(
                "json",
            ),
            directive: Field(
                ObjectOrInterfaceFieldDirectivePosition {
                    field: Object(Query.posts),
                    directive_name: "connect",
                    directive_index: 0,
                },
            ),
        },
        transport: HttpJsonTransport {
            source_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "jsonplaceholder.typicode.com",
                        ),
                    ),
                    port: None,
                    path: "/",
                    query: None,
                    fragment: None,
                },
            ),
            connect_template: URLTemplate {
                base: None,
                path: [
                    StringTemplate {
                        parts: [
                            Constant(
                                Constant {
                                    value: "posts",
                                    location: 1..6,
                                },
                            ),
                        ],
                    },
                ],
                query: [],
            },
            method: Get,
            headers: {
                "authtoken": From(
                    "x-auth-token",
                ),
                "user-agent": Value(
                    HeaderValue(
                        StringTemplate {
                            parts: [
                                Constant(
                                    Constant {
                                        value: "Firefox",
                                        location: 0..7,
                                    },
                                ),
                            ],
                        },
                    ),
                ),
            },
            body: None,
        },
        selection: Named(
            SubSelection {
                selections: [
                    Field(
                        None,
                        WithRange {
                            node: Field(
                                "id",
                            ),
                            range: Some(
                                0..2,
                            ),
                        },
                        None,
                    ),
                    Field(
                        None,
                        WithRange {
                            node: Field(
                                "title",
                            ),
                            range: Some(
                                3..8,
                            ),
                        },
                        None,
                    ),
                    Field(
                        None,
                        WithRange {
                            node: Field(
                                "body",
                            ),
                            range: Some(
                                9..13,
                            ),
                        },
                        None,
                    ),
                ],
                range: Some(
                    0..13,
                ),
            },
        ),
        config: None,
        max_requests: None,
        entity_resolver: None,
        spec: V0_2,
        request_variables: {},
        response_variables: {},
    },
    ConnectId {
        label: "connectors.json http: GET /posts?id=1",
        subgraph_name: "connectors",
        source_name: Some(
            "json",
        ),
        directive: Type(
            ObjectTypeDefinitionDirectivePosition {
                type_name: "Post",
                directive_name: "connect",
                directive_index: 0,
            },
        ),
    }: Connector {
        id: ConnectId {
            label: "connectors.json http: GET /posts?id=1",
            subgraph_name: "connectors",
            source_name: Some(
                "json",
            ),
            directive: Type(
                ObjectTypeDefinitionDirectivePosition {
                    type_name: "Post",
                    directive_name: "connect",
                    directive_index: 0,
                },
            ),
        },
        transport: HttpJsonTransport {
            source_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "jsonplaceholder.typicode.com",
                        ),
                    ),
                    port: None,
                    path: "/",
                    query: None,
                    fragment: None,
                },
            ),
            connect_template: URLTemplate {
                base: None,
                path: [
                    StringTemplate {
                        parts: [
                            Constant(
                                Constant {
                                    value: "posts",
                                    location: 1..6,
                                },
                            ),
                        ],
                    },
                ],
                query: [
                    (
                        StringTemplate {
                            parts: [
                                Constant(
                                    Constant {
                                        value: "id",
                                        location: 7..9,
                                    },
                                ),
                            ],
                        },
                        StringTemplate {
                            parts: [
                                Constant(
                                    Constant {
                                        value: "1",
                                        location: 10..11,
                                    },
                                ),
                            ],
                        },
                    ),
                ],
            },
            method: Get,
            headers: {
                "authtoken": From(
                    "x-auth-token",
                ),
                "user-agent": Value(
                    HeaderValue(
                        StringTemplate {
                            parts: [
                                Constant(
                                    Constant {
                                        value: "Firefox",
                                        location: 0..7,
                                    },
                                ),
                            ],
                        },
                    ),
                ),
            },
            body: None,
        },
        selection: Named(
            SubSelection {
                selections: [
                    Field(
                        None,
                        WithRange {
                            node: Field(
                                "id",
                            ),
                            range: Some(
                                0..2,
                            ),
                        },
                        None,
                    ),
                    Field(
                        None,
                        WithRange {
                            node: Field(
                                "title",
                            ),
                            range: Some(
                                3..8,
                            ),
                        },
                        None,
                    ),
                    Field(
                        None,
                        WithRange {
                            node: Field(
                                "body",
                            ),
                            range: Some(
                                9..13,
                            ),
                        },
                        None,
                    ),
                ],
                range: Some(
                    0..13,
                ),
            },
        ),
        config: None,
        max_requests: None,
        entity_resolver: Some(
            Implicit,
        ),
        spec: V0_2,
        request_variables: {},
        response_variables: {},
    },
}
