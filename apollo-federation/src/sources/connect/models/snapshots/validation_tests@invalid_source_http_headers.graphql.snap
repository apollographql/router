---
source: apollo-federation/src/sources/connect/models/validation.rs
expression: "format!(\"{:?}\", errors)"
input_file: apollo-federation/src/sources/connect/models/test_data/validation/invalid_source_http_headers.graphql
---
[Message { code: HttpHeaderNameCollision, message: "`@source(http.headers:)` must have a unique value for `name`.", locations: [Location { line: 12, column: 10 }..Location { line: 12, column: 24 }] }, Message { code: HttpHeaderNameCollision, message: "`@source(http.headers:)` must have unique values for `name` and `as` keys.", locations: [Location { line: 12, column: 26 }..Location { line: 12, column: 38 }] }, Message { code: HttpHeaderNameCollision, message: "`@source(http.headers:)` must include a `name` value.", locations: [Location { line: 9, column: 6 }..Location { line: 22, column: 7 }] }, Message { code: InvalidHttpHeaderMapping, message: "`@source(http.headers:)` uses both `as` and `value` keys together. Please choose only one.", locations: [Location { line: 13, column: 10 }..Location { line: 13, column: 22 }] }, Message { code: InvalidHttpHeaderMapping, message: "`@source(http.headers:)` uses both `as` and `value` keys together. Please choose only one.", locations: [Location { line: 14, column: 25 }..Location { line: 14, column: 36 }] }, Message { code: InvalidHttpHeaderName, message: "The value '<Invalid-Header>' for 'name' at '`@source(http.headers:)`' must be a valid HTTP header name.", locations: [Location { line: 15, column: 10 }..Location { line: 15, column: 34 }] }, Message { code: HttpHeaderNameCollision, message: "`@source(http.headers:)` must have a unique value for `name`.", locations: [Location { line: 16, column: 10 }..Location { line: 16, column: 24 }] }, Message { code: InvalidHttpHeaderName, message: "The value '<Invalid-Header>' for 'as' at '`@source(http.headers:)`' must be a valid HTTP header name.", locations: [Location { line: 16, column: 26 }..Location { line: 16, column: 48 }] }, Message { code: HttpHeaderNameCollision, message: "`@source(http.headers:)` must have a unique value for `name`.", locations: [Location { line: 17, column: 10 }..Location { line: 17, column: 22 }] }, Message { code: InvalidHttpHeaderValue, message: "The value '  Value with ðŸ˜Š emoji and newline  \n ' at '`@source(http.headers:)`' must be a valid HTTP header value.", locations: [Location { line: 17, column: 24 }..Location { line: 17, column: 73 }] }, Message { code: HttpHeaderNameCollision, message: "`@source(http.headers:)` must have a unique value for `name`.", locations: [Location { line: 19, column: 10 }..Location { line: 19, column: 22 }] }, Message { code: InvalidHttpHeaderValue, message: "The value '  A list of values with ðŸ˜Š emoji and newline  \n ' at '`@source(http.headers:)`' must be a valid HTTP header value.", locations: [Location { line: 20, column: 10 }..Location { line: 20, column: 72 }] }]
