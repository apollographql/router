extend schema
@link(
    url: "https://specs.apollo.dev/connect/v0.1"
    import: ["@connect"]
)

type Query {
    dollar: String
    @connect(
        http: {
            POST: "http://127.0.0.1",
            body: "$" # INVALID - there is no input
        }
        selection: "$"
    )
    dollarField: String
    @connect(
        http: {
            POST: "http://127.0.0.1",
            body: "$.foo" # INVALID - there is no input
        }
        selection: "$"
    )
    objectLiteral: String
    @connect(
        http: {
            POST: "http://127.0.0.1",
            body: "$({ userid: 'foo' })" # Could be valid, but currently not allowed
        }
        selection: "$"
    )
    objectLiteralWithVariable(userid: ID!): String
    @connect(
        http: {
            POST: "http://127.0.0.1",
            body: "$({ userid: $args.userid })" # VALID
        }
        selection: "$"
    )
    stringLiteral: String
    @connect(
        http: {
            POST: "http://127.0.0.1",
            body: "$('foo')" # INVALID - output is not valid JSON
        }
        selection: "$"
    )
    stringLiteralWithVariable(userid: ID!): String
    @connect(
        http: {
            POST: "http://127.0.0.1",
            body: "$($args.userid)" # INVALID, but currently allowed - output is not valid JSON
        }
        selection: "$"
    )
    numericLiteral(userid: ID!): String
    @connect(
        http: {
            POST: "http://127.0.0.1",
            body: "$(1)" # INVALID - output is not valid JSON
        }
        selection: "$"
    )
}
