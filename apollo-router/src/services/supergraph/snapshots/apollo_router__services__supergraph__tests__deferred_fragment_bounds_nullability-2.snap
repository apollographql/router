---
source: apollo-router/src/services/supergraph/tests.rs
expression: stream.next_response().await.unwrap()
---
{
  "hasNext": false,
  "incremental": [
    {
      "data": null,
      "path": [
        "currentUser",
        "activeOrganization",
        "suborga",
        0
      ],
      "errors": [
        {
          "message": "couldn't find mock for query {\"query\":\"query($representations: [_Any!]!) { _entities(representations: $representations) { ... on Organization { nonNullId } } }\",\"variables\":{\"representations\":[{\"__typename\":\"Organization\",\"id\":\"1\"},{\"__typename\":\"Organization\",\"id\":\"2\"},{\"__typename\":\"Organization\",\"id\":\"3\"}]}}",
          "path": [
            "currentUser",
            "activeOrganization",
            "suborga",
            0
          ],
          "extensions": {
            "code": "FETCH_ERROR",
            "service": "orga"
          }
        }
      ],
      "extensions": {
        "valueCompletion": [
          {
            "message": "Cannot return null for non-nullable field Organization.nonNullId",
            "path": [
              "currentUser",
              "activeOrganization",
              "suborga",
              0
            ]
          }
        ]
      }
    },
    {
      "data": null,
      "path": [
        "currentUser",
        "activeOrganization",
        "suborga",
        1
      ],
      "errors": [
        {
          "message": "couldn't find mock for query {\"query\":\"query($representations: [_Any!]!) { _entities(representations: $representations) { ... on Organization { nonNullId } } }\",\"variables\":{\"representations\":[{\"__typename\":\"Organization\",\"id\":\"1\"},{\"__typename\":\"Organization\",\"id\":\"2\"},{\"__typename\":\"Organization\",\"id\":\"3\"}]}}",
          "path": [
            "currentUser",
            "activeOrganization",
            "suborga",
            1
          ],
          "extensions": {
            "code": "FETCH_ERROR",
            "service": "orga"
          }
        }
      ],
      "extensions": {
        "valueCompletion": [
          {
            "message": "Cannot return null for non-nullable field Organization.nonNullId",
            "path": [
              "currentUser",
              "activeOrganization",
              "suborga",
              1
            ]
          }
        ]
      }
    },
    {
      "data": null,
      "path": [
        "currentUser",
        "activeOrganization",
        "suborga",
        2
      ],
      "errors": [
        {
          "message": "couldn't find mock for query {\"query\":\"query($representations: [_Any!]!) { _entities(representations: $representations) { ... on Organization { nonNullId } } }\",\"variables\":{\"representations\":[{\"__typename\":\"Organization\",\"id\":\"1\"},{\"__typename\":\"Organization\",\"id\":\"2\"},{\"__typename\":\"Organization\",\"id\":\"3\"}]}}",
          "path": [
            "currentUser",
            "activeOrganization",
            "suborga",
            2
          ],
          "extensions": {
            "code": "FETCH_ERROR",
            "service": "orga"
          }
        }
      ],
      "extensions": {
        "valueCompletion": [
          {
            "message": "Cannot return null for non-nullable field Organization.nonNullId",
            "path": [
              "currentUser",
              "activeOrganization",
              "suborga",
              2
            ]
          }
        ]
      }
    }
  ]
}
