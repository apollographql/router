---
source: apollo-router/src/configuration/tests.rs
expression: "&schema"
---
{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "title": "Configuration",
  "description": "The configuration for the router.\n\nCan be created through `serde::Deserialize` from various formats, or inline in Rust code with `serde_json::json!` and `serde_json::from_value`.",
  "type": "object",
  "properties": {
    "apq": {
      "description": "Configures automatic persisted queries",
      "default": {
        "enabled": true,
        "router": {
          "cache": {
            "in_memory": {
              "limit": 512
            },
            "redis": null
          }
        },
        "subgraph": {
          "all": {
            "enabled": false
          },
          "subgraphs": {}
        }
      },
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Activates Automatic Persisted Queries (enabled by default)",
          "default": true,
          "type": "boolean"
        },
        "router": {
          "description": "Router level (APQ) configuration",
          "default": {
            "cache": {
              "in_memory": {
                "limit": 512
              },
              "redis": null
            }
          },
          "type": "object",
          "properties": {
            "cache": {
              "description": "Cache configuration",
              "default": {
                "in_memory": {
                  "limit": 512
                },
                "redis": null
              },
              "type": "object",
              "properties": {
                "in_memory": {
                  "description": "Configures the in memory cache (always active)",
                  "default": {
                    "limit": 512
                  },
                  "type": "object",
                  "required": [
                    "limit"
                  ],
                  "properties": {
                    "limit": {
                      "description": "Number of entries in the Least Recently Used cache",
                      "type": "integer",
                      "format": "uint",
                      "minimum": 1.0
                    }
                  },
                  "additionalProperties": false
                },
                "redis": {
                  "description": "Configures and activates the Redis cache",
                  "default": null,
                  "type": "object",
                  "required": [
                    "urls"
                  ],
                  "properties": {
                    "timeout": {
                      "description": "Redis request timeout (default: 2ms)",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "urls": {
                      "description": "List of URLs to the Redis cluster",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "additionalProperties": false,
                  "nullable": true
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "subgraph": {
          "description": "Configuration options pertaining to the subgraph server component.",
          "default": {
            "all": {
              "enabled": false
            },
            "subgraphs": {}
          },
          "type": "object",
          "properties": {
            "all": {
              "description": "options applying to all subgraphs",
              "default": {
                "enabled": false
              },
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Enable",
                  "default": false,
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "subgraphs": {
              "description": "per subgraph options",
              "default": {},
              "type": "object",
              "additionalProperties": {
                "description": "Subgraph level Automatic Persisted Queries (APQ) configuration",
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Enable",
                    "default": false,
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    "authentication": {
      "description": "Authentication",
      "type": "object",
      "properties": {
        "router": {
          "description": "Router configuration",
          "type": "object",
          "required": [
            "jwt"
          ],
          "properties": {
            "jwt": {
              "description": "The JWT configuration",
              "type": "object",
              "required": [
                "jwks"
              ],
              "properties": {
                "header_name": {
                  "description": "HTTP header expected to contain JWT",
                  "default": "authorization",
                  "type": "string"
                },
                "header_value_prefix": {
                  "description": "Header value prefix",
                  "default": "Bearer",
                  "type": "string"
                },
                "jwks": {
                  "description": "List of JWKS used to verify tokens",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "url"
                    ],
                    "properties": {
                      "algorithms": {
                        "description": "List of accepted algorithms. Possible values are `HS256`, `HS384`, `HS512`, `ES256`, `ES384`, `RS256`, `RS384`, `RS512`, `PS256`, `PS384`, `PS512`, `EdDSA`",
                        "default": null,
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true
                      },
                      "issuer": {
                        "description": "Expected issuer for tokens verified by that JWKS",
                        "type": "string",
                        "nullable": true
                      },
                      "url": {
                        "description": "Retrieve the JWK Set",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "subgraph": {
          "description": "Subgraph configuration",
          "type": "object",
          "properties": {
            "all": {
              "description": "Configuration that will apply to all subgraphs.",
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "aws_sig_v4"
                  ],
                  "properties": {
                    "aws_sig_v4": {
                      "description": "Configure AWS sigv4 auth.",
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "hardcoded"
                          ],
                          "properties": {
                            "hardcoded": {
                              "description": "Hardcoded Config using access_key and secret. Prefer using DefaultChain instead.",
                              "type": "object",
                              "required": [
                                "access_key_id",
                                "region",
                                "secret_access_key",
                                "service_name"
                              ],
                              "properties": {
                                "access_key_id": {
                                  "description": "The ID for this access key.",
                                  "type": "string"
                                },
                                "assume_role": {
                                  "description": "Specify assumed role configuration.",
                                  "type": "object",
                                  "required": [
                                    "role_arn",
                                    "session_name"
                                  ],
                                  "properties": {
                                    "external_id": {
                                      "description": "Unique identifier that might be required when you assume a role in another account.",
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "role_arn": {
                                      "description": "Amazon Resource Name (ARN) for the role assumed when making requests",
                                      "type": "string"
                                    },
                                    "session_name": {
                                      "description": "Uniquely identify a session when the same role is assumed by different principals or for different reasons.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "nullable": true
                                },
                                "region": {
                                  "description": "The AWS region this chain applies to.",
                                  "type": "string"
                                },
                                "secret_access_key": {
                                  "description": "The secret key used to sign requests.",
                                  "type": "string"
                                },
                                "service_name": {
                                  "description": "The service you're trying to access, eg: \"s3\", \"vpc-lattice-svcs\", etc.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "required": [
                            "default_chain"
                          ],
                          "properties": {
                            "default_chain": {
                              "description": "Configuration of the DefaultChainProvider",
                              "type": "object",
                              "required": [
                                "region",
                                "service_name"
                              ],
                              "properties": {
                                "assume_role": {
                                  "description": "Specify assumed role configuration.",
                                  "type": "object",
                                  "required": [
                                    "role_arn",
                                    "session_name"
                                  ],
                                  "properties": {
                                    "external_id": {
                                      "description": "Unique identifier that might be required when you assume a role in another account.",
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "role_arn": {
                                      "description": "Amazon Resource Name (ARN) for the role assumed when making requests",
                                      "type": "string"
                                    },
                                    "session_name": {
                                      "description": "Uniquely identify a session when the same role is assumed by different principals or for different reasons.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "nullable": true
                                },
                                "profile_name": {
                                  "description": "The profile name used by this provider",
                                  "type": "string",
                                  "nullable": true
                                },
                                "region": {
                                  "description": "The AWS region this chain applies to.",
                                  "type": "string"
                                },
                                "service_name": {
                                  "description": "The service you're trying to access, eg: \"s3\", \"vpc-lattice-svcs\", etc.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              ],
              "nullable": true
            },
            "subgraphs": {
              "description": "Create a configuration that will apply only to a specific subgraph.",
              "type": "object",
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": [
                      "aws_sig_v4"
                    ],
                    "properties": {
                      "aws_sig_v4": {
                        "description": "Configure AWS sigv4 auth.",
                        "oneOf": [
                          {
                            "type": "object",
                            "required": [
                              "hardcoded"
                            ],
                            "properties": {
                              "hardcoded": {
                                "description": "Hardcoded Config using access_key and secret. Prefer using DefaultChain instead.",
                                "type": "object",
                                "required": [
                                  "access_key_id",
                                  "region",
                                  "secret_access_key",
                                  "service_name"
                                ],
                                "properties": {
                                  "access_key_id": {
                                    "description": "The ID for this access key.",
                                    "type": "string"
                                  },
                                  "assume_role": {
                                    "description": "Specify assumed role configuration.",
                                    "type": "object",
                                    "required": [
                                      "role_arn",
                                      "session_name"
                                    ],
                                    "properties": {
                                      "external_id": {
                                        "description": "Unique identifier that might be required when you assume a role in another account.",
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "role_arn": {
                                        "description": "Amazon Resource Name (ARN) for the role assumed when making requests",
                                        "type": "string"
                                      },
                                      "session_name": {
                                        "description": "Uniquely identify a session when the same role is assumed by different principals or for different reasons.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "nullable": true
                                  },
                                  "region": {
                                    "description": "The AWS region this chain applies to.",
                                    "type": "string"
                                  },
                                  "secret_access_key": {
                                    "description": "The secret key used to sign requests.",
                                    "type": "string"
                                  },
                                  "service_name": {
                                    "description": "The service you're trying to access, eg: \"s3\", \"vpc-lattice-svcs\", etc.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "required": [
                              "default_chain"
                            ],
                            "properties": {
                              "default_chain": {
                                "description": "Configuration of the DefaultChainProvider",
                                "type": "object",
                                "required": [
                                  "region",
                                  "service_name"
                                ],
                                "properties": {
                                  "assume_role": {
                                    "description": "Specify assumed role configuration.",
                                    "type": "object",
                                    "required": [
                                      "role_arn",
                                      "session_name"
                                    ],
                                    "properties": {
                                      "external_id": {
                                        "description": "Unique identifier that might be required when you assume a role in another account.",
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "role_arn": {
                                        "description": "Amazon Resource Name (ARN) for the role assumed when making requests",
                                        "type": "string"
                                      },
                                      "session_name": {
                                        "description": "Uniquely identify a session when the same role is assumed by different principals or for different reasons.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "nullable": true
                                  },
                                  "profile_name": {
                                    "description": "The profile name used by this provider",
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "region": {
                                    "description": "The AWS region this chain applies to.",
                                    "type": "string"
                                  },
                                  "service_name": {
                                    "description": "The service you're trying to access, eg: \"s3\", \"vpc-lattice-svcs\", etc.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                ]
              }
            }
          },
          "additionalProperties": false,
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "authorization": {
      "description": "Authorization plugin",
      "type": "object",
      "properties": {
        "preview_directives": {
          "description": "`@authenticated` and `@requiresScopes` directives",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "enables the `@authenticated` and `@requiresScopes` directives",
              "default": false,
              "type": "boolean"
            }
          }
        },
        "require_authentication": {
          "description": "Reject unauthenticated requests",
          "default": false,
          "type": "boolean"
        }
      }
    },
    "coprocessor": {
      "description": "Configures the externalization plugin",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "router": {
          "description": "The router stage request/response configuration",
          "default": {
            "request": {
              "headers": false,
              "context": false,
              "body": false,
              "sdl": false,
              "path": false,
              "method": false
            },
            "response": {
              "headers": false,
              "context": false,
              "body": false,
              "sdl": false,
              "status_code": false
            }
          },
          "type": "object",
          "properties": {
            "request": {
              "description": "The request configuration",
              "default": {
                "headers": false,
                "context": false,
                "body": false,
                "sdl": false,
                "path": false,
                "method": false
              },
              "type": "object",
              "properties": {
                "body": {
                  "description": "Send the body",
                  "default": false,
                  "type": "boolean"
                },
                "context": {
                  "description": "Send the context",
                  "default": false,
                  "type": "boolean"
                },
                "headers": {
                  "description": "Send the headers",
                  "default": false,
                  "type": "boolean"
                },
                "method": {
                  "description": "Send the method",
                  "default": false,
                  "type": "boolean"
                },
                "path": {
                  "description": "Send the path",
                  "default": false,
                  "type": "boolean"
                },
                "sdl": {
                  "description": "Send the SDL",
                  "default": false,
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "response": {
              "description": "The response configuration",
              "default": {
                "headers": false,
                "context": false,
                "body": false,
                "sdl": false,
                "status_code": false
              },
              "type": "object",
              "properties": {
                "body": {
                  "description": "Send the body",
                  "default": false,
                  "type": "boolean"
                },
                "context": {
                  "description": "Send the context",
                  "default": false,
                  "type": "boolean"
                },
                "headers": {
                  "description": "Send the headers",
                  "default": false,
                  "type": "boolean"
                },
                "sdl": {
                  "description": "Send the SDL",
                  "default": false,
                  "type": "boolean"
                },
                "status_code": {
                  "description": "Send the HTTP status",
                  "default": false,
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          }
        },
        "subgraph": {
          "description": "The subgraph stage request/response configuration",
          "default": {
            "all": {
              "request": {
                "headers": false,
                "context": false,
                "body": false,
                "uri": false,
                "method": false,
                "service_name": false
              },
              "response": {
                "headers": false,
                "context": false,
                "body": false,
                "service_name": false,
                "status_code": false
              }
            }
          },
          "type": "object",
          "properties": {
            "all": {
              "description": "What information is passed to a subgraph request/response stage",
              "default": {
                "request": {
                  "headers": false,
                  "context": false,
                  "body": false,
                  "uri": false,
                  "method": false,
                  "service_name": false
                },
                "response": {
                  "headers": false,
                  "context": false,
                  "body": false,
                  "service_name": false,
                  "status_code": false
                }
              },
              "type": "object",
              "properties": {
                "request": {
                  "description": "What information is passed to a subgraph request/response stage",
                  "default": {
                    "headers": false,
                    "context": false,
                    "body": false,
                    "uri": false,
                    "method": false,
                    "service_name": false
                  },
                  "type": "object",
                  "properties": {
                    "body": {
                      "description": "Send the body",
                      "default": false,
                      "type": "boolean"
                    },
                    "context": {
                      "description": "Send the context",
                      "default": false,
                      "type": "boolean"
                    },
                    "headers": {
                      "description": "Send the headers",
                      "default": false,
                      "type": "boolean"
                    },
                    "method": {
                      "description": "Send the method URI",
                      "default": false,
                      "type": "boolean"
                    },
                    "service_name": {
                      "description": "Send the service name",
                      "default": false,
                      "type": "boolean"
                    },
                    "uri": {
                      "description": "Send the subgraph URI",
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "response": {
                  "description": "What information is passed to a subgraph request/response stage",
                  "default": {
                    "headers": false,
                    "context": false,
                    "body": false,
                    "service_name": false,
                    "status_code": false
                  },
                  "type": "object",
                  "properties": {
                    "body": {
                      "description": "Send the body",
                      "default": false,
                      "type": "boolean"
                    },
                    "context": {
                      "description": "Send the context",
                      "default": false,
                      "type": "boolean"
                    },
                    "headers": {
                      "description": "Send the headers",
                      "default": false,
                      "type": "boolean"
                    },
                    "service_name": {
                      "description": "Send the service name",
                      "default": false,
                      "type": "boolean"
                    },
                    "status_code": {
                      "description": "Send the http status",
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "supergraph": {
          "description": "The supergraph stage request/response configuration",
          "default": {
            "request": {
              "headers": false,
              "context": false,
              "body": false,
              "sdl": false,
              "method": false
            },
            "response": {
              "headers": false,
              "context": false,
              "body": false,
              "sdl": false,
              "status_code": false
            }
          },
          "type": "object",
          "properties": {
            "request": {
              "description": "The request configuration",
              "default": {
                "headers": false,
                "context": false,
                "body": false,
                "sdl": false,
                "method": false
              },
              "type": "object",
              "properties": {
                "body": {
                  "description": "Send the body",
                  "default": false,
                  "type": "boolean"
                },
                "context": {
                  "description": "Send the context",
                  "default": false,
                  "type": "boolean"
                },
                "headers": {
                  "description": "Send the headers",
                  "default": false,
                  "type": "boolean"
                },
                "method": {
                  "description": "Send the method",
                  "default": false,
                  "type": "boolean"
                },
                "sdl": {
                  "description": "Send the SDL",
                  "default": false,
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "response": {
              "description": "What information is passed to a router request/response stage",
              "default": {
                "headers": false,
                "context": false,
                "body": false,
                "sdl": false,
                "status_code": false
              },
              "type": "object",
              "properties": {
                "body": {
                  "description": "Send the body",
                  "default": false,
                  "type": "boolean"
                },
                "context": {
                  "description": "Send the context",
                  "default": false,
                  "type": "boolean"
                },
                "headers": {
                  "description": "Send the headers",
                  "default": false,
                  "type": "boolean"
                },
                "sdl": {
                  "description": "Send the SDL",
                  "default": false,
                  "type": "boolean"
                },
                "status_code": {
                  "description": "Send the HTTP status",
                  "default": false,
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          }
        },
        "timeout": {
          "description": "The timeout for external requests",
          "default": {
            "secs": 1,
            "nanos": 0
          },
          "type": "string"
        },
        "url": {
          "description": "The url you'd like to offload processing to",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "cors": {
      "description": "Cross origin request headers.",
      "default": {
        "allow_any_origin": false,
        "allow_credentials": false,
        "allow_headers": [],
        "expose_headers": null,
        "origins": [
          "https://studio.apollographql.com"
        ],
        "match_origins": null,
        "methods": [
          "GET",
          "POST",
          "OPTIONS"
        ],
        "max_age": null
      },
      "type": "object",
      "properties": {
        "allow_any_origin": {
          "description": "Set to true to allow any origin.\n\nDefaults to false Having this set to true is the only way to allow Origin: null.",
          "default": false,
          "type": "boolean"
        },
        "allow_credentials": {
          "description": "Set to true to add the `Access-Control-Allow-Credentials` header.",
          "default": false,
          "type": "boolean"
        },
        "allow_headers": {
          "description": "The headers to allow.\n\nIf this value is not set, the router will mirror client's `Access-Control-Request-Headers`.\n\nNote that if you set headers here, you also want to have a look at your `CSRF` plugins configuration, and make sure you either: - accept `x-apollo-operation-name` AND / OR `apollo-require-preflight` - defined `csrf` required headers in your yml configuration, as shown in the `examples/cors-and-csrf/custom-headers.router.yaml` files.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expose_headers": {
          "description": "Which response headers should be made available to scripts running in the browser, in response to a cross-origin request.",
          "default": null,
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true
        },
        "match_origins": {
          "description": "`Regex`es you want to match the origins against to determine if they're allowed. Defaults to an empty list. Note that `origins` will be evaluated before `match_origins`",
          "default": null,
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true
        },
        "max_age": {
          "description": "The `Access-Control-Max-Age` header value in time units",
          "default": null,
          "type": "string"
        },
        "methods": {
          "description": "Allowed request methods. Defaults to GET, POST, OPTIONS.",
          "default": [
            "GET",
            "POST",
            "OPTIONS"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origins": {
          "description": "The origin(s) to allow requests from. Defaults to `https://studio.apollographql.com/` for Apollo Studio.",
          "default": [
            "https://studio.apollographql.com"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "csrf": {
      "description": "CSRF Configuration.",
      "type": "object",
      "properties": {
        "required_headers": {
          "description": "Override the headers to check for by setting custom_headers Note that if you set required_headers here, you may also want to have a look at your `CORS` configuration, and make sure you either: - did not set any `allow_headers` list (so it defaults to `mirror_request`) - added your required headers to the allow_headers list, as shown in the `examples/cors-and-csrf/custom-headers.router.yaml` files.",
          "default": [
            "x-apollo-operation-name",
            "apollo-require-preflight"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unsafe_disabled": {
          "description": "The CSRF plugin is enabled by default; set unsafe_disabled = true to disable the plugin behavior Note that setting this to true is deemed unsafe. See <https://developer.mozilla.org/en-US/docs/Glossary/CSRF>.",
          "default": false,
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "experimental_batching": {
      "description": "Batching configuration.",
      "default": {
        "enabled": false,
        "mode": "batch_http_link"
      },
      "type": "object",
      "required": [
        "mode"
      ],
      "properties": {
        "enabled": {
          "description": "Activates Batching (disabled by default)",
          "default": false,
          "type": "boolean"
        },
        "mode": {
          "description": "Batching mode",
          "oneOf": [
            {
              "description": "batch_http_link",
              "type": "string",
              "enum": [
                "batch_http_link"
              ]
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "experimental_chaos": {
      "description": "Configuration for chaos testing, trying to reproduce bugs that require uncommon conditions. You probably don’t want this in production!",
      "default": {
        "force_reload": null
      },
      "type": "object",
      "properties": {
        "force_reload": {
          "description": "Force a hot reload of the Router (as if the schema or configuration had changed) at a regular time interval.",
          "default": null,
          "type": "string",
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "experimental_graphql_validation_mode": {
      "description": "Set the GraphQL validation implementation to use.",
      "default": "legacy",
      "oneOf": [
        {
          "description": "Use the new Rust-based implementation.",
          "type": "string",
          "enum": [
            "new"
          ]
        },
        {
          "description": "Use the old JavaScript-based implementation.",
          "type": "string",
          "enum": [
            "legacy"
          ]
        },
        {
          "description": "Use Rust-based and Javascript-based implementations side by side, logging warnings if the implementations disagree.",
          "type": "string",
          "enum": [
            "both"
          ]
        }
      ]
    },
    "forbid_mutations": {
      "description": "Forbid mutations configuration",
      "type": "boolean"
    },
    "headers": {
      "description": "Configuration for header propagation",
      "type": "object",
      "properties": {
        "all": {
          "description": "Rules to apply to all subgraphs",
          "type": "object",
          "required": [
            "request"
          ],
          "properties": {
            "request": {
              "description": "Propagate/Insert/Remove headers from request",
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": [
                      "insert"
                    ],
                    "properties": {
                      "insert": {
                        "description": "Insert header",
                        "anyOf": [
                          {
                            "description": "Insert static header",
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "description": "The name of the header",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value for the header",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "description": "Insert header with a value coming from context key (works only for a string in the context)",
                            "type": "object",
                            "required": [
                              "from_context",
                              "name"
                            ],
                            "properties": {
                              "from_context": {
                                "description": "Specify context key to fetch value",
                                "type": "string"
                              },
                              "name": {
                                "description": "Specify header name",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "description": "Insert header with a value coming from body",
                            "type": "object",
                            "required": [
                              "name",
                              "path"
                            ],
                            "properties": {
                              "default": {
                                "description": "The default if the path in the body did not resolve to an element",
                                "type": "string",
                                "nullable": true
                              },
                              "name": {
                                "description": "The target header name",
                                "type": "string"
                              },
                              "path": {
                                "description": "The path in the request body",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "remove"
                    ],
                    "properties": {
                      "remove": {
                        "description": "Remove header",
                        "oneOf": [
                          {
                            "description": "Remove a header given a header name",
                            "type": "object",
                            "required": [
                              "named"
                            ],
                            "properties": {
                              "named": {
                                "description": "Remove a header given a header name",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "description": "Remove a header given a regex matching header name",
                            "type": "object",
                            "required": [
                              "matching"
                            ],
                            "properties": {
                              "matching": {
                                "description": "Remove a header given a regex matching against the header name",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "propagate"
                    ],
                    "properties": {
                      "propagate": {
                        "description": "Propagate header",
                        "anyOf": [
                          {
                            "description": "Propagate header given a header name",
                            "type": "object",
                            "required": [
                              "named"
                            ],
                            "properties": {
                              "default": {
                                "description": "Default value for the header.",
                                "type": "string",
                                "nullable": true
                              },
                              "named": {
                                "description": "The source header name",
                                "type": "string"
                              },
                              "rename": {
                                "description": "An optional target header name",
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "description": "Propagate header given a regex to match header name",
                            "type": "object",
                            "required": [
                              "matching"
                            ],
                            "properties": {
                              "matching": {
                                "description": "The regex on header name",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                ]
              }
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "subgraphs": {
          "description": "Rules to specific subgraphs",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "required": [
              "request"
            ],
            "properties": {
              "request": {
                "description": "Propagate/Insert/Remove headers from request",
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "required": [
                        "insert"
                      ],
                      "properties": {
                        "insert": {
                          "description": "Insert header",
                          "anyOf": [
                            {
                              "description": "Insert static header",
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "description": "The name of the header",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The value for the header",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "description": "Insert header with a value coming from context key (works only for a string in the context)",
                              "type": "object",
                              "required": [
                                "from_context",
                                "name"
                              ],
                              "properties": {
                                "from_context": {
                                  "description": "Specify context key to fetch value",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Specify header name",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "description": "Insert header with a value coming from body",
                              "type": "object",
                              "required": [
                                "name",
                                "path"
                              ],
                              "properties": {
                                "default": {
                                  "description": "The default if the path in the body did not resolve to an element",
                                  "type": "string",
                                  "nullable": true
                                },
                                "name": {
                                  "description": "The target header name",
                                  "type": "string"
                                },
                                "path": {
                                  "description": "The path in the request body",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "required": [
                        "remove"
                      ],
                      "properties": {
                        "remove": {
                          "description": "Remove header",
                          "oneOf": [
                            {
                              "description": "Remove a header given a header name",
                              "type": "object",
                              "required": [
                                "named"
                              ],
                              "properties": {
                                "named": {
                                  "description": "Remove a header given a header name",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "description": "Remove a header given a regex matching header name",
                              "type": "object",
                              "required": [
                                "matching"
                              ],
                              "properties": {
                                "matching": {
                                  "description": "Remove a header given a regex matching against the header name",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "required": [
                        "propagate"
                      ],
                      "properties": {
                        "propagate": {
                          "description": "Propagate header",
                          "anyOf": [
                            {
                              "description": "Propagate header given a header name",
                              "type": "object",
                              "required": [
                                "named"
                              ],
                              "properties": {
                                "default": {
                                  "description": "Default value for the header.",
                                  "type": "string",
                                  "nullable": true
                                },
                                "named": {
                                  "description": "The source header name",
                                  "type": "string"
                                },
                                "rename": {
                                  "description": "An optional target header name",
                                  "type": "string",
                                  "nullable": true
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "description": "Propagate header given a regex to match header name",
                              "type": "object",
                              "required": [
                                "matching"
                              ],
                              "properties": {
                                "matching": {
                                  "description": "The regex on header name",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                }
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "health_check": {
      "description": "Health check configuration",
      "default": {
        "listen": "127.0.0.1:8088",
        "enabled": true
      },
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Set to false to disable the health check endpoint",
          "default": true,
          "type": "boolean"
        },
        "listen": {
          "description": "The socket address and port to listen on Defaults to 127.0.0.1:8088",
          "default": "127.0.0.1:8088",
          "anyOf": [
            {
              "description": "Socket address.",
              "type": "string"
            },
            {
              "description": "Unix socket.",
              "type": "string"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "homepage": {
      "description": "Homepage configuration",
      "default": {
        "enabled": true,
        "graph_ref": null
      },
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Set to false to disable the homepage",
          "default": true,
          "type": "boolean"
        },
        "graph_ref": {
          "description": "Graph reference This will allow you to redirect from the Apollo Router landing page back to Apollo Studio Explorer",
          "default": null,
          "type": "string",
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "include_subgraph_errors": {
      "description": "Configuration for exposing errors that originate from subgraphs",
      "type": "object",
      "properties": {
        "all": {
          "description": "Include errors from all subgraphs",
          "default": false,
          "type": "boolean"
        },
        "subgraphs": {
          "description": "Include errors from specific subgraphs",
          "default": {},
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "additionalProperties": false
    },
    "limits": {
      "description": "Configuration for operation limits, parser limits, HTTP limits, etc.",
      "default": {
        "max_depth": null,
        "max_height": null,
        "max_root_fields": null,
        "max_aliases": null,
        "warn_only": false,
        "parser_max_recursion": 4096,
        "parser_max_tokens": 15000,
        "experimental_http_max_request_bytes": 2000000
      },
      "type": "object",
      "properties": {
        "experimental_http_max_request_bytes": {
          "description": "Limit the size of incoming HTTP requests read from the network, to protect against running out of memory. Default: 2000000 (2 MB)",
          "default": 2000000,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "max_aliases": {
          "description": "If set, requests with operations with more aliases than this maximum are rejected with a HTTP 400 Bad Request response and GraphQL error with `\"extensions\": {\"code\": \"MAX_ALIASES_LIMIT\"}`",
          "default": null,
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0,
          "nullable": true
        },
        "max_depth": {
          "description": "If set, requests with operations deeper than this maximum are rejected with a HTTP 400 Bad Request response and GraphQL error with `\"extensions\": {\"code\": \"MAX_DEPTH_LIMIT\"}`\n\nCounts depth of an operation, looking at its selection sets, including fields in fragments and inline fragments. The following example has a depth of 3.\n\n```graphql query getProduct { book { # 1 ...bookDetails } }\n\nfragment bookDetails on Book { details { # 2 ... on ProductDetailsBook { country # 3 } } } ```",
          "default": null,
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0,
          "nullable": true
        },
        "max_height": {
          "description": "If set, requests with operations higher than this maximum are rejected with a HTTP 400 Bad Request response and GraphQL error with `\"extensions\": {\"code\": \"MAX_DEPTH_LIMIT\"}`\n\nHeight is based on simple merging of fields using the same name or alias, but only within the same selection set. For example `name` here is only counted once and the query has height 3, not 4:\n\n```graphql query { name { first } name { last } } ```\n\nThis may change in a future version of Apollo Router to do [full field merging across fragments][merging] instead.\n\n[merging]: https://spec.graphql.org/October2021/#sec-Field-Selection-Merging]",
          "default": null,
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0,
          "nullable": true
        },
        "max_root_fields": {
          "description": "If set, requests with operations with more root fields than this maximum are rejected with a HTTP 400 Bad Request response and GraphQL error with `\"extensions\": {\"code\": \"MAX_ROOT_FIELDS_LIMIT\"}`\n\nThis limit counts only the top level fields in a selection set, including fragments and inline fragments.",
          "default": null,
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0,
          "nullable": true
        },
        "parser_max_recursion": {
          "description": "Limit recursion in the GraphQL parser to protect against stack overflow. default: 4096",
          "default": 4096,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "parser_max_tokens": {
          "description": "Limit the number of tokens the GraphQL parser processes before aborting.",
          "default": 15000,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "warn_only": {
          "description": "If set to true (which is the default is dev mode), requests that exceed a `max_*` limit are *not* rejected. Instead they are executed normally, and a warning is logged.",
          "default": false,
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "override_subgraph_url": {
      "description": "Subgraph URL mappings",
      "anyOf": [
        {
          "description": "Subgraph URL mappings",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "uri"
          }
        }
      ]
    },
    "persisted_queries": {
      "description": "Configures managed persisted queries",
      "default": {
        "enabled": false,
        "log_unknown": false,
        "safelist": {
          "enabled": false,
          "require_id": false
        }
      },
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Activates Persisted Queries (disabled by default)",
          "default": false,
          "type": "boolean"
        },
        "log_unknown": {
          "description": "Enabling this field configures the router to log any freeform GraphQL request that is not in the persisted query list",
          "default": false,
          "type": "boolean"
        },
        "safelist": {
          "description": "Restricts execution of operations that are not found in the Persisted Query List",
          "default": {
            "enabled": false,
            "require_id": false
          },
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Enables using the persisted query list as a safelist (disabled by default)",
              "default": false,
              "type": "boolean"
            },
            "require_id": {
              "description": "Enabling this field configures the router to reject any request that does not include the persisted query ID",
              "default": false,
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "plugins": {
      "description": "Plugin configuration",
      "default": null,
      "properties": {
        "experimental.broken": {
          "description": "This is a broken plugin for testing purposes only.",
          "type": "object",
          "required": [
            "enabled"
          ],
          "properties": {
            "enabled": {
              "description": "Enable the broken plugin.",
              "type": "boolean"
            }
          }
        },
        "experimental.expose_query_plan": {
          "description": "Expose query plan",
          "type": "boolean"
        },
        "experimental.restricted": {
          "description": "Restricted plugin (for testing purposes only)",
          "type": "object",
          "required": [
            "enabled"
          ],
          "properties": {
            "enabled": {
              "description": "Enable the restricted plugin (for testing purposes only)",
              "type": "boolean"
            }
          }
        },
        "test.always_fails_to_start": {
          "description": "Configuration for the test plugin",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "The name of the test",
              "type": "string"
            }
          }
        },
        "test.always_starts_and_stops": {
          "description": "Configuration for the test plugin",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "The name of the test",
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    "rhai": {
      "description": "Configuration for the Rhai Plugin",
      "type": "object",
      "properties": {
        "main": {
          "description": "The main entry point for Rhai script evaluation",
          "type": "string",
          "nullable": true
        },
        "scripts": {
          "description": "The directory where Rhai scripts can be found",
          "type": "string",
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "sandbox": {
      "description": "Sandbox configuration",
      "default": {
        "enabled": false
      },
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Set to true to enable sandbox",
          "default": false,
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "subscription": {
      "description": "Subscriptions configuration",
      "type": "object",
      "properties": {
        "enable_deduplication": {
          "description": "Enable the deduplication of subscription (for example if we detect the exact same request to subgraph we won't open a new websocket to the subgraph in passthrough mode) (default: true)",
          "default": true,
          "type": "boolean"
        },
        "enabled": {
          "description": "Enable subscription",
          "default": true,
          "type": "boolean"
        },
        "max_opened_subscriptions": {
          "description": "This is a limit to only have maximum X opened subscriptions at the same time. By default if it's not set there is no limit.",
          "default": null,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0,
          "nullable": true
        },
        "mode": {
          "description": "Select a subscription mode (callback or passthrough)",
          "default": {
            "preview_callback": null,
            "passthrough": null
          },
          "type": "object",
          "properties": {
            "passthrough": {
              "description": "Enable passthrough mode for subgraph(s)",
              "type": "object",
              "properties": {
                "all": {
                  "description": "Configuration for all subgraphs",
                  "default": null,
                  "type": "object",
                  "properties": {
                    "path": {
                      "description": "Path on which WebSockets are listening",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "protocol": {
                      "description": "Which WebSocket GraphQL protocol to use for this subgraph possible values are: 'graphql_ws' | 'graphql_transport_ws' (default: graphql_ws)",
                      "default": "graphql_ws",
                      "type": "string",
                      "enum": [
                        "graphql_ws",
                        "graphql_transport_ws"
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "nullable": true
                },
                "subgraphs": {
                  "description": "Configuration for specific subgraphs",
                  "default": {},
                  "type": "object",
                  "additionalProperties": {
                    "description": "WebSocket configuration for a specific subgraph",
                    "type": "object",
                    "properties": {
                      "path": {
                        "description": "Path on which WebSockets are listening",
                        "default": null,
                        "type": "string",
                        "nullable": true
                      },
                      "protocol": {
                        "description": "Which WebSocket GraphQL protocol to use for this subgraph possible values are: 'graphql_ws' | 'graphql_transport_ws' (default: graphql_ws)",
                        "default": "graphql_ws",
                        "type": "string",
                        "enum": [
                          "graphql_ws",
                          "graphql_transport_ws"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "preview_callback": {
              "description": "Enable callback mode for subgraph(s)",
              "type": "object",
              "required": [
                "public_url"
              ],
              "properties": {
                "listen": {
                  "description": "Listen address on which the callback must listen (default: 127.0.0.1:4000)",
                  "writeOnly": true,
                  "anyOf": [
                    {
                      "description": "Socket address.",
                      "type": "string"
                    },
                    {
                      "description": "Unix socket.",
                      "type": "string"
                    }
                  ],
                  "nullable": true
                },
                "path": {
                  "description": "Specify on which path you want to listen for callbacks (default: /callback)",
                  "writeOnly": true,
                  "type": "string",
                  "nullable": true
                },
                "public_url": {
                  "description": "URL used to access this router instance",
                  "type": "string"
                },
                "subgraphs": {
                  "description": "Specify on which subgraph we enable the callback mode for subscription If empty it applies to all subgraphs (passthrough mode takes precedence)",
                  "default": [],
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "uniqueItems": true
                }
              },
              "additionalProperties": false,
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "queue_capacity": {
          "description": "It represent the capacity of the in memory queue to know how many events we can keep in a buffer",
          "default": null,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0,
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "supergraph": {
      "description": "Configuration for the supergraph",
      "default": {
        "listen": "127.0.0.1:4000",
        "path": "/",
        "introspection": false,
        "experimental_reuse_query_fragments": null,
        "defer_support": true,
        "query_planning": {
          "experimental_cache": {
            "in_memory": {
              "limit": 512
            },
            "redis": null
          },
          "warmed_up_queries": null
        }
      },
      "type": "object",
      "properties": {
        "defer_support": {
          "description": "Set to false to disable defer support",
          "default": true,
          "type": "boolean"
        },
        "experimental_reuse_query_fragments": {
          "description": "Enable reuse of query fragments Default: depends on the federation version",
          "default": null,
          "type": "boolean",
          "nullable": true
        },
        "introspection": {
          "description": "Enable introspection Default: false",
          "default": false,
          "type": "boolean"
        },
        "listen": {
          "description": "The socket address and port to listen on Defaults to 127.0.0.1:4000",
          "default": "127.0.0.1:4000",
          "anyOf": [
            {
              "description": "Socket address.",
              "type": "string"
            },
            {
              "description": "Unix socket.",
              "type": "string"
            }
          ]
        },
        "path": {
          "description": "The HTTP path on which GraphQL requests will be served. default: \"/\"",
          "default": "/",
          "type": "string"
        },
        "query_planning": {
          "description": "Query planning options",
          "default": {
            "experimental_cache": {
              "in_memory": {
                "limit": 512
              },
              "redis": null
            },
            "warmed_up_queries": null
          },
          "type": "object",
          "properties": {
            "experimental_cache": {
              "description": "Cache configuration",
              "default": {
                "in_memory": {
                  "limit": 512
                },
                "redis": null
              },
              "type": "object",
              "properties": {
                "in_memory": {
                  "description": "Configures the in memory cache (always active)",
                  "default": {
                    "limit": 512
                  },
                  "type": "object",
                  "required": [
                    "limit"
                  ],
                  "properties": {
                    "limit": {
                      "description": "Number of entries in the Least Recently Used cache",
                      "type": "integer",
                      "format": "uint",
                      "minimum": 1.0
                    }
                  },
                  "additionalProperties": false
                },
                "redis": {
                  "description": "Configures and activates the Redis cache",
                  "default": null,
                  "type": "object",
                  "required": [
                    "urls"
                  ],
                  "properties": {
                    "timeout": {
                      "description": "Redis request timeout (default: 2ms)",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "urls": {
                      "description": "List of URLs to the Redis cluster",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "additionalProperties": false,
                  "nullable": true
                }
              },
              "additionalProperties": false
            },
            "warmed_up_queries": {
              "description": "Warms up the cache on reloads by running the query plan over a list of the most used queries (from the in memory cache) Configures the number of queries warmed up. Defaults to 1/3 of the in memory cache",
              "default": null,
              "type": "integer",
              "format": "uint",
              "minimum": 0.0,
              "nullable": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "telemetry": {
      "description": "Telemetry configuration",
      "type": "object",
      "properties": {
        "apollo": {
          "description": "Apollo reporting configuration",
          "type": "object",
          "properties": {
            "batch_processor": {
              "description": "Configuration for batch processing.",
              "type": "object",
              "properties": {
                "max_concurrent_exports": {
                  "description": "Maximum number of concurrent exports\n\nLimits the number of spawned tasks for exports and thus memory consumed by an exporter. A value of 1 will cause exports to be performed synchronously on the BatchSpanProcessor task. The default is 1.",
                  "default": 1,
                  "type": "integer",
                  "format": "uint",
                  "minimum": 0.0
                },
                "max_export_batch_size": {
                  "description": "The maximum number of spans to process in a single batch. If there are more than one batch worth of spans then it processes multiple batches of spans one batch after the other without any delay. The default value is 512.",
                  "default": 512,
                  "type": "integer",
                  "format": "uint",
                  "minimum": 0.0
                },
                "max_export_timeout": {
                  "description": "The maximum duration to export a batch of data. The default value is 30 seconds.",
                  "default": {
                    "secs": 30,
                    "nanos": 0
                  },
                  "type": "string"
                },
                "max_queue_size": {
                  "description": "The maximum queue size to buffer spans for delayed processing. If the queue gets full it drops the spans. The default value of is 2048.",
                  "default": 2048,
                  "type": "integer",
                  "format": "uint",
                  "minimum": 0.0
                },
                "scheduled_delay": {
                  "description": "The delay interval in milliseconds between two consecutive processing of batches. The default value is 5 seconds.",
                  "default": {
                    "secs": 5,
                    "nanos": 0
                  },
                  "type": "string"
                }
              }
            },
            "buffer_size": {
              "description": "The buffer size for sending traces to Apollo. Increase this if you are experiencing lost traces.",
              "default": 10000,
              "type": "integer",
              "format": "uint",
              "minimum": 1.0
            },
            "client_name_header": {
              "description": "The name of the header to extract from requests when populating 'client nane' for traces and metrics in Apollo Studio.",
              "default": "apollographql-client-name",
              "type": "string",
              "nullable": true
            },
            "client_version_header": {
              "description": "The name of the header to extract from requests when populating 'client version' for traces and metrics in Apollo Studio.",
              "default": "apollographql-client-version",
              "type": "string",
              "nullable": true
            },
            "endpoint": {
              "description": "The Apollo Studio endpoint for exporting traces and metrics.",
              "default": "https://usage-reporting.api.apollographql.com/api/ingress/traces",
              "type": "string"
            },
            "errors": {
              "description": "Configure the way errors are transmitted to Apollo Studio",
              "type": "object",
              "properties": {
                "subgraph": {
                  "description": "Handling of errors coming from subgraph",
                  "type": "object",
                  "properties": {
                    "all": {
                      "description": "Handling of errors coming from all subgraphs",
                      "type": "object",
                      "properties": {
                        "redact": {
                          "description": "Redact subgraph errors to Apollo Studio",
                          "default": true,
                          "type": "boolean"
                        },
                        "send": {
                          "description": "Send subgraph errors to Apollo Studio",
                          "default": true,
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    },
                    "subgraphs": {
                      "description": "Handling of errors coming from specified subgraphs",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "redact": {
                            "description": "Redact subgraph errors to Apollo Studio",
                            "default": true,
                            "type": "boolean"
                          },
                          "send": {
                            "description": "Send subgraph errors to Apollo Studio",
                            "default": true,
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "experimental_otlp_endpoint": {
              "description": "The Apollo Studio endpoint for exporting traces and metrics.",
              "default": "https://usage-reporting.api.apollographql.com/",
              "type": "string"
            },
            "field_level_instrumentation_sampler": {
              "description": "Field level instrumentation for subgraphs via ftv1. ftv1 tracing can cause performance issues as it is transmitted in band with subgraph responses.",
              "anyOf": [
                {
                  "description": "Sample a given fraction. Fractions >= 1 will always sample.",
                  "type": "number",
                  "format": "double"
                },
                {
                  "oneOf": [
                    {
                      "description": "Always sample",
                      "type": "string",
                      "enum": [
                        "always_on"
                      ]
                    },
                    {
                      "description": "Never sample",
                      "type": "string",
                      "enum": [
                        "always_off"
                      ]
                    }
                  ]
                }
              ]
            },
            "send_headers": {
              "description": "To configure which request header names and values are included in trace data that's sent to Apollo Studio.",
              "oneOf": [
                {
                  "description": "Don't send any headers",
                  "type": "string",
                  "enum": [
                    "none"
                  ]
                },
                {
                  "description": "Send all headers",
                  "type": "string",
                  "enum": [
                    "all"
                  ]
                },
                {
                  "description": "Send only the headers specified",
                  "type": "object",
                  "required": [
                    "only"
                  ],
                  "properties": {
                    "only": {
                      "description": "Send only the headers specified",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "description": "Send all headers except those specified",
                  "type": "object",
                  "required": [
                    "except"
                  ],
                  "properties": {
                    "except": {
                      "description": "Send all headers except those specified",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            },
            "send_variable_values": {
              "description": "To configure which GraphQL variable values are included in trace data that's sent to Apollo Studio",
              "oneOf": [
                {
                  "description": "Dont send any variables",
                  "type": "string",
                  "enum": [
                    "none"
                  ]
                },
                {
                  "description": "Send all variables",
                  "type": "string",
                  "enum": [
                    "all"
                  ]
                },
                {
                  "description": "Send only the variables specified",
                  "type": "object",
                  "required": [
                    "only"
                  ],
                  "properties": {
                    "only": {
                      "description": "Send only the variables specified",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "description": "Send all variables except those specified",
                  "type": "object",
                  "required": [
                    "except"
                  ],
                  "properties": {
                    "except": {
                      "description": "Send all variables except those specified",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "experimental_logging": {
          "description": "Logging configuration",
          "type": "object",
          "properties": {
            "display_filename": {
              "description": "Display the filename in the logs",
              "default": false,
              "type": "boolean"
            },
            "display_line_number": {
              "description": "Display the line number in the logs",
              "default": false,
              "type": "boolean"
            },
            "display_target": {
              "description": "Display the target in the logs",
              "default": false,
              "type": "boolean"
            },
            "format": {
              "description": "Log format",
              "oneOf": [
                {
                  "description": "Pretty text format (default if you're running from a tty)",
                  "type": "string",
                  "enum": [
                    "pretty"
                  ]
                },
                {
                  "description": "Json log format",
                  "type": "string",
                  "enum": [
                    "json"
                  ]
                }
              ]
            },
            "when_header": {
              "description": "Log configuration to log request and response for subgraphs and supergraph",
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "description": "Match header value given a regex to display logs",
                    "type": "object",
                    "required": [
                      "match",
                      "name"
                    ],
                    "properties": {
                      "body": {
                        "description": "Display request/response body (default: false)",
                        "default": false,
                        "type": "boolean"
                      },
                      "headers": {
                        "description": "Display request/response headers (default: false)",
                        "default": false,
                        "type": "boolean"
                      },
                      "match": {
                        "description": "Regex to match the header value",
                        "type": "string"
                      },
                      "name": {
                        "description": "Header name",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "description": "Match header value given a value to display logs",
                    "type": "object",
                    "required": [
                      "name",
                      "value"
                    ],
                    "properties": {
                      "body": {
                        "description": "Display request/response body (default: false)",
                        "default": false,
                        "type": "boolean"
                      },
                      "headers": {
                        "description": "Display request/response headers (default: false)",
                        "default": false,
                        "type": "boolean"
                      },
                      "name": {
                        "description": "Header name",
                        "type": "string"
                      },
                      "value": {
                        "description": "Header value",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                ]
              }
            }
          },
          "additionalProperties": false
        },
        "metrics": {
          "description": "Metrics configuration",
          "type": "object",
          "properties": {
            "common": {
              "description": "Common metrics configuration across all exporters",
              "type": "object",
              "properties": {
                "attributes": {
                  "description": "Configuration to add custom labels/attributes to metrics",
                  "type": "object",
                  "properties": {
                    "subgraph": {
                      "description": "Configuration to forward header values or body values from subgraph request/response in metric attributes/labels",
                      "type": "object",
                      "properties": {
                        "all": {
                          "description": "Attributes for all subgraphs",
                          "type": "object",
                          "properties": {
                            "context": {
                              "description": "Configuration to forward values from the context to custom attributes/labels in metrics",
                              "type": "array",
                              "items": {
                                "description": "Configuration to forward context values in metric attributes/labels",
                                "type": "object",
                                "required": [
                                  "named"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "The optional default value",
                                    "anyOf": [
                                      {
                                        "description": "bool values",
                                        "type": "boolean"
                                      },
                                      {
                                        "description": "i64 values",
                                        "type": "integer",
                                        "format": "int64"
                                      },
                                      {
                                        "description": "f64 values",
                                        "type": "number",
                                        "format": "double"
                                      },
                                      {
                                        "description": "String values",
                                        "type": "string"
                                      },
                                      {
                                        "description": "Array of homogeneous values",
                                        "anyOf": [
                                          {
                                            "description": "Array of bools",
                                            "type": "array",
                                            "items": {
                                              "type": "boolean"
                                            }
                                          },
                                          {
                                            "description": "Array of integers",
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int64"
                                            }
                                          },
                                          {
                                            "description": "Array of floats",
                                            "type": "array",
                                            "items": {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          },
                                          {
                                            "description": "Array of strings",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "nullable": true
                                  },
                                  "named": {
                                    "description": "The name of the value in the context",
                                    "type": "string"
                                  },
                                  "rename": {
                                    "description": "The optional output name",
                                    "type": "string",
                                    "nullable": true
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "errors": {
                              "description": "Configuration to forward values from the error to custom attributes/labels in metrics",
                              "type": "object",
                              "properties": {
                                "extensions": {
                                  "description": "Forward extensions values as custom attributes/labels in metrics",
                                  "type": "array",
                                  "items": {
                                    "description": "Configuration to forward body values in metric attributes/labels",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "path"
                                    ],
                                    "properties": {
                                      "default": {
                                        "description": "The optional default value",
                                        "anyOf": [
                                          {
                                            "description": "bool values",
                                            "type": "boolean"
                                          },
                                          {
                                            "description": "i64 values",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          {
                                            "description": "f64 values",
                                            "type": "number",
                                            "format": "double"
                                          },
                                          {
                                            "description": "String values",
                                            "type": "string"
                                          },
                                          {
                                            "description": "Array of homogeneous values",
                                            "anyOf": [
                                              {
                                                "description": "Array of bools",
                                                "type": "array",
                                                "items": {
                                                  "type": "boolean"
                                                }
                                              },
                                              {
                                                "description": "Array of integers",
                                                "type": "array",
                                                "items": {
                                                  "type": "integer",
                                                  "format": "int64"
                                                }
                                              },
                                              {
                                                "description": "Array of floats",
                                                "type": "array",
                                                "items": {
                                                  "type": "number",
                                                  "format": "double"
                                                }
                                              },
                                              {
                                                "description": "Array of strings",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "nullable": true
                                      },
                                      "name": {
                                        "description": "The name of the attribute",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "The path in the body",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "include_messages": {
                                  "description": "Will include the error message in a \"message\" attribute",
                                  "default": null,
                                  "type": "boolean",
                                  "nullable": true
                                }
                              },
                              "additionalProperties": false
                            },
                            "request": {
                              "description": "Configuration to forward headers or body values from the request to custom attributes/labels in metrics",
                              "type": "object",
                              "properties": {
                                "body": {
                                  "description": "Forward body values as custom attributes/labels in metrics",
                                  "type": "array",
                                  "items": {
                                    "description": "Configuration to forward body values in metric attributes/labels",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "path"
                                    ],
                                    "properties": {
                                      "default": {
                                        "description": "The optional default value",
                                        "anyOf": [
                                          {
                                            "description": "bool values",
                                            "type": "boolean"
                                          },
                                          {
                                            "description": "i64 values",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          {
                                            "description": "f64 values",
                                            "type": "number",
                                            "format": "double"
                                          },
                                          {
                                            "description": "String values",
                                            "type": "string"
                                          },
                                          {
                                            "description": "Array of homogeneous values",
                                            "anyOf": [
                                              {
                                                "description": "Array of bools",
                                                "type": "array",
                                                "items": {
                                                  "type": "boolean"
                                                }
                                              },
                                              {
                                                "description": "Array of integers",
                                                "type": "array",
                                                "items": {
                                                  "type": "integer",
                                                  "format": "int64"
                                                }
                                              },
                                              {
                                                "description": "Array of floats",
                                                "type": "array",
                                                "items": {
                                                  "type": "number",
                                                  "format": "double"
                                                }
                                              },
                                              {
                                                "description": "Array of strings",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "nullable": true
                                      },
                                      "name": {
                                        "description": "The name of the attribute",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "The path in the body",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "header": {
                                  "description": "Forward header values as custom attributes/labels in metrics",
                                  "type": "array",
                                  "items": {
                                    "description": "Configuration to forward header values in metric labels",
                                    "anyOf": [
                                      {
                                        "description": "Match via header name",
                                        "type": "object",
                                        "required": [
                                          "named"
                                        ],
                                        "properties": {
                                          "default": {
                                            "description": "The optional default value",
                                            "anyOf": [
                                              {
                                                "description": "bool values",
                                                "type": "boolean"
                                              },
                                              {
                                                "description": "i64 values",
                                                "type": "integer",
                                                "format": "int64"
                                              },
                                              {
                                                "description": "f64 values",
                                                "type": "number",
                                                "format": "double"
                                              },
                                              {
                                                "description": "String values",
                                                "type": "string"
                                              },
                                              {
                                                "description": "Array of homogeneous values",
                                                "anyOf": [
                                                  {
                                                    "description": "Array of bools",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "boolean"
                                                    }
                                                  },
                                                  {
                                                    "description": "Array of integers",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  },
                                                  {
                                                    "description": "Array of floats",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "number",
                                                      "format": "double"
                                                    }
                                                  },
                                                  {
                                                    "description": "Array of strings",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                ]
                                              }
                                            ],
                                            "nullable": true
                                          },
                                          "named": {
                                            "description": "The name of the header",
                                            "type": "string"
                                          },
                                          "rename": {
                                            "description": "The optional output name",
                                            "type": "string",
                                            "nullable": true
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "description": "Match via rgex",
                                        "type": "object",
                                        "required": [
                                          "matching"
                                        ],
                                        "properties": {
                                          "matching": {
                                            "description": "Using a regex on the header name",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            "response": {
                              "description": "Configuration to forward headers or body values from the response to custom attributes/labels in metrics",
                              "type": "object",
                              "properties": {
                                "body": {
                                  "description": "Forward body values as custom attributes/labels in metrics",
                                  "type": "array",
                                  "items": {
                                    "description": "Configuration to forward body values in metric attributes/labels",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "path"
                                    ],
                                    "properties": {
                                      "default": {
                                        "description": "The optional default value",
                                        "anyOf": [
                                          {
                                            "description": "bool values",
                                            "type": "boolean"
                                          },
                                          {
                                            "description": "i64 values",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          {
                                            "description": "f64 values",
                                            "type": "number",
                                            "format": "double"
                                          },
                                          {
                                            "description": "String values",
                                            "type": "string"
                                          },
                                          {
                                            "description": "Array of homogeneous values",
                                            "anyOf": [
                                              {
                                                "description": "Array of bools",
                                                "type": "array",
                                                "items": {
                                                  "type": "boolean"
                                                }
                                              },
                                              {
                                                "description": "Array of integers",
                                                "type": "array",
                                                "items": {
                                                  "type": "integer",
                                                  "format": "int64"
                                                }
                                              },
                                              {
                                                "description": "Array of floats",
                                                "type": "array",
                                                "items": {
                                                  "type": "number",
                                                  "format": "double"
                                                }
                                              },
                                              {
                                                "description": "Array of strings",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "nullable": true
                                      },
                                      "name": {
                                        "description": "The name of the attribute",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "The path in the body",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "header": {
                                  "description": "Forward header values as custom attributes/labels in metrics",
                                  "type": "array",
                                  "items": {
                                    "description": "Configuration to forward header values in metric labels",
                                    "anyOf": [
                                      {
                                        "description": "Match via header name",
                                        "type": "object",
                                        "required": [
                                          "named"
                                        ],
                                        "properties": {
                                          "default": {
                                            "description": "The optional default value",
                                            "anyOf": [
                                              {
                                                "description": "bool values",
                                                "type": "boolean"
                                              },
                                              {
                                                "description": "i64 values",
                                                "type": "integer",
                                                "format": "int64"
                                              },
                                              {
                                                "description": "f64 values",
                                                "type": "number",
                                                "format": "double"
                                              },
                                              {
                                                "description": "String values",
                                                "type": "string"
                                              },
                                              {
                                                "description": "Array of homogeneous values",
                                                "anyOf": [
                                                  {
                                                    "description": "Array of bools",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "boolean"
                                                    }
                                                  },
                                                  {
                                                    "description": "Array of integers",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  },
                                                  {
                                                    "description": "Array of floats",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "number",
                                                      "format": "double"
                                                    }
                                                  },
                                                  {
                                                    "description": "Array of strings",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                ]
                                              }
                                            ],
                                            "nullable": true
                                          },
                                          "named": {
                                            "description": "The name of the header",
                                            "type": "string"
                                          },
                                          "rename": {
                                            "description": "The optional output name",
                                            "type": "string",
                                            "nullable": true
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "description": "Match via rgex",
                                        "type": "object",
                                        "required": [
                                          "matching"
                                        ],
                                        "properties": {
                                          "matching": {
                                            "description": "Using a regex on the header name",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            "static": {
                              "description": "Configuration to insert custom attributes/labels in metrics",
                              "type": "array",
                              "items": {
                                "description": "Configuration to insert custom attributes/labels in metrics",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The name of the attribute to insert",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The value of the attribute to insert",
                                    "anyOf": [
                                      {
                                        "description": "bool values",
                                        "type": "boolean"
                                      },
                                      {
                                        "description": "i64 values",
                                        "type": "integer",
                                        "format": "int64"
                                      },
                                      {
                                        "description": "f64 values",
                                        "type": "number",
                                        "format": "double"
                                      },
                                      {
                                        "description": "String values",
                                        "type": "string"
                                      },
                                      {
                                        "description": "Array of homogeneous values",
                                        "anyOf": [
                                          {
                                            "description": "Array of bools",
                                            "type": "array",
                                            "items": {
                                              "type": "boolean"
                                            }
                                          },
                                          {
                                            "description": "Array of integers",
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int64"
                                            }
                                          },
                                          {
                                            "description": "Array of floats",
                                            "type": "array",
                                            "items": {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          },
                                          {
                                            "description": "Array of strings",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "subgraphs": {
                          "description": "Attributes per subgraph",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Configuration to add custom attributes/labels on metrics to subgraphs",
                            "type": "object",
                            "properties": {
                              "context": {
                                "description": "Configuration to forward values from the context to custom attributes/labels in metrics",
                                "type": "array",
                                "items": {
                                  "description": "Configuration to forward context values in metric attributes/labels",
                                  "type": "object",
                                  "required": [
                                    "named"
                                  ],
                                  "properties": {
                                    "default": {
                                      "description": "The optional default value",
                                      "anyOf": [
                                        {
                                          "description": "bool values",
                                          "type": "boolean"
                                        },
                                        {
                                          "description": "i64 values",
                                          "type": "integer",
                                          "format": "int64"
                                        },
                                        {
                                          "description": "f64 values",
                                          "type": "number",
                                          "format": "double"
                                        },
                                        {
                                          "description": "String values",
                                          "type": "string"
                                        },
                                        {
                                          "description": "Array of homogeneous values",
                                          "anyOf": [
                                            {
                                              "description": "Array of bools",
                                              "type": "array",
                                              "items": {
                                                "type": "boolean"
                                              }
                                            },
                                            {
                                              "description": "Array of integers",
                                              "type": "array",
                                              "items": {
                                                "type": "integer",
                                                "format": "int64"
                                              }
                                            },
                                            {
                                              "description": "Array of floats",
                                              "type": "array",
                                              "items": {
                                                "type": "number",
                                                "format": "double"
                                              }
                                            },
                                            {
                                              "description": "Array of strings",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          ]
                                        }
                                      ],
                                      "nullable": true
                                    },
                                    "named": {
                                      "description": "The name of the value in the context",
                                      "type": "string"
                                    },
                                    "rename": {
                                      "description": "The optional output name",
                                      "type": "string",
                                      "nullable": true
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "errors": {
                                "description": "Configuration to forward values from the error to custom attributes/labels in metrics",
                                "type": "object",
                                "properties": {
                                  "extensions": {
                                    "description": "Forward extensions values as custom attributes/labels in metrics",
                                    "type": "array",
                                    "items": {
                                      "description": "Configuration to forward body values in metric attributes/labels",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "path"
                                      ],
                                      "properties": {
                                        "default": {
                                          "description": "The optional default value",
                                          "anyOf": [
                                            {
                                              "description": "bool values",
                                              "type": "boolean"
                                            },
                                            {
                                              "description": "i64 values",
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            {
                                              "description": "f64 values",
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "description": "String values",
                                              "type": "string"
                                            },
                                            {
                                              "description": "Array of homogeneous values",
                                              "anyOf": [
                                                {
                                                  "description": "Array of bools",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                {
                                                  "description": "Array of integers",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                {
                                                  "description": "Array of floats",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "number",
                                                    "format": "double"
                                                  }
                                                },
                                                {
                                                  "description": "Array of strings",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              ]
                                            }
                                          ],
                                          "nullable": true
                                        },
                                        "name": {
                                          "description": "The name of the attribute",
                                          "type": "string"
                                        },
                                        "path": {
                                          "description": "The path in the body",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "include_messages": {
                                    "description": "Will include the error message in a \"message\" attribute",
                                    "default": null,
                                    "type": "boolean",
                                    "nullable": true
                                  }
                                },
                                "additionalProperties": false
                              },
                              "request": {
                                "description": "Configuration to forward headers or body values from the request to custom attributes/labels in metrics",
                                "type": "object",
                                "properties": {
                                  "body": {
                                    "description": "Forward body values as custom attributes/labels in metrics",
                                    "type": "array",
                                    "items": {
                                      "description": "Configuration to forward body values in metric attributes/labels",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "path"
                                      ],
                                      "properties": {
                                        "default": {
                                          "description": "The optional default value",
                                          "anyOf": [
                                            {
                                              "description": "bool values",
                                              "type": "boolean"
                                            },
                                            {
                                              "description": "i64 values",
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            {
                                              "description": "f64 values",
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "description": "String values",
                                              "type": "string"
                                            },
                                            {
                                              "description": "Array of homogeneous values",
                                              "anyOf": [
                                                {
                                                  "description": "Array of bools",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                {
                                                  "description": "Array of integers",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                {
                                                  "description": "Array of floats",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "number",
                                                    "format": "double"
                                                  }
                                                },
                                                {
                                                  "description": "Array of strings",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              ]
                                            }
                                          ],
                                          "nullable": true
                                        },
                                        "name": {
                                          "description": "The name of the attribute",
                                          "type": "string"
                                        },
                                        "path": {
                                          "description": "The path in the body",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "header": {
                                    "description": "Forward header values as custom attributes/labels in metrics",
                                    "type": "array",
                                    "items": {
                                      "description": "Configuration to forward header values in metric labels",
                                      "anyOf": [
                                        {
                                          "description": "Match via header name",
                                          "type": "object",
                                          "required": [
                                            "named"
                                          ],
                                          "properties": {
                                            "default": {
                                              "description": "The optional default value",
                                              "anyOf": [
                                                {
                                                  "description": "bool values",
                                                  "type": "boolean"
                                                },
                                                {
                                                  "description": "i64 values",
                                                  "type": "integer",
                                                  "format": "int64"
                                                },
                                                {
                                                  "description": "f64 values",
                                                  "type": "number",
                                                  "format": "double"
                                                },
                                                {
                                                  "description": "String values",
                                                  "type": "string"
                                                },
                                                {
                                                  "description": "Array of homogeneous values",
                                                  "anyOf": [
                                                    {
                                                      "description": "Array of bools",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "boolean"
                                                      }
                                                    },
                                                    {
                                                      "description": "Array of integers",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      }
                                                    },
                                                    {
                                                      "description": "Array of floats",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "number",
                                                        "format": "double"
                                                      }
                                                    },
                                                    {
                                                      "description": "Array of strings",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  ]
                                                }
                                              ],
                                              "nullable": true
                                            },
                                            "named": {
                                              "description": "The name of the header",
                                              "type": "string"
                                            },
                                            "rename": {
                                              "description": "The optional output name",
                                              "type": "string",
                                              "nullable": true
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        {
                                          "description": "Match via rgex",
                                          "type": "object",
                                          "required": [
                                            "matching"
                                          ],
                                          "properties": {
                                            "matching": {
                                              "description": "Using a regex on the header name",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "response": {
                                "description": "Configuration to forward headers or body values from the response to custom attributes/labels in metrics",
                                "type": "object",
                                "properties": {
                                  "body": {
                                    "description": "Forward body values as custom attributes/labels in metrics",
                                    "type": "array",
                                    "items": {
                                      "description": "Configuration to forward body values in metric attributes/labels",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "path"
                                      ],
                                      "properties": {
                                        "default": {
                                          "description": "The optional default value",
                                          "anyOf": [
                                            {
                                              "description": "bool values",
                                              "type": "boolean"
                                            },
                                            {
                                              "description": "i64 values",
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            {
                                              "description": "f64 values",
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "description": "String values",
                                              "type": "string"
                                            },
                                            {
                                              "description": "Array of homogeneous values",
                                              "anyOf": [
                                                {
                                                  "description": "Array of bools",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                {
                                                  "description": "Array of integers",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                {
                                                  "description": "Array of floats",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "number",
                                                    "format": "double"
                                                  }
                                                },
                                                {
                                                  "description": "Array of strings",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              ]
                                            }
                                          ],
                                          "nullable": true
                                        },
                                        "name": {
                                          "description": "The name of the attribute",
                                          "type": "string"
                                        },
                                        "path": {
                                          "description": "The path in the body",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "header": {
                                    "description": "Forward header values as custom attributes/labels in metrics",
                                    "type": "array",
                                    "items": {
                                      "description": "Configuration to forward header values in metric labels",
                                      "anyOf": [
                                        {
                                          "description": "Match via header name",
                                          "type": "object",
                                          "required": [
                                            "named"
                                          ],
                                          "properties": {
                                            "default": {
                                              "description": "The optional default value",
                                              "anyOf": [
                                                {
                                                  "description": "bool values",
                                                  "type": "boolean"
                                                },
                                                {
                                                  "description": "i64 values",
                                                  "type": "integer",
                                                  "format": "int64"
                                                },
                                                {
                                                  "description": "f64 values",
                                                  "type": "number",
                                                  "format": "double"
                                                },
                                                {
                                                  "description": "String values",
                                                  "type": "string"
                                                },
                                                {
                                                  "description": "Array of homogeneous values",
                                                  "anyOf": [
                                                    {
                                                      "description": "Array of bools",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "boolean"
                                                      }
                                                    },
                                                    {
                                                      "description": "Array of integers",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      }
                                                    },
                                                    {
                                                      "description": "Array of floats",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "number",
                                                        "format": "double"
                                                      }
                                                    },
                                                    {
                                                      "description": "Array of strings",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  ]
                                                }
                                              ],
                                              "nullable": true
                                            },
                                            "named": {
                                              "description": "The name of the header",
                                              "type": "string"
                                            },
                                            "rename": {
                                              "description": "The optional output name",
                                              "type": "string",
                                              "nullable": true
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        {
                                          "description": "Match via rgex",
                                          "type": "object",
                                          "required": [
                                            "matching"
                                          ],
                                          "properties": {
                                            "matching": {
                                              "description": "Using a regex on the header name",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "static": {
                                "description": "Configuration to insert custom attributes/labels in metrics",
                                "type": "array",
                                "items": {
                                  "description": "Configuration to insert custom attributes/labels in metrics",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The name of the attribute to insert",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The value of the attribute to insert",
                                      "anyOf": [
                                        {
                                          "description": "bool values",
                                          "type": "boolean"
                                        },
                                        {
                                          "description": "i64 values",
                                          "type": "integer",
                                          "format": "int64"
                                        },
                                        {
                                          "description": "f64 values",
                                          "type": "number",
                                          "format": "double"
                                        },
                                        {
                                          "description": "String values",
                                          "type": "string"
                                        },
                                        {
                                          "description": "Array of homogeneous values",
                                          "anyOf": [
                                            {
                                              "description": "Array of bools",
                                              "type": "array",
                                              "items": {
                                                "type": "boolean"
                                              }
                                            },
                                            {
                                              "description": "Array of integers",
                                              "type": "array",
                                              "items": {
                                                "type": "integer",
                                                "format": "int64"
                                              }
                                            },
                                            {
                                              "description": "Array of floats",
                                              "type": "array",
                                              "items": {
                                                "type": "number",
                                                "format": "double"
                                              }
                                            },
                                            {
                                              "description": "Array of strings",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "supergraph": {
                      "description": "Configuration to forward header values or body values from router request/response in metric attributes/labels",
                      "type": "object",
                      "properties": {
                        "context": {
                          "description": "Configuration to forward values from the context to custom attributes/labels in metrics",
                          "type": "array",
                          "items": {
                            "description": "Configuration to forward context values in metric attributes/labels",
                            "type": "object",
                            "required": [
                              "named"
                            ],
                            "properties": {
                              "default": {
                                "description": "The optional default value",
                                "anyOf": [
                                  {
                                    "description": "bool values",
                                    "type": "boolean"
                                  },
                                  {
                                    "description": "i64 values",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  {
                                    "description": "f64 values",
                                    "type": "number",
                                    "format": "double"
                                  },
                                  {
                                    "description": "String values",
                                    "type": "string"
                                  },
                                  {
                                    "description": "Array of homogeneous values",
                                    "anyOf": [
                                      {
                                        "description": "Array of bools",
                                        "type": "array",
                                        "items": {
                                          "type": "boolean"
                                        }
                                      },
                                      {
                                        "description": "Array of integers",
                                        "type": "array",
                                        "items": {
                                          "type": "integer",
                                          "format": "int64"
                                        }
                                      },
                                      {
                                        "description": "Array of floats",
                                        "type": "array",
                                        "items": {
                                          "type": "number",
                                          "format": "double"
                                        }
                                      },
                                      {
                                        "description": "Array of strings",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "nullable": true
                              },
                              "named": {
                                "description": "The name of the value in the context",
                                "type": "string"
                              },
                              "rename": {
                                "description": "The optional output name",
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "errors": {
                          "description": "Configuration to forward values from the error to custom attributes/labels in metrics",
                          "type": "object",
                          "properties": {
                            "extensions": {
                              "description": "Forward extensions values as custom attributes/labels in metrics",
                              "type": "array",
                              "items": {
                                "description": "Configuration to forward body values in metric attributes/labels",
                                "type": "object",
                                "required": [
                                  "name",
                                  "path"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "The optional default value",
                                    "anyOf": [
                                      {
                                        "description": "bool values",
                                        "type": "boolean"
                                      },
                                      {
                                        "description": "i64 values",
                                        "type": "integer",
                                        "format": "int64"
                                      },
                                      {
                                        "description": "f64 values",
                                        "type": "number",
                                        "format": "double"
                                      },
                                      {
                                        "description": "String values",
                                        "type": "string"
                                      },
                                      {
                                        "description": "Array of homogeneous values",
                                        "anyOf": [
                                          {
                                            "description": "Array of bools",
                                            "type": "array",
                                            "items": {
                                              "type": "boolean"
                                            }
                                          },
                                          {
                                            "description": "Array of integers",
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int64"
                                            }
                                          },
                                          {
                                            "description": "Array of floats",
                                            "type": "array",
                                            "items": {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          },
                                          {
                                            "description": "Array of strings",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "nullable": true
                                  },
                                  "name": {
                                    "description": "The name of the attribute",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "The path in the body",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "include_messages": {
                              "description": "Will include the error message in a \"message\" attribute",
                              "default": null,
                              "type": "boolean",
                              "nullable": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "request": {
                          "description": "Configuration to forward headers or body values from the request to custom attributes/labels in metrics",
                          "type": "object",
                          "properties": {
                            "body": {
                              "description": "Forward body values as custom attributes/labels in metrics",
                              "type": "array",
                              "items": {
                                "description": "Configuration to forward body values in metric attributes/labels",
                                "type": "object",
                                "required": [
                                  "name",
                                  "path"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "The optional default value",
                                    "anyOf": [
                                      {
                                        "description": "bool values",
                                        "type": "boolean"
                                      },
                                      {
                                        "description": "i64 values",
                                        "type": "integer",
                                        "format": "int64"
                                      },
                                      {
                                        "description": "f64 values",
                                        "type": "number",
                                        "format": "double"
                                      },
                                      {
                                        "description": "String values",
                                        "type": "string"
                                      },
                                      {
                                        "description": "Array of homogeneous values",
                                        "anyOf": [
                                          {
                                            "description": "Array of bools",
                                            "type": "array",
                                            "items": {
                                              "type": "boolean"
                                            }
                                          },
                                          {
                                            "description": "Array of integers",
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int64"
                                            }
                                          },
                                          {
                                            "description": "Array of floats",
                                            "type": "array",
                                            "items": {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          },
                                          {
                                            "description": "Array of strings",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "nullable": true
                                  },
                                  "name": {
                                    "description": "The name of the attribute",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "The path in the body",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "header": {
                              "description": "Forward header values as custom attributes/labels in metrics",
                              "type": "array",
                              "items": {
                                "description": "Configuration to forward header values in metric labels",
                                "anyOf": [
                                  {
                                    "description": "Match via header name",
                                    "type": "object",
                                    "required": [
                                      "named"
                                    ],
                                    "properties": {
                                      "default": {
                                        "description": "The optional default value",
                                        "anyOf": [
                                          {
                                            "description": "bool values",
                                            "type": "boolean"
                                          },
                                          {
                                            "description": "i64 values",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          {
                                            "description": "f64 values",
                                            "type": "number",
                                            "format": "double"
                                          },
                                          {
                                            "description": "String values",
                                            "type": "string"
                                          },
                                          {
                                            "description": "Array of homogeneous values",
                                            "anyOf": [
                                              {
                                                "description": "Array of bools",
                                                "type": "array",
                                                "items": {
                                                  "type": "boolean"
                                                }
                                              },
                                              {
                                                "description": "Array of integers",
                                                "type": "array",
                                                "items": {
                                                  "type": "integer",
                                                  "format": "int64"
                                                }
                                              },
                                              {
                                                "description": "Array of floats",
                                                "type": "array",
                                                "items": {
                                                  "type": "number",
                                                  "format": "double"
                                                }
                                              },
                                              {
                                                "description": "Array of strings",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "nullable": true
                                      },
                                      "named": {
                                        "description": "The name of the header",
                                        "type": "string"
                                      },
                                      "rename": {
                                        "description": "The optional output name",
                                        "type": "string",
                                        "nullable": true
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "description": "Match via rgex",
                                    "type": "object",
                                    "required": [
                                      "matching"
                                    ],
                                    "properties": {
                                      "matching": {
                                        "description": "Using a regex on the header name",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "response": {
                          "description": "Configuration to forward headers or body values from the response to custom attributes/labels in metrics",
                          "type": "object",
                          "properties": {
                            "body": {
                              "description": "Forward body values as custom attributes/labels in metrics",
                              "type": "array",
                              "items": {
                                "description": "Configuration to forward body values in metric attributes/labels",
                                "type": "object",
                                "required": [
                                  "name",
                                  "path"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "The optional default value",
                                    "anyOf": [
                                      {
                                        "description": "bool values",
                                        "type": "boolean"
                                      },
                                      {
                                        "description": "i64 values",
                                        "type": "integer",
                                        "format": "int64"
                                      },
                                      {
                                        "description": "f64 values",
                                        "type": "number",
                                        "format": "double"
                                      },
                                      {
                                        "description": "String values",
                                        "type": "string"
                                      },
                                      {
                                        "description": "Array of homogeneous values",
                                        "anyOf": [
                                          {
                                            "description": "Array of bools",
                                            "type": "array",
                                            "items": {
                                              "type": "boolean"
                                            }
                                          },
                                          {
                                            "description": "Array of integers",
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int64"
                                            }
                                          },
                                          {
                                            "description": "Array of floats",
                                            "type": "array",
                                            "items": {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          },
                                          {
                                            "description": "Array of strings",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "nullable": true
                                  },
                                  "name": {
                                    "description": "The name of the attribute",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "The path in the body",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "header": {
                              "description": "Forward header values as custom attributes/labels in metrics",
                              "type": "array",
                              "items": {
                                "description": "Configuration to forward header values in metric labels",
                                "anyOf": [
                                  {
                                    "description": "Match via header name",
                                    "type": "object",
                                    "required": [
                                      "named"
                                    ],
                                    "properties": {
                                      "default": {
                                        "description": "The optional default value",
                                        "anyOf": [
                                          {
                                            "description": "bool values",
                                            "type": "boolean"
                                          },
                                          {
                                            "description": "i64 values",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          {
                                            "description": "f64 values",
                                            "type": "number",
                                            "format": "double"
                                          },
                                          {
                                            "description": "String values",
                                            "type": "string"
                                          },
                                          {
                                            "description": "Array of homogeneous values",
                                            "anyOf": [
                                              {
                                                "description": "Array of bools",
                                                "type": "array",
                                                "items": {
                                                  "type": "boolean"
                                                }
                                              },
                                              {
                                                "description": "Array of integers",
                                                "type": "array",
                                                "items": {
                                                  "type": "integer",
                                                  "format": "int64"
                                                }
                                              },
                                              {
                                                "description": "Array of floats",
                                                "type": "array",
                                                "items": {
                                                  "type": "number",
                                                  "format": "double"
                                                }
                                              },
                                              {
                                                "description": "Array of strings",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "nullable": true
                                      },
                                      "named": {
                                        "description": "The name of the header",
                                        "type": "string"
                                      },
                                      "rename": {
                                        "description": "The optional output name",
                                        "type": "string",
                                        "nullable": true
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "description": "Match via rgex",
                                    "type": "object",
                                    "required": [
                                      "matching"
                                    ],
                                    "properties": {
                                      "matching": {
                                        "description": "Using a regex on the header name",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "static": {
                          "description": "Configuration to insert custom attributes/labels in metrics",
                          "type": "array",
                          "items": {
                            "description": "Configuration to insert custom attributes/labels in metrics",
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "description": "The name of the attribute to insert",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value of the attribute to insert",
                                "anyOf": [
                                  {
                                    "description": "bool values",
                                    "type": "boolean"
                                  },
                                  {
                                    "description": "i64 values",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  {
                                    "description": "f64 values",
                                    "type": "number",
                                    "format": "double"
                                  },
                                  {
                                    "description": "String values",
                                    "type": "string"
                                  },
                                  {
                                    "description": "Array of homogeneous values",
                                    "anyOf": [
                                      {
                                        "description": "Array of bools",
                                        "type": "array",
                                        "items": {
                                          "type": "boolean"
                                        }
                                      },
                                      {
                                        "description": "Array of integers",
                                        "type": "array",
                                        "items": {
                                          "type": "integer",
                                          "format": "int64"
                                        }
                                      },
                                      {
                                        "description": "Array of floats",
                                        "type": "array",
                                        "items": {
                                          "type": "number",
                                          "format": "double"
                                        }
                                      },
                                      {
                                        "description": "Array of strings",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "buckets": {
                  "description": "Custom buckets for histograms",
                  "default": [
                    0.001,
                    0.005,
                    0.015,
                    0.05,
                    0.1,
                    0.2,
                    0.3,
                    0.4,
                    0.5,
                    1.0,
                    5.0,
                    10.0
                  ],
                  "type": "array",
                  "items": {
                    "type": "number",
                    "format": "double"
                  }
                },
                "experimental_cache_metrics": {
                  "description": "Experimental metrics to know more about caching strategies",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "Enable experimental metrics",
                      "default": false,
                      "type": "boolean"
                    },
                    "ttl": {
                      "description": "Potential TTL for a cache if we had one (default: 5secs)",
                      "default": "5s",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "resources": {
                  "description": "Resources",
                  "default": {},
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "service_name": {
                  "description": "Set a service.name resource in your metrics",
                  "default": null,
                  "type": "string",
                  "nullable": true
                },
                "service_namespace": {
                  "description": "Set a service.namespace attribute in your metrics",
                  "default": null,
                  "type": "string",
                  "nullable": true
                }
              },
              "additionalProperties": false
            },
            "otlp": {
              "description": "Open Telemetry native exporter configuration",
              "type": "object",
              "required": [
                "enabled"
              ],
              "properties": {
                "batch_processor": {
                  "description": "Batch processor settings",
                  "type": "object",
                  "properties": {
                    "max_concurrent_exports": {
                      "description": "Maximum number of concurrent exports\n\nLimits the number of spawned tasks for exports and thus memory consumed by an exporter. A value of 1 will cause exports to be performed synchronously on the BatchSpanProcessor task. The default is 1.",
                      "default": 1,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "max_export_batch_size": {
                      "description": "The maximum number of spans to process in a single batch. If there are more than one batch worth of spans then it processes multiple batches of spans one batch after the other without any delay. The default value is 512.",
                      "default": 512,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "max_export_timeout": {
                      "description": "The maximum duration to export a batch of data. The default value is 30 seconds.",
                      "default": {
                        "secs": 30,
                        "nanos": 0
                      },
                      "type": "string"
                    },
                    "max_queue_size": {
                      "description": "The maximum queue size to buffer spans for delayed processing. If the queue gets full it drops the spans. The default value of is 2048.",
                      "default": 2048,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "scheduled_delay": {
                      "description": "The delay interval in milliseconds between two consecutive processing of batches. The default value is 5 seconds.",
                      "default": {
                        "secs": 5,
                        "nanos": 0
                      },
                      "type": "string"
                    }
                  }
                },
                "enabled": {
                  "description": "Enable otlp",
                  "type": "boolean"
                },
                "endpoint": {
                  "description": "The endpoint to send data to",
                  "type": "string"
                },
                "grpc": {
                  "description": "gRPC configuration settings",
                  "default": {
                    "domain_name": null,
                    "ca": null,
                    "cert": null,
                    "key": null,
                    "metadata": {}
                  },
                  "type": "object",
                  "properties": {
                    "ca": {
                      "description": "The optional certificate authority (CA) certificate to be used in TLS configuration.",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "cert": {
                      "description": "The optional cert for tls config",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "domain_name": {
                      "description": "The optional domain name for tls config. Note that domain name is will be defaulted to match the endpoint is not explicitly set.",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "key": {
                      "description": "The optional private key file for TLS configuration.",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "metadata": {
                      "description": "gRPC metadata",
                      "default": {},
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                },
                "http": {
                  "description": "HTTP configuration settings",
                  "default": {
                    "headers": {}
                  },
                  "type": "object",
                  "properties": {
                    "headers": {
                      "description": "Headers to send on report requests",
                      "default": {},
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "protocol": {
                  "description": "The protocol to use when sending data",
                  "default": "grpc",
                  "type": "string",
                  "enum": [
                    "grpc",
                    "http"
                  ]
                },
                "temporality": {
                  "description": "Temporality for export (default: `Cumulative`). Note that when exporting to Datadog agent use `Delta`.",
                  "default": "cumulative",
                  "oneOf": [
                    {
                      "description": "Export cumulative metrics.",
                      "type": "string",
                      "enum": [
                        "cumulative"
                      ]
                    },
                    {
                      "description": "Export delta metrics. `Delta` should be used when exporting to DataDog Agent.",
                      "type": "string",
                      "enum": [
                        "delta"
                      ]
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "prometheus": {
              "description": "Prometheus exporter configuration",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Set to true to enable",
                  "default": false,
                  "type": "boolean"
                },
                "listen": {
                  "description": "The listen address",
                  "default": "127.0.0.1:9090",
                  "anyOf": [
                    {
                      "description": "Socket address.",
                      "type": "string"
                    },
                    {
                      "description": "Unix socket.",
                      "type": "string"
                    }
                  ]
                },
                "path": {
                  "description": "The path where prometheus will be exposed",
                  "default": "/metrics",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "tracing": {
          "description": "Tracing configuration",
          "type": "object",
          "properties": {
            "datadog": {
              "description": "Datadog exporter configuration",
              "type": "object",
              "required": [
                "enabled"
              ],
              "properties": {
                "batch_processor": {
                  "description": "batch processor configuration",
                  "type": "object",
                  "properties": {
                    "max_concurrent_exports": {
                      "description": "Maximum number of concurrent exports\n\nLimits the number of spawned tasks for exports and thus memory consumed by an exporter. A value of 1 will cause exports to be performed synchronously on the BatchSpanProcessor task. The default is 1.",
                      "default": 1,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "max_export_batch_size": {
                      "description": "The maximum number of spans to process in a single batch. If there are more than one batch worth of spans then it processes multiple batches of spans one batch after the other without any delay. The default value is 512.",
                      "default": 512,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "max_export_timeout": {
                      "description": "The maximum duration to export a batch of data. The default value is 30 seconds.",
                      "default": {
                        "secs": 30,
                        "nanos": 0
                      },
                      "type": "string"
                    },
                    "max_queue_size": {
                      "description": "The maximum queue size to buffer spans for delayed processing. If the queue gets full it drops the spans. The default value of is 2048.",
                      "default": 2048,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "scheduled_delay": {
                      "description": "The delay interval in milliseconds between two consecutive processing of batches. The default value is 5 seconds.",
                      "default": {
                        "secs": 5,
                        "nanos": 0
                      },
                      "type": "string"
                    }
                  }
                },
                "enable_span_mapping": {
                  "description": "Enable datadog span mapping for span name and resource name.",
                  "default": false,
                  "type": "boolean"
                },
                "enabled": {
                  "description": "Enable datadog",
                  "type": "boolean"
                },
                "endpoint": {
                  "description": "The endpoint to send to",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "experimental_response_trace_id": {
              "description": "A way to expose trace id in response headers",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Expose the trace_id in response headers",
                  "default": false,
                  "type": "boolean"
                },
                "header_name": {
                  "description": "Choose the header name to expose trace_id (default: apollo-trace-id)",
                  "type": "string",
                  "nullable": true
                }
              },
              "additionalProperties": false
            },
            "jaeger": {
              "description": "Jaeger exporter configuration",
              "anyOf": [
                {
                  "type": "object",
                  "required": [
                    "enabled"
                  ],
                  "properties": {
                    "agent": {
                      "description": "Agent configuration",
                      "type": "object",
                      "properties": {
                        "endpoint": {
                          "description": "The endpoint to send to",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "batch_processor": {
                      "description": "Batch processor configuration",
                      "type": "object",
                      "properties": {
                        "max_concurrent_exports": {
                          "description": "Maximum number of concurrent exports\n\nLimits the number of spawned tasks for exports and thus memory consumed by an exporter. A value of 1 will cause exports to be performed synchronously on the BatchSpanProcessor task. The default is 1.",
                          "default": 1,
                          "type": "integer",
                          "format": "uint",
                          "minimum": 0.0
                        },
                        "max_export_batch_size": {
                          "description": "The maximum number of spans to process in a single batch. If there are more than one batch worth of spans then it processes multiple batches of spans one batch after the other without any delay. The default value is 512.",
                          "default": 512,
                          "type": "integer",
                          "format": "uint",
                          "minimum": 0.0
                        },
                        "max_export_timeout": {
                          "description": "The maximum duration to export a batch of data. The default value is 30 seconds.",
                          "default": {
                            "secs": 30,
                            "nanos": 0
                          },
                          "type": "string"
                        },
                        "max_queue_size": {
                          "description": "The maximum queue size to buffer spans for delayed processing. If the queue gets full it drops the spans. The default value of is 2048.",
                          "default": 2048,
                          "type": "integer",
                          "format": "uint",
                          "minimum": 0.0
                        },
                        "scheduled_delay": {
                          "description": "The delay interval in milliseconds between two consecutive processing of batches. The default value is 5 seconds.",
                          "default": {
                            "secs": 5,
                            "nanos": 0
                          },
                          "type": "string"
                        }
                      }
                    },
                    "enabled": {
                      "description": "Enable Jaeger",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "enabled"
                  ],
                  "properties": {
                    "batch_processor": {
                      "description": "Batch processor configuration",
                      "type": "object",
                      "properties": {
                        "max_concurrent_exports": {
                          "description": "Maximum number of concurrent exports\n\nLimits the number of spawned tasks for exports and thus memory consumed by an exporter. A value of 1 will cause exports to be performed synchronously on the BatchSpanProcessor task. The default is 1.",
                          "default": 1,
                          "type": "integer",
                          "format": "uint",
                          "minimum": 0.0
                        },
                        "max_export_batch_size": {
                          "description": "The maximum number of spans to process in a single batch. If there are more than one batch worth of spans then it processes multiple batches of spans one batch after the other without any delay. The default value is 512.",
                          "default": 512,
                          "type": "integer",
                          "format": "uint",
                          "minimum": 0.0
                        },
                        "max_export_timeout": {
                          "description": "The maximum duration to export a batch of data. The default value is 30 seconds.",
                          "default": {
                            "secs": 30,
                            "nanos": 0
                          },
                          "type": "string"
                        },
                        "max_queue_size": {
                          "description": "The maximum queue size to buffer spans for delayed processing. If the queue gets full it drops the spans. The default value of is 2048.",
                          "default": 2048,
                          "type": "integer",
                          "format": "uint",
                          "minimum": 0.0
                        },
                        "scheduled_delay": {
                          "description": "The delay interval in milliseconds between two consecutive processing of batches. The default value is 5 seconds.",
                          "default": {
                            "secs": 5,
                            "nanos": 0
                          },
                          "type": "string"
                        }
                      }
                    },
                    "collector": {
                      "description": "Collector configuration",
                      "type": "object",
                      "properties": {
                        "endpoint": {
                          "description": "The endpoint to send reports to",
                          "type": "string"
                        },
                        "password": {
                          "description": "The optional password",
                          "default": null,
                          "type": "string",
                          "nullable": true
                        },
                        "username": {
                          "description": "The optional username",
                          "default": null,
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "additionalProperties": false
                    },
                    "enabled": {
                      "description": "Enable Jaeger",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              ]
            },
            "otlp": {
              "description": "OpenTelemetry native exporter configuration",
              "type": "object",
              "required": [
                "enabled"
              ],
              "properties": {
                "batch_processor": {
                  "description": "Batch processor settings",
                  "type": "object",
                  "properties": {
                    "max_concurrent_exports": {
                      "description": "Maximum number of concurrent exports\n\nLimits the number of spawned tasks for exports and thus memory consumed by an exporter. A value of 1 will cause exports to be performed synchronously on the BatchSpanProcessor task. The default is 1.",
                      "default": 1,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "max_export_batch_size": {
                      "description": "The maximum number of spans to process in a single batch. If there are more than one batch worth of spans then it processes multiple batches of spans one batch after the other without any delay. The default value is 512.",
                      "default": 512,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "max_export_timeout": {
                      "description": "The maximum duration to export a batch of data. The default value is 30 seconds.",
                      "default": {
                        "secs": 30,
                        "nanos": 0
                      },
                      "type": "string"
                    },
                    "max_queue_size": {
                      "description": "The maximum queue size to buffer spans for delayed processing. If the queue gets full it drops the spans. The default value of is 2048.",
                      "default": 2048,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "scheduled_delay": {
                      "description": "The delay interval in milliseconds between two consecutive processing of batches. The default value is 5 seconds.",
                      "default": {
                        "secs": 5,
                        "nanos": 0
                      },
                      "type": "string"
                    }
                  }
                },
                "enabled": {
                  "description": "Enable otlp",
                  "type": "boolean"
                },
                "endpoint": {
                  "description": "The endpoint to send data to",
                  "type": "string"
                },
                "grpc": {
                  "description": "gRPC configuration settings",
                  "default": {
                    "domain_name": null,
                    "ca": null,
                    "cert": null,
                    "key": null,
                    "metadata": {}
                  },
                  "type": "object",
                  "properties": {
                    "ca": {
                      "description": "The optional certificate authority (CA) certificate to be used in TLS configuration.",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "cert": {
                      "description": "The optional cert for tls config",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "domain_name": {
                      "description": "The optional domain name for tls config. Note that domain name is will be defaulted to match the endpoint is not explicitly set.",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "key": {
                      "description": "The optional private key file for TLS configuration.",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "metadata": {
                      "description": "gRPC metadata",
                      "default": {},
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                },
                "http": {
                  "description": "HTTP configuration settings",
                  "default": {
                    "headers": {}
                  },
                  "type": "object",
                  "properties": {
                    "headers": {
                      "description": "Headers to send on report requests",
                      "default": {},
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "protocol": {
                  "description": "The protocol to use when sending data",
                  "default": "grpc",
                  "type": "string",
                  "enum": [
                    "grpc",
                    "http"
                  ]
                },
                "temporality": {
                  "description": "Temporality for export (default: `Cumulative`). Note that when exporting to Datadog agent use `Delta`.",
                  "default": "cumulative",
                  "oneOf": [
                    {
                      "description": "Export cumulative metrics.",
                      "type": "string",
                      "enum": [
                        "cumulative"
                      ]
                    },
                    {
                      "description": "Export delta metrics. `Delta` should be used when exporting to DataDog Agent.",
                      "type": "string",
                      "enum": [
                        "delta"
                      ]
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "propagation": {
              "description": "Propagation configuration",
              "type": "object",
              "properties": {
                "awsxray": {
                  "description": "Propagate AWS X-Ray",
                  "default": false,
                  "type": "boolean"
                },
                "baggage": {
                  "description": "Propagate baggage https://www.w3.org/TR/baggage/",
                  "default": false,
                  "type": "boolean"
                },
                "datadog": {
                  "description": "Propagate Datadog",
                  "default": false,
                  "type": "boolean"
                },
                "jaeger": {
                  "description": "Propagate Jaeger",
                  "default": false,
                  "type": "boolean"
                },
                "request": {
                  "description": "Select a custom request header to set your own trace_id (header value must be convertible from hexadecimal to set a correct trace_id)",
                  "type": "object",
                  "required": [
                    "header_name"
                  ],
                  "properties": {
                    "header_name": {
                      "description": "Choose the header name to expose trace_id (default: apollo-trace-id)",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "trace_context": {
                  "description": "Propagate trace context https://www.w3.org/TR/trace-context/",
                  "default": false,
                  "type": "boolean"
                },
                "zipkin": {
                  "description": "Propagate Zipkin",
                  "default": false,
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "trace_config": {
              "description": "Common configuration",
              "type": "object",
              "properties": {
                "attributes": {
                  "description": "Default attributes",
                  "default": {},
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "description": "bool values",
                        "type": "boolean"
                      },
                      {
                        "description": "i64 values",
                        "type": "integer",
                        "format": "int64"
                      },
                      {
                        "description": "f64 values",
                        "type": "number",
                        "format": "double"
                      },
                      {
                        "description": "String values",
                        "type": "string"
                      },
                      {
                        "description": "Array of homogeneous values",
                        "anyOf": [
                          {
                            "description": "Array of bools",
                            "type": "array",
                            "items": {
                              "type": "boolean"
                            }
                          },
                          {
                            "description": "Array of integers",
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int64"
                            }
                          },
                          {
                            "description": "Array of floats",
                            "type": "array",
                            "items": {
                              "type": "number",
                              "format": "double"
                            }
                          },
                          {
                            "description": "Array of strings",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "max_attributes_per_event": {
                  "description": "The maximum attributes per event before discarding",
                  "default": 128,
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "max_attributes_per_link": {
                  "description": "The maximum attributes per link before discarding",
                  "default": 128,
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "max_attributes_per_span": {
                  "description": "The maximum attributes per span before discarding",
                  "default": 128,
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "max_events_per_span": {
                  "description": "The maximum events per span before discarding",
                  "default": 128,
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "max_links_per_span": {
                  "description": "The maximum links per span before discarding",
                  "default": 128,
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "parent_based_sampler": {
                  "description": "Whether to use parent based sampling",
                  "default": true,
                  "type": "boolean"
                },
                "sampler": {
                  "description": "The sampler, always_on, always_off or a decimal between 0.0 and 1.0",
                  "anyOf": [
                    {
                      "description": "Sample a given fraction. Fractions >= 1 will always sample.",
                      "type": "number",
                      "format": "double"
                    },
                    {
                      "oneOf": [
                        {
                          "description": "Always sample",
                          "type": "string",
                          "enum": [
                            "always_on"
                          ]
                        },
                        {
                          "description": "Never sample",
                          "type": "string",
                          "enum": [
                            "always_off"
                          ]
                        }
                      ]
                    }
                  ]
                },
                "service_name": {
                  "description": "The trace service name",
                  "default": "router",
                  "type": "string"
                },
                "service_namespace": {
                  "description": "The trace service namespace",
                  "default": "",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "zipkin": {
              "description": "Zipkin exporter configuration",
              "type": "object",
              "required": [
                "enabled"
              ],
              "properties": {
                "batch_processor": {
                  "description": "Batch processor configuration",
                  "type": "object",
                  "properties": {
                    "max_concurrent_exports": {
                      "description": "Maximum number of concurrent exports\n\nLimits the number of spawned tasks for exports and thus memory consumed by an exporter. A value of 1 will cause exports to be performed synchronously on the BatchSpanProcessor task. The default is 1.",
                      "default": 1,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "max_export_batch_size": {
                      "description": "The maximum number of spans to process in a single batch. If there are more than one batch worth of spans then it processes multiple batches of spans one batch after the other without any delay. The default value is 512.",
                      "default": 512,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "max_export_timeout": {
                      "description": "The maximum duration to export a batch of data. The default value is 30 seconds.",
                      "default": {
                        "secs": 30,
                        "nanos": 0
                      },
                      "type": "string"
                    },
                    "max_queue_size": {
                      "description": "The maximum queue size to buffer spans for delayed processing. If the queue gets full it drops the spans. The default value of is 2048.",
                      "default": 2048,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "scheduled_delay": {
                      "description": "The delay interval in milliseconds between two consecutive processing of batches. The default value is 5 seconds.",
                      "default": {
                        "secs": 5,
                        "nanos": 0
                      },
                      "type": "string"
                    }
                  }
                },
                "enabled": {
                  "description": "Enable zipkin",
                  "type": "boolean"
                },
                "endpoint": {
                  "description": "The endpoint to send to",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "tls": {
      "description": "TLS related configuration options.",
      "default": {
        "supergraph": null,
        "subgraph": {
          "all": {
            "certificate_authorities": null,
            "client_authentication": null
          },
          "subgraphs": {}
        }
      },
      "type": "object",
      "properties": {
        "subgraph": {
          "description": "Configuration options pertaining to the subgraph server component.",
          "default": {
            "all": {
              "certificate_authorities": null,
              "client_authentication": null
            },
            "subgraphs": {}
          },
          "type": "object",
          "properties": {
            "all": {
              "description": "options applying to all subgraphs",
              "default": {
                "certificate_authorities": null,
                "client_authentication": null
              },
              "type": "object",
              "properties": {
                "certificate_authorities": {
                  "description": "list of certificate authorities in PEM format",
                  "default": null,
                  "type": "string",
                  "nullable": true
                },
                "client_authentication": {
                  "description": "client certificate authentication",
                  "default": null,
                  "type": "object",
                  "required": [
                    "certificate_chain",
                    "key"
                  ],
                  "properties": {
                    "certificate_chain": {
                      "description": "list of certificates in PEM format",
                      "writeOnly": true,
                      "type": "string"
                    },
                    "key": {
                      "description": "key in PEM format",
                      "writeOnly": true,
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "nullable": true
                }
              },
              "additionalProperties": false
            },
            "subgraphs": {
              "description": "per subgraph options",
              "default": {},
              "type": "object",
              "additionalProperties": {
                "description": "Configuration options pertaining to the subgraph server component.",
                "type": "object",
                "properties": {
                  "certificate_authorities": {
                    "description": "list of certificate authorities in PEM format",
                    "default": null,
                    "type": "string",
                    "nullable": true
                  },
                  "client_authentication": {
                    "description": "client certificate authentication",
                    "default": null,
                    "type": "object",
                    "required": [
                      "certificate_chain",
                      "key"
                    ],
                    "properties": {
                      "certificate_chain": {
                        "description": "list of certificates in PEM format",
                        "writeOnly": true,
                        "type": "string"
                      },
                      "key": {
                        "description": "key in PEM format",
                        "writeOnly": true,
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "nullable": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "supergraph": {
          "description": "TLS server configuration\n\nthis will affect the GraphQL endpoint and any other endpoint targeting the same listen address",
          "default": null,
          "type": "object",
          "required": [
            "certificate",
            "certificate_chain",
            "key"
          ],
          "properties": {
            "certificate": {
              "description": "server certificate in PEM format",
              "writeOnly": true,
              "type": "string"
            },
            "certificate_chain": {
              "description": "list of certificate authorities in PEM format",
              "writeOnly": true,
              "type": "string"
            },
            "key": {
              "description": "server key in PEM format",
              "writeOnly": true,
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "traffic_shaping": {
      "description": "Configuration for the experimental traffic shaping plugin",
      "type": "object",
      "properties": {
        "all": {
          "description": "Applied on all subgraphs",
          "type": "object",
          "properties": {
            "compression": {
              "description": "Enable compression for subgraphs (available compressions are deflate, br, gzip)",
              "oneOf": [
                {
                  "description": "gzip",
                  "type": "string",
                  "enum": [
                    "gzip"
                  ]
                },
                {
                  "description": "deflate",
                  "type": "string",
                  "enum": [
                    "deflate"
                  ]
                },
                {
                  "description": "brotli",
                  "type": "string",
                  "enum": [
                    "br"
                  ]
                }
              ],
              "nullable": true
            },
            "deduplicate_query": {
              "description": "Enable query deduplication",
              "type": "boolean",
              "nullable": true
            },
            "experimental_entity_caching": {
              "description": "Enable entity caching",
              "type": "object",
              "required": [
                "ttl"
              ],
              "properties": {
                "ttl": {
                  "description": "expiration for all keys",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "experimental_http2": {
              "description": "Enable HTTP2 for subgraphs",
              "oneOf": [
                {
                  "description": "Enable HTTP2 for subgraphs",
                  "type": "string",
                  "enum": [
                    "enable"
                  ]
                },
                {
                  "description": "Disable HTTP2 for subgraphs",
                  "type": "string",
                  "enum": [
                    "disable"
                  ]
                },
                {
                  "description": "Only HTTP2 is active",
                  "type": "string",
                  "enum": [
                    "http2only"
                  ]
                }
              ],
              "nullable": true
            },
            "experimental_retry": {
              "description": "Retry configuration",
              "type": "object",
              "properties": {
                "min_per_sec": {
                  "description": "minimum rate of retries allowed to accomodate clients that have just started issuing requests, or clients that do not issue many requests per window. The default value is 10",
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0,
                  "nullable": true
                },
                "retry_mutations": {
                  "description": "allows request retries on mutations. This should only be activated if mutations are idempotent. Disabled by default",
                  "type": "boolean",
                  "nullable": true
                },
                "retry_percent": {
                  "description": "percentage of calls to deposit that can be retried. This is in addition to any retries allowed for via min_per_sec. Must be between 0 and 1000, default value is 0.2",
                  "type": "number",
                  "format": "float",
                  "nullable": true
                },
                "ttl": {
                  "description": "how long a single deposit should be considered. Must be between 1 and 60 seconds, default value is 10 seconds",
                  "default": null,
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "global_rate_limit": {
              "description": "Enable global rate limiting",
              "type": "object",
              "required": [
                "capacity",
                "interval"
              ],
              "properties": {
                "capacity": {
                  "description": "Number of requests allowed",
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 1.0
                },
                "interval": {
                  "description": "Per interval",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "timeout": {
              "description": "Enable timeout for incoming requests",
              "default": null,
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "deduplicate_variables": {
          "description": "DEPRECATED, now always enabled: Enable variable deduplication optimization when sending requests to subgraphs (https://github.com/apollographql/router/issues/87)",
          "default": null,
          "type": "boolean",
          "nullable": true
        },
        "experimental_cache": {
          "description": "Experimental URLs of Redis cache used for subgraph response caching",
          "default": null,
          "type": "object",
          "required": [
            "urls"
          ],
          "properties": {
            "timeout": {
              "description": "Redis request timeout (default: 2ms)",
              "default": null,
              "type": "string",
              "nullable": true
            },
            "urls": {
              "description": "List of URLs to the Redis cluster",
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "router": {
          "description": "Applied at the router level",
          "type": "object",
          "properties": {
            "global_rate_limit": {
              "description": "Enable global rate limiting",
              "type": "object",
              "required": [
                "capacity",
                "interval"
              ],
              "properties": {
                "capacity": {
                  "description": "Number of requests allowed",
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 1.0
                },
                "interval": {
                  "description": "Per interval",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "timeout": {
              "description": "Enable timeout for incoming requests",
              "default": null,
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "subgraphs": {
          "description": "Applied on specific subgraphs",
          "type": "object",
          "additionalProperties": {
            "description": "Traffic shaping options",
            "type": "object",
            "properties": {
              "compression": {
                "description": "Enable compression for subgraphs (available compressions are deflate, br, gzip)",
                "oneOf": [
                  {
                    "description": "gzip",
                    "type": "string",
                    "enum": [
                      "gzip"
                    ]
                  },
                  {
                    "description": "deflate",
                    "type": "string",
                    "enum": [
                      "deflate"
                    ]
                  },
                  {
                    "description": "brotli",
                    "type": "string",
                    "enum": [
                      "br"
                    ]
                  }
                ],
                "nullable": true
              },
              "deduplicate_query": {
                "description": "Enable query deduplication",
                "type": "boolean",
                "nullable": true
              },
              "experimental_entity_caching": {
                "description": "Enable entity caching",
                "type": "object",
                "required": [
                  "ttl"
                ],
                "properties": {
                  "ttl": {
                    "description": "expiration for all keys",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "nullable": true
              },
              "experimental_http2": {
                "description": "Enable HTTP2 for subgraphs",
                "oneOf": [
                  {
                    "description": "Enable HTTP2 for subgraphs",
                    "type": "string",
                    "enum": [
                      "enable"
                    ]
                  },
                  {
                    "description": "Disable HTTP2 for subgraphs",
                    "type": "string",
                    "enum": [
                      "disable"
                    ]
                  },
                  {
                    "description": "Only HTTP2 is active",
                    "type": "string",
                    "enum": [
                      "http2only"
                    ]
                  }
                ],
                "nullable": true
              },
              "experimental_retry": {
                "description": "Retry configuration",
                "type": "object",
                "properties": {
                  "min_per_sec": {
                    "description": "minimum rate of retries allowed to accomodate clients that have just started issuing requests, or clients that do not issue many requests per window. The default value is 10",
                    "type": "integer",
                    "format": "uint32",
                    "minimum": 0.0,
                    "nullable": true
                  },
                  "retry_mutations": {
                    "description": "allows request retries on mutations. This should only be activated if mutations are idempotent. Disabled by default",
                    "type": "boolean",
                    "nullable": true
                  },
                  "retry_percent": {
                    "description": "percentage of calls to deposit that can be retried. This is in addition to any retries allowed for via min_per_sec. Must be between 0 and 1000, default value is 0.2",
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "ttl": {
                    "description": "how long a single deposit should be considered. Must be between 1 and 60 seconds, default value is 10 seconds",
                    "default": null,
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "nullable": true
              },
              "global_rate_limit": {
                "description": "Enable global rate limiting",
                "type": "object",
                "required": [
                  "capacity",
                  "interval"
                ],
                "properties": {
                  "capacity": {
                    "description": "Number of requests allowed",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 1.0
                  },
                  "interval": {
                    "description": "Per interval",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "nullable": true
              },
              "timeout": {
                "description": "Enable timeout for incoming requests",
                "default": null,
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
