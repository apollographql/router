---
source: apollo-federation/src/sources/connect/expand/tests/mod.rs
expression: connectors.by_service_name
input_file: apollo-federation/src/sources/connect/expand/tests/schemas/expand/steelthread.graphql
---
{
    "connectors_Query_users_0": Connector {
        id: ConnectId {
            label: "connectors.json http: GET /users",
            subgraph_name: "connectors",
            source_name: Some(
                "json",
            ),
            directive: ObjectOrInterfaceFieldDirectivePosition {
                field: Object(Query.users),
                directive_name: "connect",
                directive_index: 0,
            },
        },
        transport: HttpJsonTransport {
            source_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "jsonplaceholder.typicode.com",
                        ),
                    ),
                    port: None,
                    path: "/",
                    query: None,
                    fragment: None,
                },
            ),
            connect_template: URLTemplate {
                base: None,
                path: [
                    Component {
                        parts: [
                            Text(
                                "users",
                            ),
                        ],
                    },
                ],
                query: {},
            },
            method: Get,
            headers: {},
            body: None,
        },
        selection: Named(
            SubSelection {
                selections: [
                    Field(
                        None,
                        WithRange {
                            node: Field(
                                "id",
                            ),
                            range: Some(
                                0..2,
                            ),
                        },
                        None,
                    ),
                    Field(
                        None,
                        WithRange {
                            node: Field(
                                "name",
                            ),
                            range: Some(
                                3..7,
                            ),
                        },
                        None,
                    ),
                ],
                range: Some(
                    0..7,
                ),
            },
        ),
        config: None,
        max_requests: None,
        entity_resolver: None,
    },
    "connectors_Query_user_0": Connector {
        id: ConnectId {
            label: "connectors.json http: GET /users/{$args.id}",
            subgraph_name: "connectors",
            source_name: Some(
                "json",
            ),
            directive: ObjectOrInterfaceFieldDirectivePosition {
                field: Object(Query.user),
                directive_name: "connect",
                directive_index: 0,
            },
        },
        transport: HttpJsonTransport {
            source_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "jsonplaceholder.typicode.com",
                        ),
                    ),
                    port: None,
                    path: "/",
                    query: None,
                    fragment: None,
                },
            ),
            connect_template: URLTemplate {
                base: None,
                path: [
                    Component {
                        parts: [
                            Text(
                                "users",
                            ),
                        ],
                    },
                    Component {
                        parts: [
                            Var(
                                Variable {
                                    var_type: Args,
                                    path: "id",
                                    location: 8..16,
                                },
                            ),
                        ],
                    },
                ],
                query: {},
            },
            method: Get,
            headers: {},
            body: None,
        },
        selection: Named(
            SubSelection {
                selections: [
                    Field(
                        None,
                        WithRange {
                            node: Field(
                                "id",
                            ),
                            range: Some(
                                0..2,
                            ),
                        },
                        None,
                    ),
                    Field(
                        None,
                        WithRange {
                            node: Field(
                                "name",
                            ),
                            range: Some(
                                3..7,
                            ),
                        },
                        None,
                    ),
                    Field(
                        None,
                        WithRange {
                            node: Field(
                                "username",
                            ),
                            range: Some(
                                8..16,
                            ),
                        },
                        None,
                    ),
                ],
                range: Some(
                    0..16,
                ),
            },
        ),
        config: None,
        max_requests: None,
        entity_resolver: Some(
            Explicit,
        ),
    },
    "connectors_User_d_1": Connector {
        id: ConnectId {
            label: "connectors.json http: GET /users/{$this.c}",
            subgraph_name: "connectors",
            source_name: Some(
                "json",
            ),
            directive: ObjectOrInterfaceFieldDirectivePosition {
                field: Object(User.d),
                directive_name: "connect",
                directive_index: 1,
            },
        },
        transport: HttpJsonTransport {
            source_url: Some(
                Url {
                    scheme: "https",
                    cannot_be_a_base: false,
                    username: "",
                    password: None,
                    host: Some(
                        Domain(
                            "jsonplaceholder.typicode.com",
                        ),
                    ),
                    port: None,
                    path: "/",
                    query: None,
                    fragment: None,
                },
            ),
            connect_template: URLTemplate {
                base: None,
                path: [
                    Component {
                        parts: [
                            Text(
                                "users",
                            ),
                        ],
                    },
                    Component {
                        parts: [
                            Var(
                                Variable {
                                    var_type: This,
                                    path: "c",
                                    location: 8..15,
                                },
                            ),
                        ],
                    },
                ],
                query: {},
            },
            method: Get,
            headers: {},
            body: None,
        },
        selection: Path(
            PathSelection {
                path: WithRange {
                    node: Var(
                        WithRange {
                            node: $,
                            range: Some(
                                0..1,
                            ),
                        },
                        WithRange {
                            node: Key(
                                WithRange {
                                    node: Field(
                                        "phone",
                                    ),
                                    range: Some(
                                        2..7,
                                    ),
                                },
                                WithRange {
                                    node: Empty,
                                    range: Some(
                                        7..7,
                                    ),
                                },
                            ),
                            range: Some(
                                1..7,
                            ),
                        },
                    ),
                    range: Some(
                        0..7,
                    ),
                },
            },
        ),
        config: None,
        max_requests: None,
        entity_resolver: Some(
            Implicit,
        ),
    },
}
