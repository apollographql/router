schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
  @link(url: "https://specs.apollo.dev/join/v0.5", for: EXECUTION)
  @link(url: "https://specs.apollo.dev/connect/v0.1", for: EXECUTION)
  @join__directive(graphs: [CONNECTORS], name: "link", args: {url: "https://specs.apollo.dev/connect/v0.1", import: ["@connect", "@source"]})
  @join__directive(graphs: [CONNECTORS], name: "source", args: {name: "json", http: {baseURL: "http://localhost", headers: [{name: "Content-Type", value: "application/x-www-form-urlencoded"}]}})
{
  query: Query
  mutation: Mutation
}

directive @join__directive(graphs: [join__Graph!], name: String!, args: join__DirectiveArguments) repeatable on SCHEMA | OBJECT | INTERFACE | FIELD_DEFINITION

directive @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE

directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean, override: String, usedOverridden: Boolean, overrideLabel: String, contextArguments: [join__ContextArgument!]) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__type(graph: join__Graph!, key: join__FieldSet, extension: Boolean! = false, resolvable: Boolean! = true, isInterfaceObject: Boolean! = false) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION

directive @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

input join__ContextArgument {
  name: String!
  type: String!
  context: String!
  selection: join__FieldValue!
}

scalar join__DirectiveArguments

scalar join__FieldSet

scalar join__FieldValue

enum join__Graph {
  CONNECTORS @join__graph(name: "connectors", url: "none")
}

scalar link__Import

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY

  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

type Mutation
  @join__type(graph: CONNECTORS)
{
  post(input: PostInput!): Post @join__directive(graphs: [CONNECTORS], name: "connect", args: {source: "json", http: {POST: "/posts", body: "$args.input {\n  int\n  str\n  bool\n  enum\n  id\n\n  intArr\n  strArr\n  boolArr\n  # enumArr\n  idArr\n\n  obj {\n    a\n    b\n    c\n    nested {\n      d\n      e\n      f\n    }\n  }\n  objArr {\n    a\n    b\n    c\n    nested {\n      d\n      e\n      f\n    }\n  }\n}"}, selection: "id"})
}

type Post
  @join__type(graph: CONNECTORS)
{
  id: ID
}

input PostChildInput
  @join__type(graph: CONNECTORS)
{
  a: Int
  b: String
  c: Boolean
  nested: PostNestedInput
}

input PostInput
  @join__type(graph: CONNECTORS)
{
  int: Int
  str: String
  bool: Boolean
  id: ID
  intArr: [Int]
  strArr: [String]
  boolArr: [Boolean]
  idArr: [ID]
  obj: PostChildInput
  objArr: [PostChildInput]
}

input PostNestedInput
  @join__type(graph: CONNECTORS)
{
  d: Int
  e: String
  f: Boolean
}

type Query
  @join__type(graph: CONNECTORS)
{
  hello: String @join__directive(graphs: [CONNECTORS], name: "connect", args: {http: {GET: "http://localhost/hello"}, selection: "$"})
}
