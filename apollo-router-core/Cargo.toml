[package]
name = "apollo-router-core"
version = "0.1.0-alpha.7"
authors = ["Apollo Graph, Inc. <packages@apollographql.com>"]
edition = "2021"
license-file = "./LICENSE"
publish = false

[features]
# Prevents the query execution to continue if any error occurs while fetching
# the data of a subgraph. This is useful in development as you want to be
# alerted early when something is wrong instead of receiving an invalid result.
failfast = []

[dependencies]
apollo-parser = "0.2.3"
async-trait = "0.1.52"
atty = "0.2.14"
bytes = "1.1.0"
derivative = "2.2.0"
displaydoc = "0.2"
futures = "0.3.21"
hex = "0.4.3"
http = "0.2.6"
include_dir = "0.7.2"
lru = "0.7.3"
miette = { version = "3.3.0", features = ["fancy"] }
mockall = "0.11.0"
moka = { version = "0.6.4", features = ["future", "futures-util"] }
once_cell = "1.9.0"
paste = "1.0.6"
regex = "1.5.4"
router-bridge = { git = "https://github.com/apollographql/federation-rs.git", rev = "cf87257b9d58701cd9e09e8b5992f809147a2165" }
schemars = { version = "0.8.8", features = ["url"] }
serde = { version = "1.0.136", features = ["derive", "rc"] }
serde_json = { version = "1.0.79", features = ["preserve_order"] }
serde_json_bytes = { version = "0.2.0", features = ["preserve_order"] }
serde_urlencoded = "0.7.1"
sha2 = "0.10.2"
startup = "0.1.1"
static_assertions = "1.1.0"
thiserror = "1.0.30"
tokio = { version = "1.17.0", features = ["rt", "sync"] }
tower = { version = "0.4.12", features = ["full"] }
tower-service = "0.3.1"
tower-test = "0.4.0"
tracing = "0.1.31"
typed-builder = "0.9.1"
url = "2.2.2"
urlencoding = "2.1.0"

[dev-dependencies]
insta = "1.12.0"
mockall = "0.11.0"
static_assertions = "1"
test-log = { version = "0.2.8", default-features = false, features = ["trace"] }
tokio = { version = "1", features = ["full"] }
tracing-subscriber = { version = "0.3", default-features = false, features = [
    "env-filter",
    "fmt",
] }
