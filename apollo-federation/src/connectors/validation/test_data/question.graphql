extend schema @link(url: "https://specs.apollo.dev/connect/v0.2", import: ["@connect"])

type User {
  simpleField: String
  otherField: String
  otherField2: String
  otherField3: OtherEntity
}

type OtherEntity {
  simpleField: String
}

type Query {
  valid: [User]
    @connect(
      http: { GET: "http://127.0.0.1" }
      errors: { message: "error.message", extensions: "code: error.code status: $status" }
      selection: """
      simpleField: simpleField?
      otherField: a?.b
      otherField2: c?->d
      otherField3: e? {
        simpleField
      }
      """
    )

  # TODO: This won't fail until selection is checked against Shape
  invalid_selection_dollar: [String!]!
    @connect(
      http: { GET: "http://127.0.0.1" }
      errors: { message: "error.message", extensions: "code: error.code status: $status" }
      selection: "$?"
    )
}
