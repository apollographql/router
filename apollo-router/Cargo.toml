[package]
name = "apollo-router"
version = "0.9.5"
authors = ["Apollo Graph, Inc. <packages@apollographql.com>"]
edition = "2021"
license = "Elastic-2.0"
publish = false

[[bin]]
name = "router"
path = "src/main.rs"

[features]
# Prevents the query execution to continue if any error occurs while fetching
# the data of a subgraph. This is useful in development as you want to be
# alerted early when something is wrong instead of receiving an invalid result.
failfast = []

[dependencies]
anyhow = "1.0.57"
apollo-parser = "0.2.8"
apollo-spaceport = { path = "../apollo-spaceport" }
apollo-uplink = { path = "../uplink" }
async-trait = "0.1.53"
atty = "0.2.14"
axum = { version = "0.5.4", features = ["headers", "json", "original-uri"] }
backtrace = "0.3.65"
buildstructor = "0.3.2"
bytes = "1.1.0"
clap = { version = "=3.1.18", default-features = false, features = [
    "env",
    "derive",
    "std",
] }
dashmap = { version = "5.1.0", features = ["serde"] }
deadpool = { version = "0.9.4", features = ["rt_tokio_1"] }
derivative = "2.2.0"
derive_more = { version = "0.99.17", default-features = false, features = [
    "from",
    "display",
] }
directories = "4.0.1"
displaydoc = "0.2"
envmnt = "0.9.1"
futures = { version = "0.3.21", features = ["thread-pool"] }
hex = "0.4.3"
hotwatch = "0.4.6"
http = "0.2.7"
http-body = "0.4.4"
humantime = "2.1.0"
humantime-serde = "1.1.1"
hyper = { version = "0.14.18", features = ["server", "client"] }
hyper-rustls = { version = "0.23.0", features = ["http1", "http2"] }
include_dir = "0.7.2"
indexmap = "1.8.1"
itertools = "0.10.3"
jsonschema = { version = "0.16.0", default-features = false }
lazy_static = "1.4.0"
libc = "0.2.125"
lru = "0.7.5"
mockall = "0.11.0"
moka = { version = "0.8.4", features = ["future", "futures-util"] }
miette = { version = "4.7.1", features = ["fancy"] }
mime = "0.3.16"
multimap = "0.8.3"
once_cell = "1.9.0"
opentelemetry = { version = "0.17.0", features = [
    "rt-tokio",
    "serialize",
    "metrics",
] }
opentelemetry-datadog = { version = "0.5.0", features = ["reqwest-client"] }
opentelemetry-http = "0.6.0"
opentelemetry-jaeger = { version = "0.16.0", features = [
    "collector_client",
    "reqwest_collector_client",
    "rt-tokio",
] }
opentelemetry-otlp = { version = "0.10.0", default-features = false, features = [
    "tonic",
    "tonic-build",
    "prost",
    "tls",
    "http-proto",
    "metrics",
] }
opentelemetry-semantic-conventions = "0.9.0"
opentelemetry-zipkin = { version = "0.15.0", default-features = false, features = [
    "reqwest-client",
    "reqwest-rustls",
] }
opentelemetry-prometheus = "0.10.0"
paste = "1.0.7"
prometheus = "0.13"
# Pinned to git revision until next rhai release
rhai = { git="https://github.com/rhaiscript/rhai.git", features = ["sync", "serde", "internals"], rev="6120b7a01a84a8d35d21fcdf2c44432455b68cdb" }
regex = "1.5.6"
reqwest = { version = "0.11.10", default-features = false, features = [
    "rustls-tls",
    "json",
    "stream",
] }
router-bridge = { git = "https://github.com/apollographql/federation-rs.git", rev = "46fdeb35aa3d3f3289ff0dbbccf63c1234da92a8" }
schemars = { version = "0.8.10", features = ["url"] }
sha2 = "0.10.2"
serde = { version = "1.0.137", features = ["derive", "rc"] }
serde_json_bytes = { version = "0.2.0", features = ["preserve_order"] }
serde_json = { version = "1.0.81", features = ["preserve_order"] }
serde_urlencoded = "0.7.1"
serde_yaml = "0.8.24"
startup = "0.1.1"
static_assertions = "1.1.0"
sys-info = "0.9.1"
thiserror = "1.0.31"
tokio = { version = "1.18.2", features = ["full"] }
tokio-util = { version = "0.7.1", features = ["net", "codec"] }
tonic = { version = "0.6.2", features = ["transport", "tls"] }
tower = { version = "0.4.12", features = ["full"] }
tower-http = { version = "0.3.3", features = ["trace", "cors", "compression-br", "compression-deflate", "compression-gzip", "decompression-br", "decompression-deflate", "decompression-gzip"] }
tower-service = "0.3.1"
tower-test = "0.4.0"
tracing = "0.1.34"
tracing-core = "0.1.26"
tracing-futures = { version = "0.2.5", features = ["futures-03"] }
tracing-opentelemetry = "0.17.2"
tracing-subscriber = { version = "0.3.11", features = ["env-filter", "json"] }
typed-builder = "0.10.0"
url = { version = "2.2.2", features = ["serde"] }
urlencoding = "2.1.0"
yaml-rust = "0.4.5"
async-compression = { version = "0.3.14", features = ["tokio", "brotli", "gzip", "deflate"] }

[target.'cfg(macos)'.dependencies]
uname = "0.1.1"

[target.'cfg(unix)'.dependencies]
uname = "0.1.1"

[dev-dependencies]
insta = "1.14.0"
jsonpath_lib = "0.3.0"
maplit = "1.0.2"
mockall = "0.11.0"
reqwest = { version = "0.11.10", default-features = false, features = [
    "json",
    "stream",
] }
tempfile = "3.3.0"
test-log = { version = "0.2.10", default-features = false, features = [
    "trace",
] }
test-span = "0.6"
tower-test = "0.4.0"
tracing-subscriber = { version = "0.3", default-features = false, features = [
    "env-filter",
    "fmt",
] }
tracing-test = "0.2.1"
uuid = { version = "1.0.0", features = ["serde", "v4"] }
url = "2.2.2"
walkdir = "2.3.2"
[[test]]
name = "integration_tests"
path = "tests/integration_tests.rs"
