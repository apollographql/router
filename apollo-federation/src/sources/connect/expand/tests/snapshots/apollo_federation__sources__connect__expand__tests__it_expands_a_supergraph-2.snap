---
source: apollo-federation/src/sources/connect/expand/tests/mod.rs
expression: connectors_by_service_name
---
{
    "connectors_Query_users_0": Connector {
        id: ConnectId {
            label: "connectors.example http: Get ",
            subgraph_name: "connectors",
            source_name: Some(
                "example",
            ),
            directive: ObjectOrInterfaceFieldDirectivePosition {
                field: Object(Query.users),
                directive_name: "connect",
                directive_index: 0,
            },
        },
        transport: HttpJson(
            HttpJsonTransport {
                base_url: "http://example",
                path_template: URLPathTemplate {
                    path: [],
                    query: {},
                },
                method: Get,
                headers: {},
                body: None,
            },
        ),
        selection: Named(
            SubSelection {
                selections: [
                    Field(
                        None,
                        "id",
                        None,
                    ),
                    Field(
                        None,
                        "a",
                        None,
                    ),
                ],
                star: None,
            },
        ),
        entity: false,
        on_root_type: true,
    },
    "connectors_Query_user_0": Connector {
        id: ConnectId {
            label: "connectors.example http: Get /{$args.id!}",
            subgraph_name: "connectors",
            source_name: Some(
                "example",
            ),
            directive: ObjectOrInterfaceFieldDirectivePosition {
                field: Object(Query.user),
                directive_name: "connect",
                directive_index: 0,
            },
        },
        transport: HttpJson(
            HttpJsonTransport {
                base_url: "http://example",
                path_template: URLPathTemplate {
                    path: [
                        ParameterValue {
                            parts: [
                                Var(
                                    VariableExpression {
                                        var_path: "$args.id",
                                        batch_separator: None,
                                        required: true,
                                    },
                                ),
                            ],
                        },
                    ],
                    query: {},
                },
                method: Get,
                headers: {},
                body: None,
            },
        ),
        selection: Named(
            SubSelection {
                selections: [
                    Field(
                        None,
                        "id",
                        None,
                    ),
                    Field(
                        None,
                        "a",
                        None,
                    ),
                    Field(
                        None,
                        "b",
                        None,
                    ),
                ],
                star: None,
            },
        ),
        entity: false,
        on_root_type: true,
    },
    "connectors_User_d_1": Connector {
        id: ConnectId {
            label: "connectors.example http: Get /{$this.c!}/d",
            subgraph_name: "connectors",
            source_name: Some(
                "example",
            ),
            directive: ObjectOrInterfaceFieldDirectivePosition {
                field: Object(User.d),
                directive_name: "connect",
                directive_index: 1,
            },
        },
        transport: HttpJson(
            HttpJsonTransport {
                base_url: "http://example",
                path_template: URLPathTemplate {
                    path: [
                        ParameterValue {
                            parts: [
                                Var(
                                    VariableExpression {
                                        var_path: "$this.c",
                                        batch_separator: None,
                                        required: true,
                                    },
                                ),
                            ],
                        },
                        ParameterValue {
                            parts: [
                                Text(
                                    "d",
                                ),
                            ],
                        },
                    ],
                    query: {},
                },
                method: Get,
                headers: {},
                body: None,
            },
        ),
        selection: Path(
            Var(
                "$",
                Empty,
            ),
        ),
        entity: false,
        on_root_type: false,
    },
}
