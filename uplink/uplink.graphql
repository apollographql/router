"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy("The URL that specifies the behaviour of this scalar." url: String!) on SCALAR
type FetchError {
  code: FetchErrorCode!
  message: String!
}
enum FetchErrorCode {
  "This token provided is not a valid graph token. Do not retry"
  AUTHENTICATION_FAILED
  "This token does not have access to fetch the schema for this ref. Do not retry."
  ACCESS_DENIED
  "The graphRef passed is not a valid ref or no configuration for that ref is found. Do not retry"
  UNKNOWN_REF
  "An internal server error occurred. Please retry with some backoff"
  RETRY_LATER
}
type Message {
  level: MessageLevel!
  body: String!
}
enum MessageLevel {
  ERROR
  WARN
  INFO
}
type Query {
  "Fetch the configuration for a router. If a valid configuration is available, it will be readable as cSDL."
  routerConfig("The reference to a graph variant, like `engine@prod` or `engine` (i.e. `engine@current`)." ref: String!, apiKey: String!, "If specified and the ID of the result is lower than or equal to it, Unchanged will be returned rather RouterConfigResult" ifAfterId: ID): RouterConfigResponse!
}
union RouterConfigResponse = RouterConfigResult | Unchanged | FetchError
type RouterConfigResult {
  id: ID!
  "The configuration as core schema"
  supergraphSDL: String!
  "Messages that should be reported back to the operators of this router, eg through logs and/or monitoring."
  messages: [Message!]!
}
type Unchanged {
  id: ID!
}
