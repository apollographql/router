---
source: apollo-router/src/configuration/tests.rs
expression: "&schema"
---
{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "definitions": {
    "AWSSigV4Config": {
      "description": "Configure AWS sigv4 auth.",
      "oneOf": [
        {
          "additionalProperties": false,
          "properties": {
            "hardcoded": {
              "$ref": "#/definitions/AWSSigV4HardcodedConfig",
              "description": "#/definitions/AWSSigV4HardcodedConfig"
            }
          },
          "required": [
            "hardcoded"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default_chain": {
              "$ref": "#/definitions/DefaultChainConfig",
              "description": "#/definitions/DefaultChainConfig"
            }
          },
          "required": [
            "default_chain"
          ],
          "type": "object"
        }
      ]
    },
    "AWSSigV4HardcodedConfig": {
      "additionalProperties": false,
      "description": "Hardcoded Config using access_key and secret. Prefer using DefaultChain instead.",
      "properties": {
        "access_key_id": {
          "description": "The ID for this access key.",
          "type": "string"
        },
        "assume_role": {
          "$ref": "#/definitions/AssumeRoleProvider",
          "description": "#/definitions/AssumeRoleProvider",
          "nullable": true
        },
        "region": {
          "description": "The AWS region this chain applies to.",
          "type": "string"
        },
        "secret_access_key": {
          "description": "The secret key used to sign requests.",
          "type": "string"
        },
        "service_name": {
          "description": "The service you're trying to access, eg: \"s3\", \"vpc-lattice-svcs\", etc.",
          "type": "string"
        }
      },
      "required": [
        "access_key_id",
        "region",
        "secret_access_key",
        "service_name"
      ],
      "type": "object"
    },
    "ActiveRequestsAttributes": {
      "additionalProperties": false,
      "properties": {
        "http.request.method": {
          "default": false,
          "description": "The HTTP request method",
          "type": "boolean"
        },
        "server.address": {
          "default": false,
          "description": "The server address",
          "type": "boolean"
        },
        "server.port": {
          "default": false,
          "description": "The server port",
          "type": "boolean"
        },
        "url.scheme": {
          "default": false,
          "description": "The URL scheme",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "AgentConfig": {
      "additionalProperties": false,
      "properties": {
        "endpoint": {
          "$ref": "#/definitions/SocketEndpoint",
          "description": "#/definitions/SocketEndpoint"
        }
      },
      "type": "object"
    },
    "ApiSchemaMode": {
      "description": "API schema generation modes.",
      "oneOf": [
        {
          "description": "Use the new Rust-based implementation.",
          "enum": [
            "new"
          ],
          "type": "string"
        },
        {
          "description": "Use the old JavaScript-based implementation.",
          "enum": [
            "legacy"
          ],
          "type": "string"
        },
        {
          "description": "Use Rust-based and Javascript-based implementations side by side, logging warnings if the implementations disagree.",
          "enum": [
            "both"
          ],
          "type": "string"
        }
      ]
    },
    "ApolloMetricsGenerationMode": {
      "description": "Apollo usage report signature and referenced field generation modes.",
      "oneOf": [
        {
          "description": "Use the new Rust-based implementation.",
          "enum": [
            "new"
          ],
          "type": "string"
        },
        {
          "description": "Use the old JavaScript-based implementation.",
          "enum": [
            "legacy"
          ],
          "type": "string"
        },
        {
          "description": "Use Rust-based and Javascript-based implementations side by side, logging warnings if the implementations disagree.",
          "enum": [
            "both"
          ],
          "type": "string"
        }
      ]
    },
    "ApolloMetricsReferenceMode": {
      "description": "Apollo usage report reference generation modes.",
      "oneOf": [
        {
          "description": "Use the extended mode to report input object fields and enum value references as well as object fields.",
          "enum": [
            "extended"
          ],
          "type": "string"
        },
        {
          "description": "Use the standard mode that only reports referenced object fields.",
          "enum": [
            "standard"
          ],
          "type": "string"
        }
      ]
    },
    "ApolloSignatureNormalizationAlgorithm": {
      "description": "Apollo usage report signature normalization algorithm",
      "oneOf": [
        {
          "description": "Use the algorithm that matches the JavaScript-based implementation.",
          "enum": [
            "legacy"
          ],
          "type": "string"
        },
        {
          "description": "Use a new algorithm that includes input object forms, normalized aliases and variable names, and removes some edge cases from the JS implementation that affected normalization.",
          "enum": [
            "enhanced"
          ],
          "type": "string"
        }
      ]
    },
    "Apq": {
      "additionalProperties": false,
      "description": "Automatic Persisted Queries (APQ) configuration",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Activates Automatic Persisted Queries (enabled by default)",
          "type": "boolean"
        },
        "router": {
          "$ref": "#/definitions/Router",
          "description": "#/definitions/Router"
        },
        "subgraph": {
          "$ref": "#/definitions/SubgraphConfiguration_for_SubgraphApq",
          "description": "#/definitions/SubgraphConfiguration_for_SubgraphApq"
        }
      },
      "type": "object"
    },
    "AssumeRoleProvider": {
      "additionalProperties": false,
      "description": "Specify assumed role configuration.",
      "properties": {
        "external_id": {
          "description": "Unique identifier that might be required when you assume a role in another account.",
          "nullable": true,
          "type": "string"
        },
        "role_arn": {
          "description": "Amazon Resource Name (ARN) for the role assumed when making requests",
          "type": "string"
        },
        "session_name": {
          "description": "Uniquely identify a session when the same role is assumed by different principals or for different reasons.",
          "type": "string"
        }
      },
      "required": [
        "role_arn",
        "session_name"
      ],
      "type": "object"
    },
    "AttributeArray": {
      "anyOf": [
        {
          "description": "Array of bools",
          "items": {
            "type": "boolean"
          },
          "type": "array"
        },
        {
          "description": "Array of integers",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        },
        {
          "description": "Array of floats",
          "items": {
            "format": "double",
            "type": "number"
          },
          "type": "array"
        },
        {
          "description": "Array of strings",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      ]
    },
    "AttributeValue": {
      "anyOf": [
        {
          "description": "bool values",
          "type": "boolean"
        },
        {
          "description": "i64 values",
          "format": "int64",
          "type": "integer"
        },
        {
          "description": "f64 values",
          "format": "double",
          "type": "number"
        },
        {
          "description": "String values",
          "type": "string"
        },
        {
          "$ref": "#/definitions/AttributeArray",
          "description": "#/definitions/AttributeArray"
        }
      ]
    },
    "AttributesForwardConf": {
      "additionalProperties": false,
      "description": "Configuration to add custom attributes/labels on metrics to subgraphs",
      "properties": {
        "context": {
          "description": "Configuration to forward values from the context to custom attributes/labels in metrics",
          "items": {
            "$ref": "#/definitions/ContextForward",
            "description": "#/definitions/ContextForward"
          },
          "type": "array"
        },
        "errors": {
          "$ref": "#/definitions/ErrorsForward",
          "description": "#/definitions/ErrorsForward"
        },
        "request": {
          "$ref": "#/definitions/Forward",
          "description": "#/definitions/Forward"
        },
        "response": {
          "$ref": "#/definitions/Forward",
          "description": "#/definitions/Forward"
        },
        "static": {
          "description": "Configuration to insert custom attributes/labels in metrics",
          "items": {
            "$ref": "#/definitions/Insert2",
            "description": "#/definitions/Insert2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AuthConfig": {
      "oneOf": [
        {
          "additionalProperties": false,
          "properties": {
            "aws_sig_v4": {
              "$ref": "#/definitions/AWSSigV4Config",
              "description": "#/definitions/AWSSigV4Config"
            }
          },
          "required": [
            "aws_sig_v4"
          ],
          "type": "object"
        }
      ]
    },
    "Auto": {
      "enum": [
        "auto"
      ],
      "type": "string"
    },
    "AvailableParallelism": {
      "anyOf": [
        {
          "$ref": "#/definitions/Auto",
          "description": "#/definitions/Auto"
        },
        {
          "format": "uint",
          "minimum": 1.0,
          "type": "integer"
        }
      ]
    },
    "BatchProcessorConfig": {
      "description": "Batch processor configuration",
      "properties": {
        "max_concurrent_exports": {
          "default": 1,
          "description": "Maximum number of concurrent exports\n\nLimits the number of spawned tasks for exports and thus memory consumed by an exporter. A value of 1 will cause exports to be performed synchronously on the BatchSpanProcessor task. The default is 1.",
          "format": "uint",
          "minimum": 0.0,
          "type": "integer"
        },
        "max_export_batch_size": {
          "default": 512,
          "description": "The maximum number of spans to process in a single batch. If there are more than one batch worth of spans then it processes multiple batches of spans one batch after the other without any delay. The default value is 512.",
          "format": "uint",
          "minimum": 0.0,
          "type": "integer"
        },
        "max_export_timeout": {
          "default": {
            "nanos": 0,
            "secs": 30
          },
          "description": "The maximum duration to export a batch of data. The default value is 30 seconds.",
          "type": "string"
        },
        "max_queue_size": {
          "default": 2048,
          "description": "The maximum queue size to buffer spans for delayed processing. If the queue gets full it drops the spans. The default value of is 2048.",
          "format": "uint",
          "minimum": 0.0,
          "type": "integer"
        },
        "scheduled_delay": {
          "default": {
            "nanos": 0,
            "secs": 5
          },
          "description": "The delay interval in milliseconds between two consecutive processing of batches. The default value is 5 seconds.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Batching": {
      "additionalProperties": false,
      "description": "Configuration for Batching",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Activates Batching (disabled by default)",
          "type": "boolean"
        },
        "mode": {
          "$ref": "#/definitions/BatchingMode",
          "description": "#/definitions/BatchingMode"
        },
        "subgraph": {
          "$ref": "#/definitions/SubgraphConfiguration_for_CommonBatchingConfig",
          "description": "#/definitions/SubgraphConfiguration_for_CommonBatchingConfig",
          "nullable": true
        }
      },
      "required": [
        "mode"
      ],
      "type": "object"
    },
    "BatchingMode": {
      "oneOf": [
        {
          "description": "batch_http_link",
          "enum": [
            "batch_http_link"
          ],
          "type": "string"
        }
      ]
    },
    "BodyForward": {
      "additionalProperties": false,
      "description": "Configuration to forward body values in metric attributes/labels",
      "properties": {
        "default": {
          "$ref": "#/definitions/AttributeValue",
          "description": "#/definitions/AttributeValue",
          "nullable": true
        },
        "name": {
          "description": "The name of the attribute",
          "type": "string"
        },
        "path": {
          "description": "The path in the body",
          "type": "string"
        }
      },
      "required": [
        "name",
        "path"
      ],
      "type": "object"
    },
    "CSRFConfig": {
      "additionalProperties": false,
      "description": "CSRF Configuration.",
      "properties": {
        "required_headers": {
          "default": [
            "x-apollo-operation-name",
            "apollo-require-preflight"
          ],
          "description": "Override the headers to check for by setting custom_headers Note that if you set required_headers here, you may also want to have a look at your `CORS` configuration, and make sure you either: - did not set any `allow_headers` list (so it defaults to `mirror_request`) - added your required headers to the allow_headers list, as shown in the `examples/cors-and-csrf/custom-headers.router.yaml` files.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "unsafe_disabled": {
          "default": false,
          "description": "The CSRF plugin is enabled by default; set unsafe_disabled = true to disable the plugin behavior Note that setting this to true is deemed unsafe. See <https://developer.mozilla.org/en-US/docs/Glossary/CSRF>.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Cache": {
      "additionalProperties": false,
      "description": "Cache configuration",
      "properties": {
        "in_memory": {
          "$ref": "#/definitions/InMemoryCache",
          "description": "#/definitions/InMemoryCache"
        },
        "redis": {
          "$ref": "#/definitions/RedisCache",
          "description": "#/definitions/RedisCache",
          "nullable": true
        }
      },
      "type": "object"
    },
    "CallbackMode": {
      "additionalProperties": false,
      "description": "Using a callback url",
      "properties": {
        "heartbeat_interval": {
          "$ref": "#/definitions/HeartbeatInterval",
          "description": "#/definitions/HeartbeatInterval"
        },
        "listen": {
          "$ref": "#/definitions/ListenAddr",
          "description": "#/definitions/ListenAddr",
          "nullable": true
        },
        "path": {
          "description": "Specify on which path you want to listen for callbacks (default: /callback)",
          "nullable": true,
          "type": "string",
          "writeOnly": true
        },
        "public_url": {
          "description": "URL used to access this router instance, including the path configured on the Router",
          "type": "string"
        },
        "subgraphs": {
          "default": [],
          "description": "Specify on which subgraph we enable the callback mode for subscription If empty it applies to all subgraphs (passthrough mode takes precedence)",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": [
        "public_url"
      ],
      "type": "object"
    },
    "Chaos": {
      "additionalProperties": false,
      "description": "Configuration for chaos testing, trying to reproduce bugs that require uncommon conditions. You probably don’t want this in production!",
      "properties": {
        "force_reload": {
          "default": null,
          "description": "Force a hot reload of the Router (as if the schema or configuration had changed) at a regular time interval.",
          "nullable": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CollectorConfig": {
      "additionalProperties": false,
      "properties": {
        "endpoint": {
          "$ref": "#/definitions/UriEndpoint",
          "description": "#/definitions/UriEndpoint"
        },
        "password": {
          "default": null,
          "description": "The optional password",
          "nullable": true,
          "type": "string"
        },
        "username": {
          "default": null,
          "description": "The optional username",
          "nullable": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CommonBatchingConfig": {
      "description": "Common options for configuring subgraph batching",
      "properties": {
        "enabled": {
          "description": "Whether this batching config should be enabled",
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "Compression": {
      "oneOf": [
        {
          "description": "gzip",
          "enum": [
            "gzip"
          ],
          "type": "string"
        },
        {
          "description": "deflate",
          "enum": [
            "deflate"
          ],
          "type": "string"
        },
        {
          "description": "brotli",
          "enum": [
            "br"
          ],
          "type": "string"
        },
        {
          "description": "identity",
          "enum": [
            "identity"
          ],
          "type": "string"
        }
      ]
    },
    "Condition_for_GraphQLSelector": {
      "oneOf": [
        {
          "additionalProperties": false,
          "description": "A condition to check a selection against a value.",
          "properties": {
            "eq": {
              "items": {
                "$ref": "#/definitions/SelectorOrValue_for_GraphQLSelector",
                "description": "#/definitions/SelectorOrValue_for_GraphQLSelector"
              },
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            }
          },
          "required": [
            "eq"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The first selection must be greater than the second selection.",
          "properties": {
            "gt": {
              "items": {
                "$ref": "#/definitions/SelectorOrValue_for_GraphQLSelector",
                "description": "#/definitions/SelectorOrValue_for_GraphQLSelector"
              },
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            }
          },
          "required": [
            "gt"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The first selection must be less than the second selection.",
          "properties": {
            "lt": {
              "items": {
                "$ref": "#/definitions/SelectorOrValue_for_GraphQLSelector",
                "description": "#/definitions/SelectorOrValue_for_GraphQLSelector"
              },
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            }
          },
          "required": [
            "lt"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "A condition to check a selection against a selector.",
          "properties": {
            "exists": {
              "$ref": "#/definitions/GraphQLSelector",
              "description": "#/definitions/GraphQLSelector"
            }
          },
          "required": [
            "exists"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "All sub-conditions must be true.",
          "properties": {
            "all": {
              "items": {
                "$ref": "#/definitions/Condition_for_GraphQLSelector",
                "description": "#/definitions/Condition_for_GraphQLSelector"
              },
              "type": "array"
            }
          },
          "required": [
            "all"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "At least one sub-conditions must be true.",
          "properties": {
            "any": {
              "items": {
                "$ref": "#/definitions/Condition_for_GraphQLSelector",
                "description": "#/definitions/Condition_for_GraphQLSelector"
              },
              "type": "array"
            }
          },
          "required": [
            "any"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The sub-condition must not be true",
          "properties": {
            "not": {
              "$ref": "#/definitions/Condition_for_GraphQLSelector",
              "description": "#/definitions/Condition_for_GraphQLSelector"
            }
          },
          "required": [
            "not"
          ],
          "type": "object"
        },
        {
          "description": "Static true condition",
          "enum": [
            "true"
          ],
          "type": "string"
        },
        {
          "description": "Static false condition",
          "enum": [
            "false"
          ],
          "type": "string"
        }
      ]
    },
    "Condition_for_RouterSelector": {
      "oneOf": [
        {
          "additionalProperties": false,
          "description": "A condition to check a selection against a value.",
          "properties": {
            "eq": {
              "items": {
                "$ref": "#/definitions/SelectorOrValue_for_RouterSelector",
                "description": "#/definitions/SelectorOrValue_for_RouterSelector"
              },
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            }
          },
          "required": [
            "eq"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The first selection must be greater than the second selection.",
          "properties": {
            "gt": {
              "items": {
                "$ref": "#/definitions/SelectorOrValue_for_RouterSelector",
                "description": "#/definitions/SelectorOrValue_for_RouterSelector"
              },
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            }
          },
          "required": [
            "gt"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The first selection must be less than the second selection.",
          "properties": {
            "lt": {
              "items": {
                "$ref": "#/definitions/SelectorOrValue_for_RouterSelector",
                "description": "#/definitions/SelectorOrValue_for_RouterSelector"
              },
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            }
          },
          "required": [
            "lt"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "A condition to check a selection against a selector.",
          "properties": {
            "exists": {
              "$ref": "#/definitions/RouterSelector",
              "description": "#/definitions/RouterSelector"
            }
          },
          "required": [
            "exists"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "All sub-conditions must be true.",
          "properties": {
            "all": {
              "items": {
                "$ref": "#/definitions/Condition_for_RouterSelector",
                "description": "#/definitions/Condition_for_RouterSelector"
              },
              "type": "array"
            }
          },
          "required": [
            "all"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "At least one sub-conditions must be true.",
          "properties": {
            "any": {
              "items": {
                "$ref": "#/definitions/Condition_for_RouterSelector",
                "description": "#/definitions/Condition_for_RouterSelector"
              },
              "type": "array"
            }
          },
          "required": [
            "any"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The sub-condition must not be true",
          "properties": {
            "not": {
              "$ref": "#/definitions/Condition_for_RouterSelector",
              "description": "#/definitions/Condition_for_RouterSelector"
            }
          },
          "required": [
            "not"
          ],
          "type": "object"
        },
        {
          "description": "Static true condition",
          "enum": [
            "true"
          ],
          "type": "string"
        },
        {
          "description": "Static false condition",
          "enum": [
            "false"
          ],
          "type": "string"
        }
      ]
    },
    "Condition_for_SubgraphSelector": {
      "oneOf": [
        {
          "additionalProperties": false,
          "description": "A condition to check a selection against a value.",
          "properties": {
            "eq": {
              "items": {
                "$ref": "#/definitions/SelectorOrValue_for_SubgraphSelector",
                "description": "#/definitions/SelectorOrValue_for_SubgraphSelector"
              },
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            }
          },
          "required": [
            "eq"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The first selection must be greater than the second selection.",
          "properties": {
            "gt": {
              "items": {
                "$ref": "#/definitions/SelectorOrValue_for_SubgraphSelector",
                "description": "#/definitions/SelectorOrValue_for_SubgraphSelector"
              },
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            }
          },
          "required": [
            "gt"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The first selection must be less than the second selection.",
          "properties": {
            "lt": {
              "items": {
                "$ref": "#/definitions/SelectorOrValue_for_SubgraphSelector",
                "description": "#/definitions/SelectorOrValue_for_SubgraphSelector"
              },
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            }
          },
          "required": [
            "lt"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "A condition to check a selection against a selector.",
          "properties": {
            "exists": {
              "$ref": "#/definitions/SubgraphSelector",
              "description": "#/definitions/SubgraphSelector"
            }
          },
          "required": [
            "exists"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "All sub-conditions must be true.",
          "properties": {
            "all": {
              "items": {
                "$ref": "#/definitions/Condition_for_SubgraphSelector",
                "description": "#/definitions/Condition_for_SubgraphSelector"
              },
              "type": "array"
            }
          },
          "required": [
            "all"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "At least one sub-conditions must be true.",
          "properties": {
            "any": {
              "items": {
                "$ref": "#/definitions/Condition_for_SubgraphSelector",
                "description": "#/definitions/Condition_for_SubgraphSelector"
              },
              "type": "array"
            }
          },
          "required": [
            "any"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The sub-condition must not be true",
          "properties": {
            "not": {
              "$ref": "#/definitions/Condition_for_SubgraphSelector",
              "description": "#/definitions/Condition_for_SubgraphSelector"
            }
          },
          "required": [
            "not"
          ],
          "type": "object"
        },
        {
          "description": "Static true condition",
          "enum": [
            "true"
          ],
          "type": "string"
        },
        {
          "description": "Static false condition",
          "enum": [
            "false"
          ],
          "type": "string"
        }
      ]
    },
    "Condition_for_SupergraphSelector": {
      "oneOf": [
        {
          "additionalProperties": false,
          "description": "A condition to check a selection against a value.",
          "properties": {
            "eq": {
              "items": {
                "$ref": "#/definitions/SelectorOrValue_for_SupergraphSelector",
                "description": "#/definitions/SelectorOrValue_for_SupergraphSelector"
              },
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            }
          },
          "required": [
            "eq"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The first selection must be greater than the second selection.",
          "properties": {
            "gt": {
              "items": {
                "$ref": "#/definitions/SelectorOrValue_for_SupergraphSelector",
                "description": "#/definitions/SelectorOrValue_for_SupergraphSelector"
              },
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            }
          },
          "required": [
            "gt"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The first selection must be less than the second selection.",
          "properties": {
            "lt": {
              "items": {
                "$ref": "#/definitions/SelectorOrValue_for_SupergraphSelector",
                "description": "#/definitions/SelectorOrValue_for_SupergraphSelector"
              },
              "maxItems": 2,
              "minItems": 2,
              "type": "array"
            }
          },
          "required": [
            "lt"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "A condition to check a selection against a selector.",
          "properties": {
            "exists": {
              "$ref": "#/definitions/SupergraphSelector",
              "description": "#/definitions/SupergraphSelector"
            }
          },
          "required": [
            "exists"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "All sub-conditions must be true.",
          "properties": {
            "all": {
              "items": {
                "$ref": "#/definitions/Condition_for_SupergraphSelector",
                "description": "#/definitions/Condition_for_SupergraphSelector"
              },
              "type": "array"
            }
          },
          "required": [
            "all"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "At least one sub-conditions must be true.",
          "properties": {
            "any": {
              "items": {
                "$ref": "#/definitions/Condition_for_SupergraphSelector",
                "description": "#/definitions/Condition_for_SupergraphSelector"
              },
              "type": "array"
            }
          },
          "required": [
            "any"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The sub-condition must not be true",
          "properties": {
            "not": {
              "$ref": "#/definitions/Condition_for_SupergraphSelector",
              "description": "#/definitions/Condition_for_SupergraphSelector"
            }
          },
          "required": [
            "not"
          ],
          "type": "object"
        },
        {
          "description": "Static true condition",
          "enum": [
            "true"
          ],
          "type": "string"
        },
        {
          "description": "Static false condition",
          "enum": [
            "false"
          ],
          "type": "string"
        }
      ]
    },
    "Conf": {
      "description": "Configuration for the test plugin",
      "properties": {
        "name": {
          "description": "The name of the test",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Conf2": {
      "additionalProperties": false,
      "description": "Authentication",
      "properties": {
        "router": {
          "$ref": "#/definitions/RouterConf",
          "description": "#/definitions/RouterConf",
          "nullable": true
        },
        "subgraph": {
          "$ref": "#/definitions/Config3",
          "description": "#/definitions/Config3",
          "nullable": true
        }
      },
      "type": "object"
    },
    "Conf3": {
      "description": "Authorization plugin",
      "properties": {
        "directives": {
          "$ref": "#/definitions/Directives",
          "description": "#/definitions/Directives"
        },
        "require_authentication": {
          "default": false,
          "description": "Reject unauthenticated requests",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Conf4": {
      "additionalProperties": false,
      "description": "Configures the externalization plugin",
      "properties": {
        "execution": {
          "$ref": "#/definitions/ExecutionStage",
          "description": "#/definitions/ExecutionStage"
        },
        "router": {
          "$ref": "#/definitions/RouterStage",
          "description": "#/definitions/RouterStage"
        },
        "subgraph": {
          "$ref": "#/definitions/SubgraphStages",
          "description": "#/definitions/SubgraphStages"
        },
        "supergraph": {
          "$ref": "#/definitions/SupergraphStage",
          "description": "#/definitions/SupergraphStage"
        },
        "timeout": {
          "default": {
            "nanos": 0,
            "secs": 1
          },
          "description": "The timeout for external requests",
          "type": "string"
        },
        "url": {
          "description": "The url you'd like to offload processing to",
          "type": "string"
        }
      },
      "required": [
        "url"
      ],
      "type": "object"
    },
    "Conf5": {
      "anyOf": [
        {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Subgraph URL mappings",
          "type": "object"
        }
      ],
      "description": "Subgraph URL mappings"
    },
    "Conf6": {
      "additionalProperties": false,
      "description": "Configuration for the Rhai Plugin",
      "properties": {
        "main": {
          "description": "The main entry point for Rhai script evaluation",
          "nullable": true,
          "type": "string"
        },
        "scripts": {
          "description": "The directory where Rhai scripts can be found",
          "nullable": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Conf7": {
      "additionalProperties": false,
      "description": "Telemetry configuration",
      "properties": {
        "apollo": {
          "$ref": "#/definitions/Config8",
          "description": "#/definitions/Config8"
        },
        "exporters": {
          "$ref": "#/definitions/Exporters",
          "description": "#/definitions/Exporters"
        },
        "instrumentation": {
          "$ref": "#/definitions/Instrumentation",
          "description": "#/definitions/Instrumentation"
        }
      },
      "type": "object"
    },
    "Config": {
      "description": "This is a broken plugin for testing purposes only.",
      "properties": {
        "enabled": {
          "description": "Enable the broken plugin.",
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "Config10": {
      "additionalProperties": false,
      "description": "Prometheus configuration",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Set to true to enable",
          "type": "boolean"
        },
        "listen": {
          "$ref": "#/definitions/ListenAddr",
          "description": "#/definitions/ListenAddr"
        },
        "path": {
          "default": "/metrics",
          "description": "The path where prometheus will be exposed",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Config11": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "agent": {
              "$ref": "#/definitions/AgentConfig",
              "description": "#/definitions/AgentConfig"
            },
            "batch_processor": {
              "$ref": "#/definitions/BatchProcessorConfig",
              "description": "#/definitions/BatchProcessorConfig"
            },
            "enabled": {
              "description": "Enable Jaeger",
              "type": "boolean"
            }
          },
          "required": [
            "enabled"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "batch_processor": {
              "$ref": "#/definitions/BatchProcessorConfig",
              "description": "#/definitions/BatchProcessorConfig"
            },
            "collector": {
              "$ref": "#/definitions/CollectorConfig",
              "description": "#/definitions/CollectorConfig"
            },
            "enabled": {
              "description": "Enable Jaeger",
              "type": "boolean"
            }
          },
          "required": [
            "enabled"
          ],
          "type": "object"
        }
      ]
    },
    "Config12": {
      "additionalProperties": false,
      "properties": {
        "batch_processor": {
          "$ref": "#/definitions/BatchProcessorConfig",
          "description": "#/definitions/BatchProcessorConfig"
        },
        "enabled": {
          "description": "Enable zipkin",
          "type": "boolean"
        },
        "endpoint": {
          "$ref": "#/definitions/UriEndpoint",
          "description": "#/definitions/UriEndpoint"
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "Config13": {
      "additionalProperties": false,
      "properties": {
        "batch_processor": {
          "$ref": "#/definitions/BatchProcessorConfig",
          "description": "#/definitions/BatchProcessorConfig"
        },
        "enable_span_mapping": {
          "default": false,
          "description": "Enable datadog span mapping for span name and resource name.",
          "type": "boolean"
        },
        "enabled": {
          "description": "Enable datadog",
          "type": "boolean"
        },
        "endpoint": {
          "$ref": "#/definitions/UriEndpoint",
          "description": "#/definitions/UriEndpoint"
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "Config14": {
      "additionalProperties": false,
      "description": "Configuration for the experimental traffic shaping plugin",
      "properties": {
        "all": {
          "$ref": "#/definitions/SubgraphShaping",
          "description": "#/definitions/SubgraphShaping",
          "nullable": true
        },
        "deduplicate_variables": {
          "default": null,
          "description": "DEPRECATED, now always enabled: Enable variable deduplication optimization when sending requests to subgraphs (https://github.com/apollographql/router/issues/87)",
          "nullable": true,
          "type": "boolean"
        },
        "router": {
          "$ref": "#/definitions/RouterShaping",
          "description": "#/definitions/RouterShaping",
          "nullable": true
        },
        "subgraphs": {
          "additionalProperties": {
            "$ref": "#/definitions/SubgraphShaping",
            "description": "#/definitions/SubgraphShaping"
          },
          "description": "Applied on specific subgraphs",
          "type": "object"
        }
      },
      "type": "object"
    },
    "Config2": {
      "description": "Restricted plugin (for testing purposes only)",
      "properties": {
        "enabled": {
          "description": "Enable the restricted plugin (for testing purposes only)",
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "Config3": {
      "additionalProperties": false,
      "description": "Configure subgraph authentication",
      "properties": {
        "all": {
          "$ref": "#/definitions/AuthConfig",
          "description": "#/definitions/AuthConfig",
          "nullable": true
        },
        "subgraphs": {
          "additionalProperties": {
            "$ref": "#/definitions/AuthConfig",
            "description": "#/definitions/AuthConfig"
          },
          "description": "Create a configuration that will apply only to a specific subgraph.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "Config4": {
      "additionalProperties": false,
      "description": "Configuration for header propagation",
      "properties": {
        "all": {
          "$ref": "#/definitions/HeadersLocation",
          "description": "#/definitions/HeadersLocation",
          "nullable": true
        },
        "subgraphs": {
          "additionalProperties": {
            "$ref": "#/definitions/HeadersLocation",
            "description": "#/definitions/HeadersLocation"
          },
          "description": "Rules to specific subgraphs",
          "type": "object"
        }
      },
      "type": "object"
    },
    "Config5": {
      "additionalProperties": false,
      "description": "Configuration for exposing errors that originate from subgraphs",
      "properties": {
        "all": {
          "default": false,
          "description": "Include errors from all subgraphs",
          "type": "boolean"
        },
        "subgraphs": {
          "additionalProperties": {
            "type": "boolean"
          },
          "default": {},
          "description": "Include errors from specific subgraphs",
          "type": "object"
        }
      },
      "type": "object"
    },
    "Config6": {
      "additionalProperties": false,
      "description": "Configuration for entity caching",
      "properties": {
        "enabled": {
          "default": null,
          "description": "activates caching for all subgraphs, unless overriden in subgraph specific configuration",
          "nullable": true,
          "type": "boolean"
        },
        "metrics": {
          "$ref": "#/definitions/Metrics",
          "description": "#/definitions/Metrics"
        },
        "redis": {
          "$ref": "#/definitions/RedisCache",
          "description": "#/definitions/RedisCache"
        },
        "subgraphs": {
          "additionalProperties": {
            "$ref": "#/definitions/Subgraph",
            "description": "#/definitions/Subgraph"
          },
          "description": "Per subgraph configuration",
          "type": "object"
        }
      },
      "required": [
        "redis"
      ],
      "type": "object"
    },
    "Config7": {
      "description": "Configuration for the progressive override plugin",
      "type": "object"
    },
    "Config8": {
      "additionalProperties": false,
      "properties": {
        "batch_processor": {
          "$ref": "#/definitions/BatchProcessorConfig",
          "description": "#/definitions/BatchProcessorConfig"
        },
        "buffer_size": {
          "default": 10000,
          "description": "The buffer size for sending traces to Apollo. Increase this if you are experiencing lost traces.",
          "format": "uint",
          "minimum": 1.0,
          "type": "integer"
        },
        "client_name_header": {
          "default": "apollographql-client-name",
          "description": "The name of the header to extract from requests when populating 'client nane' for traces and metrics in Apollo Studio.",
          "nullable": true,
          "type": "string"
        },
        "client_version_header": {
          "default": "apollographql-client-version",
          "description": "The name of the header to extract from requests when populating 'client version' for traces and metrics in Apollo Studio.",
          "nullable": true,
          "type": "string"
        },
        "endpoint": {
          "default": "https://usage-reporting.api.apollographql.com/api/ingress/traces",
          "description": "The Apollo Studio endpoint for exporting traces and metrics.",
          "type": "string"
        },
        "errors": {
          "$ref": "#/definitions/ErrorsConfiguration",
          "description": "#/definitions/ErrorsConfiguration"
        },
        "experimental_apollo_metrics_reference_mode": {
          "$ref": "#/definitions/ApolloMetricsReferenceMode",
          "description": "#/definitions/ApolloMetricsReferenceMode"
        },
        "experimental_apollo_signature_normalization_algorithm": {
          "$ref": "#/definitions/ApolloSignatureNormalizationAlgorithm",
          "description": "#/definitions/ApolloSignatureNormalizationAlgorithm"
        },
        "experimental_local_field_metrics": {
          "default": false,
          "description": "Enable field metrics that are generated without FTV1 to be sent to Apollo Studio.",
          "type": "boolean"
        },
        "experimental_otlp_endpoint": {
          "default": "https://usage-reporting.api.apollographql.com/",
          "description": "The Apollo Studio endpoint for exporting traces and metrics.",
          "type": "string"
        },
        "experimental_otlp_tracing_protocol": {
          "$ref": "#/definitions/Protocol",
          "description": "#/definitions/Protocol"
        },
        "experimental_otlp_tracing_sampler": {
          "$ref": "#/definitions/SamplerOption",
          "description": "#/definitions/SamplerOption"
        },
        "field_level_instrumentation_sampler": {
          "$ref": "#/definitions/SamplerOption",
          "description": "#/definitions/SamplerOption"
        },
        "send_headers": {
          "$ref": "#/definitions/ForwardHeaders",
          "description": "#/definitions/ForwardHeaders"
        },
        "send_variable_values": {
          "$ref": "#/definitions/ForwardValues",
          "description": "#/definitions/ForwardValues"
        }
      },
      "type": "object"
    },
    "Config9": {
      "additionalProperties": false,
      "properties": {
        "batch_processor": {
          "$ref": "#/definitions/BatchProcessorConfig",
          "description": "#/definitions/BatchProcessorConfig"
        },
        "enabled": {
          "description": "Enable otlp",
          "type": "boolean"
        },
        "endpoint": {
          "$ref": "#/definitions/UriEndpoint",
          "description": "#/definitions/UriEndpoint"
        },
        "grpc": {
          "$ref": "#/definitions/GrpcExporter",
          "description": "#/definitions/GrpcExporter"
        },
        "http": {
          "$ref": "#/definitions/HttpExporter",
          "description": "#/definitions/HttpExporter"
        },
        "protocol": {
          "$ref": "#/definitions/Protocol",
          "description": "#/definitions/Protocol"
        },
        "temporality": {
          "$ref": "#/definitions/Temporality",
          "description": "#/definitions/Temporality"
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "ContextForward": {
      "additionalProperties": false,
      "description": "Configuration to forward context values in metric attributes/labels",
      "properties": {
        "default": {
          "$ref": "#/definitions/AttributeValue",
          "description": "#/definitions/AttributeValue",
          "nullable": true
        },
        "named": {
          "description": "The name of the value in the context",
          "type": "string"
        },
        "rename": {
          "description": "The optional output name",
          "nullable": true,
          "type": "string"
        }
      },
      "required": [
        "named"
      ],
      "type": "object"
    },
    "Cors": {
      "additionalProperties": false,
      "description": "Cross origin request configuration.",
      "properties": {
        "allow_any_origin": {
          "default": false,
          "description": "Set to true to allow any origin.\n\nDefaults to false Having this set to true is the only way to allow Origin: null.",
          "type": "boolean"
        },
        "allow_credentials": {
          "default": false,
          "description": "Set to true to add the `Access-Control-Allow-Credentials` header.",
          "type": "boolean"
        },
        "allow_headers": {
          "default": [],
          "description": "The headers to allow.\n\nIf this value is not set, the router will mirror client's `Access-Control-Request-Headers`.\n\nNote that if you set headers here, you also want to have a look at your `CSRF` plugins configuration, and make sure you either: - accept `x-apollo-operation-name` AND / OR `apollo-require-preflight` - defined `csrf` required headers in your yml configuration, as shown in the `examples/cors-and-csrf/custom-headers.router.yaml` files.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "expose_headers": {
          "default": null,
          "description": "Which response headers should be made available to scripts running in the browser, in response to a cross-origin request.",
          "items": {
            "type": "string"
          },
          "nullable": true,
          "type": "array"
        },
        "match_origins": {
          "default": null,
          "description": "`Regex`es you want to match the origins against to determine if they're allowed. Defaults to an empty list. Note that `origins` will be evaluated before `match_origins`",
          "items": {
            "type": "string"
          },
          "nullable": true,
          "type": "array"
        },
        "max_age": {
          "default": null,
          "description": "The `Access-Control-Max-Age` header value in time units",
          "type": "string"
        },
        "methods": {
          "default": [
            "GET",
            "POST",
            "OPTIONS"
          ],
          "description": "Allowed request methods. Defaults to GET, POST, OPTIONS.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "origins": {
          "default": [
            "https://studio.apollographql.com"
          ],
          "description": "The origin(s) to allow requests from. Defaults to `https://studio.apollographql.com/` for Apollo Studio.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CostValue": {
      "oneOf": [
        {
          "description": "The estimated cost of the operation using the currently configured cost model",
          "enum": [
            "estimated"
          ],
          "type": "string"
        },
        {
          "description": "The actual cost of the operation using the currently configured cost model",
          "enum": [
            "actual"
          ],
          "type": "string"
        },
        {
          "description": "The delta between the estimated and actual cost of the operation using the currently configured cost model",
          "enum": [
            "delta"
          ],
          "type": "string"
        },
        {
          "description": "The result of the cost calculation. This is the error code returned by the cost calculation.",
          "enum": [
            "result"
          ],
          "type": "string"
        }
      ]
    },
    "DefaultAttributeRequirementLevel": {
      "oneOf": [
        {
          "description": "No default attributes set on spans, you have to set it one by one in the configuration to enable some attributes",
          "enum": [
            "none"
          ],
          "type": "string"
        },
        {
          "description": "Attributes that are marked as required in otel semantic conventions and apollo documentation will be included (default)",
          "enum": [
            "required"
          ],
          "type": "string"
        },
        {
          "description": "Attributes that are marked as required or recommended in otel semantic conventions and apollo documentation will be included",
          "enum": [
            "recommended"
          ],
          "type": "string"
        }
      ]
    },
    "DefaultChainConfig": {
      "additionalProperties": false,
      "description": "Configuration of the DefaultChainProvider",
      "properties": {
        "assume_role": {
          "$ref": "#/definitions/AssumeRoleProvider",
          "description": "#/definitions/AssumeRoleProvider",
          "nullable": true
        },
        "profile_name": {
          "description": "The profile name used by this provider",
          "nullable": true,
          "type": "string"
        },
        "region": {
          "description": "The AWS region this chain applies to.",
          "type": "string"
        },
        "service_name": {
          "description": "The service you're trying to access, eg: \"s3\", \"vpc-lattice-svcs\", etc.",
          "type": "string"
        }
      },
      "required": [
        "region",
        "service_name"
      ],
      "type": "object"
    },
    "DefaultedStandardInstrument_for_ActiveRequestsAttributes": {
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "boolean"
        },
        {
          "additionalProperties": false,
          "properties": {
            "attributes": {
              "$ref": "#/definitions/ActiveRequestsAttributes",
              "description": "#/definitions/ActiveRequestsAttributes"
            }
          },
          "required": [
            "attributes"
          ],
          "type": "object"
        }
      ]
    },
    "DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector": {
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "boolean"
        },
        {
          "additionalProperties": false,
          "properties": {
            "attributes": {
              "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector",
              "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector"
            }
          },
          "required": [
            "attributes"
          ],
          "type": "object"
        }
      ]
    },
    "DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector": {
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "boolean"
        },
        {
          "additionalProperties": false,
          "properties": {
            "attributes": {
              "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector",
              "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector"
            }
          },
          "required": [
            "attributes"
          ],
          "type": "object"
        }
      ]
    },
    "DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector": {
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "boolean"
        },
        {
          "additionalProperties": false,
          "properties": {
            "attributes": {
              "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector",
              "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector"
            }
          },
          "required": [
            "attributes"
          ],
          "type": "object"
        }
      ]
    },
    "DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector": {
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "boolean"
        },
        {
          "additionalProperties": false,
          "properties": {
            "attributes": {
              "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector",
              "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector"
            }
          },
          "required": [
            "attributes"
          ],
          "type": "object"
        }
      ]
    },
    "DemandControlConfig": {
      "additionalProperties": false,
      "description": "Demand control configuration",
      "properties": {
        "enabled": {
          "description": "Enable demand control",
          "type": "boolean"
        },
        "mode": {
          "$ref": "#/definitions/Mode",
          "description": "#/definitions/Mode"
        },
        "strategy": {
          "$ref": "#/definitions/StrategyConfig",
          "description": "#/definitions/StrategyConfig"
        }
      },
      "required": [
        "enabled",
        "mode",
        "strategy"
      ],
      "type": "object"
    },
    "Directives": {
      "properties": {
        "dry_run": {
          "default": false,
          "description": "generates the authorization error messages without modying the query",
          "type": "boolean"
        },
        "enabled": {
          "default": true,
          "description": "enables the `@authenticated` and `@requiresScopes` directives",
          "type": "boolean"
        },
        "errors": {
          "$ref": "#/definitions/ErrorConfig",
          "description": "#/definitions/ErrorConfig"
        },
        "reject_unauthorized": {
          "default": false,
          "description": "refuse a query entirely if any part would be filtered",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Disabled": {
      "enum": [
        "disabled"
      ],
      "type": "string"
    },
    "Enabled": {
      "enum": [
        "enabled"
      ],
      "type": "string"
    },
    "ErrorConfig": {
      "properties": {
        "log": {
          "default": true,
          "description": "log authorization errors",
          "type": "boolean"
        },
        "response": {
          "$ref": "#/definitions/ErrorLocation",
          "description": "#/definitions/ErrorLocation"
        }
      },
      "type": "object"
    },
    "ErrorConfiguration": {
      "additionalProperties": false,
      "properties": {
        "redact": {
          "default": true,
          "description": "Redact subgraph errors to Apollo Studio",
          "type": "boolean"
        },
        "send": {
          "default": true,
          "description": "Send subgraph errors to Apollo Studio",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ErrorLocation": {
      "oneOf": [
        {
          "description": "store authorization errors in the response errors",
          "enum": [
            "errors"
          ],
          "type": "string"
        },
        {
          "description": "store authorization errors in the response extensions",
          "enum": [
            "extensions"
          ],
          "type": "string"
        },
        {
          "description": "do not add the authorization errors to the GraphQL response",
          "enum": [
            "disabled"
          ],
          "type": "string"
        }
      ]
    },
    "ErrorRepr": {
      "oneOf": [
        {
          "description": "The error reason",
          "enum": [
            "reason"
          ],
          "type": "string"
        }
      ]
    },
    "ErrorsConfiguration": {
      "additionalProperties": false,
      "properties": {
        "subgraph": {
          "$ref": "#/definitions/SubgraphErrorConfig",
          "description": "#/definitions/SubgraphErrorConfig"
        }
      },
      "type": "object"
    },
    "ErrorsForward": {
      "additionalProperties": false,
      "properties": {
        "extensions": {
          "description": "Forward extensions values as custom attributes/labels in metrics",
          "items": {
            "$ref": "#/definitions/BodyForward",
            "description": "#/definitions/BodyForward"
          },
          "type": "array"
        },
        "include_messages": {
          "default": null,
          "description": "Will include the error message in a \"message\" attribute",
          "nullable": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "EventLevel": {
      "enum": [
        "info",
        "warn",
        "error",
        "off"
      ],
      "type": "string"
    },
    "EventOn": {
      "description": "When to trigger the event.",
      "oneOf": [
        {
          "description": "Log the event on request",
          "enum": [
            "request"
          ],
          "type": "string"
        },
        {
          "description": "Log the event on response",
          "enum": [
            "response"
          ],
          "type": "string"
        },
        {
          "description": "Log the event on every chunks in the response",
          "enum": [
            "event_response"
          ],
          "type": "string"
        },
        {
          "description": "Log the event on error",
          "enum": [
            "error"
          ],
          "type": "string"
        }
      ]
    },
    "Event_for_RouterAttributes_and_RouterSelector": {
      "description": "An event that can be logged as part of a trace. The event has an implicit `type` attribute that matches the name of the event in the yaml and a message that can be used to provide additional information.",
      "properties": {
        "attributes": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector"
        },
        "condition": {
          "$ref": "#/definitions/Condition_for_RouterSelector",
          "description": "#/definitions/Condition_for_RouterSelector"
        },
        "level": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        },
        "message": {
          "description": "The event message.",
          "type": "string"
        },
        "on": {
          "$ref": "#/definitions/EventOn",
          "description": "#/definitions/EventOn"
        }
      },
      "required": [
        "level",
        "message",
        "on"
      ],
      "type": "object"
    },
    "Event_for_SubgraphAttributes_and_SubgraphSelector": {
      "description": "An event that can be logged as part of a trace. The event has an implicit `type` attribute that matches the name of the event in the yaml and a message that can be used to provide additional information.",
      "properties": {
        "attributes": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector"
        },
        "condition": {
          "$ref": "#/definitions/Condition_for_SubgraphSelector",
          "description": "#/definitions/Condition_for_SubgraphSelector"
        },
        "level": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        },
        "message": {
          "description": "The event message.",
          "type": "string"
        },
        "on": {
          "$ref": "#/definitions/EventOn",
          "description": "#/definitions/EventOn"
        }
      },
      "required": [
        "level",
        "message",
        "on"
      ],
      "type": "object"
    },
    "Event_for_SupergraphAttributes_and_SupergraphSelector": {
      "description": "An event that can be logged as part of a trace. The event has an implicit `type` attribute that matches the name of the event in the yaml and a message that can be used to provide additional information.",
      "properties": {
        "attributes": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector"
        },
        "condition": {
          "$ref": "#/definitions/Condition_for_SupergraphSelector",
          "description": "#/definitions/Condition_for_SupergraphSelector"
        },
        "level": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        },
        "message": {
          "description": "The event message.",
          "type": "string"
        },
        "on": {
          "$ref": "#/definitions/EventOn",
          "description": "#/definitions/EventOn"
        }
      },
      "required": [
        "level",
        "message",
        "on"
      ],
      "type": "object"
    },
    "Event_for_SupergraphSelector": {
      "oneOf": [
        {
          "description": "For every supergraph response payload (including subscription events and defer events)",
          "enum": [
            "event_duration"
          ],
          "type": "string"
        },
        {
          "description": "For every supergraph response payload (including subscription events and defer events)",
          "enum": [
            "event_unit"
          ],
          "type": "string"
        },
        {
          "additionalProperties": false,
          "description": "For every supergraph response payload (including subscription events and defer events)",
          "properties": {
            "event_custom": {
              "$ref": "#/definitions/SupergraphSelector",
              "description": "#/definitions/SupergraphSelector"
            }
          },
          "required": [
            "event_custom"
          ],
          "type": "object"
        }
      ]
    },
    "Events": {
      "additionalProperties": false,
      "description": "Events are",
      "properties": {
        "router": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::events::RouterEventsConfig_apollo_router::plugins::telemetry::config_new::events::Event<apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes,_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector>",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::events::RouterEventsConfig_apollo_router::plugins::telemetry::config_new::events::Event<apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes, apollo_router::plugins::telemetry::config_new::selectors::RouterSelector>"
        },
        "subgraph": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::events::SubgraphEventsConfig_apollo_router::plugins::telemetry::config_new::events::Event<apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes,_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector>",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::events::SubgraphEventsConfig_apollo_router::plugins::telemetry::config_new::events::Event<apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes, apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector>"
        },
        "supergraph": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::events::SupergraphEventsConfig_apollo_router::plugins::telemetry::config_new::events::Event<apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes,_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector>",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::events::SupergraphEventsConfig_apollo_router::plugins::telemetry::config_new::events::Event<apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes, apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector>"
        }
      },
      "type": "object"
    },
    "ExecutionRequestConf": {
      "additionalProperties": false,
      "description": "What information is passed to a router request/response stage",
      "properties": {
        "body": {
          "default": false,
          "description": "Send the body",
          "type": "boolean"
        },
        "context": {
          "default": false,
          "description": "Send the context",
          "type": "boolean"
        },
        "headers": {
          "default": false,
          "description": "Send the headers",
          "type": "boolean"
        },
        "method": {
          "default": false,
          "description": "Send the method",
          "type": "boolean"
        },
        "query_plan": {
          "default": false,
          "description": "Send the query plan",
          "type": "boolean"
        },
        "sdl": {
          "default": false,
          "description": "Send the SDL",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ExecutionResponseConf": {
      "additionalProperties": false,
      "description": "What information is passed to a router request/response stage",
      "properties": {
        "body": {
          "default": false,
          "description": "Send the body",
          "type": "boolean"
        },
        "context": {
          "default": false,
          "description": "Send the context",
          "type": "boolean"
        },
        "headers": {
          "default": false,
          "description": "Send the headers",
          "type": "boolean"
        },
        "sdl": {
          "default": false,
          "description": "Send the SDL",
          "type": "boolean"
        },
        "status_code": {
          "default": false,
          "description": "Send the HTTP status",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ExecutionStage": {
      "properties": {
        "request": {
          "$ref": "#/definitions/ExecutionRequestConf",
          "description": "#/definitions/ExecutionRequestConf"
        },
        "response": {
          "$ref": "#/definitions/ExecutionResponseConf",
          "description": "#/definitions/ExecutionResponseConf"
        }
      },
      "type": "object"
    },
    "Exporters": {
      "additionalProperties": false,
      "description": "Exporter configuration",
      "properties": {
        "logging": {
          "$ref": "#/definitions/Logging",
          "description": "#/definitions/Logging"
        },
        "metrics": {
          "$ref": "#/definitions/Metrics2",
          "description": "#/definitions/Metrics2"
        },
        "tracing": {
          "$ref": "#/definitions/Tracing",
          "description": "#/definitions/Tracing"
        }
      },
      "type": "object"
    },
    "ExposeQueryPlanConfig": {
      "description": "Expose query plan",
      "type": "boolean"
    },
    "ExposeTraceId": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": false,
          "description": "Expose the trace_id in response headers",
          "type": "boolean"
        },
        "format": {
          "$ref": "#/definitions/TraceIdFormat",
          "description": "#/definitions/TraceIdFormat"
        },
        "header_name": {
          "description": "Choose the header name to expose trace_id (default: apollo-trace-id)",
          "nullable": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "FieldName": {
      "oneOf": [
        {
          "description": "The GraphQL field name",
          "enum": [
            "string"
          ],
          "type": "string"
        }
      ]
    },
    "FieldType": {
      "oneOf": [
        {
          "description": "The GraphQL field name",
          "enum": [
            "name"
          ],
          "type": "string"
        },
        {
          "description": "The GraphQL field type - `bool` - `number` - `scalar` - `object` - `list`",
          "enum": [
            "type"
          ],
          "type": "string"
        }
      ]
    },
    "FileUploadProtocols": {
      "additionalProperties": false,
      "description": "Configuration for the various protocols supported by the file upload plugin",
      "properties": {
        "multipart": {
          "$ref": "#/definitions/MultipartRequest",
          "description": "#/definitions/MultipartRequest"
        }
      },
      "required": [
        "multipart"
      ],
      "type": "object"
    },
    "FileUploadsConfig": {
      "additionalProperties": false,
      "description": "Configuration for File Uploads plugin",
      "properties": {
        "enabled": {
          "description": "Whether the file upload plugin should be enabled (default: false)",
          "type": "boolean"
        },
        "protocols": {
          "$ref": "#/definitions/FileUploadProtocols",
          "description": "#/definitions/FileUploadProtocols"
        }
      },
      "required": [
        "enabled",
        "protocols"
      ],
      "type": "object"
    },
    "ForbidMutationsConfig": {
      "description": "Forbid mutations configuration",
      "type": "boolean"
    },
    "Forward": {
      "additionalProperties": false,
      "description": "Configuration to forward from headers/body",
      "properties": {
        "body": {
          "description": "Forward body values as custom attributes/labels in metrics",
          "items": {
            "$ref": "#/definitions/BodyForward",
            "description": "#/definitions/BodyForward"
          },
          "type": "array"
        },
        "header": {
          "description": "Forward header values as custom attributes/labels in metrics",
          "items": {
            "$ref": "#/definitions/HeaderForward",
            "description": "#/definitions/HeaderForward"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ForwardHeaders": {
      "description": "Forward headers",
      "oneOf": [
        {
          "description": "Don't send any headers",
          "enum": [
            "none"
          ],
          "type": "string"
        },
        {
          "description": "Send all headers",
          "enum": [
            "all"
          ],
          "type": "string"
        },
        {
          "additionalProperties": false,
          "description": "Send only the headers specified",
          "properties": {
            "only": {
              "description": "Send only the headers specified",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "only"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Send all headers except those specified",
          "properties": {
            "except": {
              "description": "Send all headers except those specified",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "except"
          ],
          "type": "object"
        }
      ]
    },
    "ForwardValues": {
      "description": "Forward GraphQL variables",
      "oneOf": [
        {
          "description": "Dont send any variables",
          "enum": [
            "none"
          ],
          "type": "string"
        },
        {
          "description": "Send all variables",
          "enum": [
            "all"
          ],
          "type": "string"
        },
        {
          "additionalProperties": false,
          "description": "Send only the variables specified",
          "properties": {
            "only": {
              "description": "Send only the variables specified",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "only"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Send all variables except those specified",
          "properties": {
            "except": {
              "description": "Send all variables except those specified",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "except"
          ],
          "type": "object"
        }
      ]
    },
    "GraphQLAttributes": {
      "additionalProperties": false,
      "properties": {
        "graphql.field.name": {
          "default": null,
          "description": "The GraphQL field name",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.field.type": {
          "default": null,
          "description": "The GraphQL field type",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.list.length": {
          "default": null,
          "description": "If the field is a list, the length of the list",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.operation.name": {
          "default": null,
          "description": "The GraphQL operation name",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.type.name": {
          "default": null,
          "description": "The GraphQL type name",
          "nullable": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GraphQLInstrumentsConfig": {
      "additionalProperties": false,
      "properties": {
        "field.execution": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector"
        },
        "list.length": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector"
        }
      },
      "type": "object"
    },
    "GraphQLSelector": {
      "anyOf": [
        {
          "additionalProperties": false,
          "description": "If the field is a list, the length of the list",
          "properties": {
            "list_length": {
              "$ref": "#/definitions/ListLength",
              "description": "#/definitions/ListLength"
            }
          },
          "required": [
            "list_length"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The GraphQL field name",
          "properties": {
            "field_name": {
              "$ref": "#/definitions/FieldName",
              "description": "#/definitions/FieldName"
            }
          },
          "required": [
            "field_name"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The GraphQL field type",
          "properties": {
            "field_type": {
              "$ref": "#/definitions/FieldType",
              "description": "#/definitions/FieldType"
            }
          },
          "required": [
            "field_type"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The GraphQL type name",
          "properties": {
            "type_name": {
              "$ref": "#/definitions/TypeName",
              "description": "#/definitions/TypeName"
            }
          },
          "required": [
            "type_name"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Optional default value.",
              "nullable": true,
              "type": "string"
            },
            "operation_name": {
              "$ref": "#/definitions/OperationName",
              "description": "#/definitions/OperationName"
            }
          },
          "required": [
            "operation_name"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "static": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue"
            }
          },
          "required": [
            "static"
          ],
          "type": "object"
        }
      ]
    },
    "GraphQLValue": {
      "anyOf": [
        {
          "$ref": "#/definitions/StandardUnit",
          "description": "#/definitions/StandardUnit"
        },
        {
          "$ref": "#/definitions/GraphQLSelector",
          "description": "#/definitions/GraphQLSelector"
        }
      ]
    },
    "GrpcExporter": {
      "additionalProperties": false,
      "properties": {
        "ca": {
          "default": null,
          "description": "The optional certificate authority (CA) certificate to be used in TLS configuration.",
          "nullable": true,
          "type": "string"
        },
        "cert": {
          "default": null,
          "description": "The optional cert for tls config",
          "nullable": true,
          "type": "string"
        },
        "domain_name": {
          "default": null,
          "description": "The optional domain name for tls config. Note that domain name is will be defaulted to match the endpoint is not explicitly set.",
          "nullable": true,
          "type": "string"
        },
        "key": {
          "default": null,
          "description": "The optional private key file for TLS configuration.",
          "nullable": true,
          "type": "string"
        },
        "metadata": {
          "additionalProperties": true,
          "default": {},
          "description": "gRPC metadata",
          "type": "object"
        }
      },
      "type": "object"
    },
    "Header": {
      "additionalProperties": false,
      "description": "Insert a header",
      "properties": {
        "name": {
          "description": "The name of the header",
          "type": "string"
        },
        "value": {
          "description": "The value for the header",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "object"
    },
    "HeaderForward": {
      "anyOf": [
        {
          "additionalProperties": false,
          "description": "Match via header name",
          "properties": {
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            },
            "named": {
              "description": "The name of the header",
              "type": "string"
            },
            "rename": {
              "description": "The optional output name",
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "named"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Match via rgex",
          "properties": {
            "matching": {
              "description": "Using a regex on the header name",
              "type": "string"
            }
          },
          "required": [
            "matching"
          ],
          "type": "object"
        }
      ],
      "description": "Configuration to forward header values in metric labels"
    },
    "HeaderLoggingCondition": {
      "anyOf": [
        {
          "additionalProperties": false,
          "description": "Match header value given a regex to display logs",
          "properties": {
            "body": {
              "default": false,
              "description": "Display request/response body (default: false)",
              "type": "boolean"
            },
            "headers": {
              "default": false,
              "description": "Display request/response headers (default: false)",
              "type": "boolean"
            },
            "match": {
              "description": "Regex to match the header value",
              "type": "string"
            },
            "name": {
              "description": "Header name",
              "type": "string"
            }
          },
          "required": [
            "match",
            "name"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Match header value given a value to display logs",
          "properties": {
            "body": {
              "default": false,
              "description": "Display request/response body (default: false)",
              "type": "boolean"
            },
            "headers": {
              "default": false,
              "description": "Display request/response headers (default: false)",
              "type": "boolean"
            },
            "name": {
              "description": "Header name",
              "type": "string"
            },
            "value": {
              "description": "Header value",
              "type": "string"
            }
          },
          "required": [
            "name",
            "value"
          ],
          "type": "object"
        }
      ]
    },
    "HeadersLocation": {
      "additionalProperties": false,
      "properties": {
        "request": {
          "description": "Propagate/Insert/Remove headers from request",
          "items": {
            "$ref": "#/definitions/Operation",
            "description": "#/definitions/Operation"
          },
          "type": "array"
        }
      },
      "required": [
        "request"
      ],
      "type": "object"
    },
    "HealthCheck": {
      "additionalProperties": false,
      "description": "Configuration options pertaining to the http server component.",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Set to false to disable the health check",
          "type": "boolean"
        },
        "listen": {
          "$ref": "#/definitions/ListenAddr",
          "description": "#/definitions/ListenAddr"
        },
        "path": {
          "default": "/health",
          "description": "Optionally set a custom healthcheck path Defaults to /health",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HeartbeatInterval": {
      "anyOf": [
        {
          "$ref": "#/definitions/Disabled",
          "description": "#/definitions/Disabled"
        },
        {
          "$ref": "#/definitions/Enabled",
          "description": "#/definitions/Enabled"
        },
        {
          "description": "enable with custom interval, e.g. '100ms', '10s' or '1m'",
          "type": "string"
        }
      ]
    },
    "Homepage": {
      "additionalProperties": false,
      "description": "Configuration options pertaining to the home page.",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Set to false to disable the homepage",
          "type": "boolean"
        },
        "graph_ref": {
          "default": null,
          "description": "Graph reference This will allow you to redirect from the Apollo Router landing page back to Apollo Studio Explorer",
          "nullable": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Http2Config": {
      "oneOf": [
        {
          "description": "Enable HTTP2 for subgraphs",
          "enum": [
            "enable"
          ],
          "type": "string"
        },
        {
          "description": "Disable HTTP2 for subgraphs",
          "enum": [
            "disable"
          ],
          "type": "string"
        },
        {
          "description": "Only HTTP2 is active",
          "enum": [
            "http2only"
          ],
          "type": "string"
        }
      ]
    },
    "HttpExporter": {
      "additionalProperties": false,
      "properties": {
        "headers": {
          "additionalProperties": {
            "type": "string"
          },
          "default": {},
          "description": "Headers to send on report requests",
          "type": "object"
        }
      },
      "type": "object"
    },
    "InMemoryCache": {
      "additionalProperties": false,
      "description": "In memory cache configuration",
      "properties": {
        "limit": {
          "description": "Number of entries in the Least Recently Used cache",
          "format": "uint",
          "minimum": 1.0,
          "type": "integer"
        }
      },
      "required": [
        "limit"
      ],
      "type": "object"
    },
    "Insert": {
      "anyOf": [
        {
          "$ref": "#/definitions/InsertStatic",
          "description": "#/definitions/InsertStatic"
        },
        {
          "$ref": "#/definitions/InsertFromContext",
          "description": "#/definitions/InsertFromContext"
        },
        {
          "$ref": "#/definitions/InsertFromBody",
          "description": "#/definitions/InsertFromBody"
        }
      ],
      "description": "Insert header"
    },
    "Insert2": {
      "additionalProperties": false,
      "description": "Configuration to insert custom attributes/labels in metrics",
      "properties": {
        "name": {
          "description": "The name of the attribute to insert",
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/AttributeValue",
          "description": "#/definitions/AttributeValue"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "object"
    },
    "InsertFromBody": {
      "additionalProperties": false,
      "description": "Insert header with a value coming from body",
      "properties": {
        "default": {
          "description": "The default if the path in the body did not resolve to an element",
          "nullable": true,
          "type": "string"
        },
        "name": {
          "description": "The target header name",
          "type": "string"
        },
        "path": {
          "description": "The path in the request body",
          "type": "string"
        }
      },
      "required": [
        "name",
        "path"
      ],
      "type": "object"
    },
    "InsertFromContext": {
      "additionalProperties": false,
      "description": "Insert header with a value coming from context key",
      "properties": {
        "from_context": {
          "description": "Specify context key to fetch value",
          "type": "string"
        },
        "name": {
          "description": "Specify header name",
          "type": "string"
        }
      },
      "required": [
        "from_context",
        "name"
      ],
      "type": "object"
    },
    "InsertStatic": {
      "additionalProperties": false,
      "description": "Insert static header",
      "properties": {
        "name": {
          "description": "The name of the header",
          "type": "string"
        },
        "value": {
          "description": "The value for the header",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "object"
    },
    "InstrumentType": {
      "oneOf": [
        {
          "description": "A monotonic counter https://opentelemetry.io/docs/specs/otel/metrics/data-model/#sums",
          "enum": [
            "counter"
          ],
          "type": "string"
        },
        {
          "description": "A histogram https://opentelemetry.io/docs/specs/otel/metrics/data-model/#histogram",
          "enum": [
            "histogram"
          ],
          "type": "string"
        }
      ]
    },
    "Instrument_for_GraphQLAttributes_and_GraphQLSelector_and_GraphQLValue": {
      "additionalProperties": false,
      "properties": {
        "attributes": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector"
        },
        "condition": {
          "$ref": "#/definitions/Condition_for_GraphQLSelector",
          "description": "#/definitions/Condition_for_GraphQLSelector"
        },
        "description": {
          "description": "The description of the instrument.",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/InstrumentType",
          "description": "#/definitions/InstrumentType"
        },
        "unit": {
          "description": "The units of the instrument, e.g. \"ms\", \"bytes\", \"requests\".",
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/GraphQLValue",
          "description": "#/definitions/GraphQLValue"
        }
      },
      "required": [
        "description",
        "type",
        "unit",
        "value"
      ],
      "type": "object"
    },
    "Instrument_for_RouterAttributes_and_RouterSelector_and_RouterValue": {
      "additionalProperties": false,
      "properties": {
        "attributes": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector"
        },
        "condition": {
          "$ref": "#/definitions/Condition_for_RouterSelector",
          "description": "#/definitions/Condition_for_RouterSelector"
        },
        "description": {
          "description": "The description of the instrument.",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/InstrumentType",
          "description": "#/definitions/InstrumentType"
        },
        "unit": {
          "description": "The units of the instrument, e.g. \"ms\", \"bytes\", \"requests\".",
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/RouterValue",
          "description": "#/definitions/RouterValue"
        }
      },
      "required": [
        "description",
        "type",
        "unit",
        "value"
      ],
      "type": "object"
    },
    "Instrument_for_SubgraphAttributes_and_SubgraphSelector_and_SubgraphValue": {
      "additionalProperties": false,
      "properties": {
        "attributes": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector"
        },
        "condition": {
          "$ref": "#/definitions/Condition_for_SubgraphSelector",
          "description": "#/definitions/Condition_for_SubgraphSelector"
        },
        "description": {
          "description": "The description of the instrument.",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/InstrumentType",
          "description": "#/definitions/InstrumentType"
        },
        "unit": {
          "description": "The units of the instrument, e.g. \"ms\", \"bytes\", \"requests\".",
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/SubgraphValue",
          "description": "#/definitions/SubgraphValue"
        }
      },
      "required": [
        "description",
        "type",
        "unit",
        "value"
      ],
      "type": "object"
    },
    "Instrument_for_SupergraphAttributes_and_SupergraphSelector_and_SupergraphValue": {
      "additionalProperties": false,
      "properties": {
        "attributes": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector"
        },
        "condition": {
          "$ref": "#/definitions/Condition_for_SupergraphSelector",
          "description": "#/definitions/Condition_for_SupergraphSelector"
        },
        "description": {
          "description": "The description of the instrument.",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/InstrumentType",
          "description": "#/definitions/InstrumentType"
        },
        "unit": {
          "description": "The units of the instrument, e.g. \"ms\", \"bytes\", \"requests\".",
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/SupergraphValue",
          "description": "#/definitions/SupergraphValue"
        }
      },
      "required": [
        "description",
        "type",
        "unit",
        "value"
      ],
      "type": "object"
    },
    "Instrumentation": {
      "additionalProperties": false,
      "description": "Instrumentation configuration",
      "properties": {
        "events": {
          "$ref": "#/definitions/Events",
          "description": "#/definitions/Events"
        },
        "instruments": {
          "$ref": "#/definitions/InstrumentsConfig",
          "description": "#/definitions/InstrumentsConfig"
        },
        "spans": {
          "$ref": "#/definitions/Spans",
          "description": "#/definitions/Spans"
        }
      },
      "type": "object"
    },
    "InstrumentsConfig": {
      "additionalProperties": false,
      "properties": {
        "default_requirement_level": {
          "$ref": "#/definitions/DefaultAttributeRequirementLevel",
          "description": "#/definitions/DefaultAttributeRequirementLevel"
        },
        "graphql": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::GraphQLInstrumentsConfig_apollo_router::plugins::telemetry::config_new::instruments::Instrument<apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes,_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector,_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLValue>",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::GraphQLInstrumentsConfig_apollo_router::plugins::telemetry::config_new::instruments::Instrument<apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes, apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector, apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLValue>"
        },
        "router": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::instruments::RouterInstrumentsConfig_apollo_router::plugins::telemetry::config_new::instruments::Instrument<apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes,_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector,_apollo_router::plugins::telemetry::config_new::selectors::RouterValue>",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::instruments::RouterInstrumentsConfig_apollo_router::plugins::telemetry::config_new::instruments::Instrument<apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes, apollo_router::plugins::telemetry::config_new::selectors::RouterSelector, apollo_router::plugins::telemetry::config_new::selectors::RouterValue>"
        },
        "subgraph": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::instruments::SubgraphInstrumentsConfig_apollo_router::plugins::telemetry::config_new::instruments::Instrument<apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes,_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector,_apollo_router::plugins::telemetry::config_new::selectors::SubgraphValue>",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::instruments::SubgraphInstrumentsConfig_apollo_router::plugins::telemetry::config_new::instruments::Instrument<apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes, apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector, apollo_router::plugins::telemetry::config_new::selectors::SubgraphValue>"
        },
        "supergraph": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::instruments::SupergraphInstrumentsConfig_apollo_router::plugins::telemetry::config_new::instruments::Instrument<apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes,_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector,_apollo_router::plugins::telemetry::config_new::selectors::SupergraphValue>",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::instruments::SupergraphInstrumentsConfig_apollo_router::plugins::telemetry::config_new::instruments::Instrument<apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes, apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector, apollo_router::plugins::telemetry::config_new::selectors::SupergraphValue>"
        }
      },
      "type": "object"
    },
    "JWTConf": {
      "additionalProperties": false,
      "properties": {
        "header_name": {
          "default": "authorization",
          "description": "HTTP header expected to contain JWT",
          "type": "string"
        },
        "header_value_prefix": {
          "default": "Bearer",
          "description": "Header value prefix",
          "type": "string"
        },
        "ignore_other_prefixes": {
          "default": false,
          "description": "Whether to ignore any mismatched prefixes",
          "type": "boolean"
        },
        "jwks": {
          "description": "List of JWKS used to verify tokens",
          "items": {
            "$ref": "#/definitions/JwksConf",
            "description": "#/definitions/JwksConf"
          },
          "type": "array"
        },
        "sources": {
          "description": "Alternative sources to extract the JWT",
          "items": {
            "$ref": "#/definitions/Source",
            "description": "#/definitions/Source"
          },
          "type": "array"
        }
      },
      "required": [
        "jwks"
      ],
      "type": "object"
    },
    "JwksConf": {
      "additionalProperties": false,
      "properties": {
        "algorithms": {
          "default": null,
          "description": "List of accepted algorithms. Possible values are `HS256`, `HS384`, `HS512`, `ES256`, `ES384`, `RS256`, `RS384`, `RS512`, `PS256`, `PS384`, `PS512`, `EdDSA`",
          "items": {
            "type": "string"
          },
          "nullable": true,
          "type": "array"
        },
        "headers": {
          "description": "List of headers to add to the JWKS request",
          "items": {
            "$ref": "#/definitions/Header",
            "description": "#/definitions/Header"
          },
          "type": "array"
        },
        "issuer": {
          "description": "Expected issuer for tokens verified by that JWKS",
          "nullable": true,
          "type": "string"
        },
        "poll_interval": {
          "default": {
            "nanos": 0,
            "secs": 60
          },
          "description": "Polling interval for each JWKS endpoint in human-readable format; defaults to 60s",
          "type": "string"
        },
        "url": {
          "description": "Retrieve the JWK Set",
          "type": "string"
        }
      },
      "required": [
        "url"
      ],
      "type": "object"
    },
    "Limits": {
      "additionalProperties": false,
      "description": "Configuration for operation limits, parser limits, HTTP limits, etc.",
      "properties": {
        "http_max_request_bytes": {
          "default": 2000000,
          "description": "Limit the size of incoming HTTP requests read from the network, to protect against running out of memory. Default: 2000000 (2 MB)",
          "format": "uint",
          "minimum": 0.0,
          "type": "integer"
        },
        "max_aliases": {
          "default": null,
          "description": "If set, requests with operations with more aliases than this maximum are rejected with a HTTP 400 Bad Request response and GraphQL error with `\"extensions\": {\"code\": \"MAX_ALIASES_LIMIT\"}`",
          "format": "uint32",
          "minimum": 0.0,
          "nullable": true,
          "type": "integer"
        },
        "max_depth": {
          "default": null,
          "description": "If set, requests with operations deeper than this maximum are rejected with a HTTP 400 Bad Request response and GraphQL error with `\"extensions\": {\"code\": \"MAX_DEPTH_LIMIT\"}`\n\nCounts depth of an operation, looking at its selection sets, including fields in fragments and inline fragments. The following example has a depth of 3.\n\n```graphql query getProduct { book { # 1 ...bookDetails } }\n\nfragment bookDetails on Book { details { # 2 ... on ProductDetailsBook { country # 3 } } } ```",
          "format": "uint32",
          "minimum": 0.0,
          "nullable": true,
          "type": "integer"
        },
        "max_height": {
          "default": null,
          "description": "If set, requests with operations higher than this maximum are rejected with a HTTP 400 Bad Request response and GraphQL error with `\"extensions\": {\"code\": \"MAX_DEPTH_LIMIT\"}`\n\nHeight is based on simple merging of fields using the same name or alias, but only within the same selection set. For example `name` here is only counted once and the query has height 3, not 4:\n\n```graphql query { name { first } name { last } } ```\n\nThis may change in a future version of Apollo Router to do [full field merging across fragments][merging] instead.\n\n[merging]: https://spec.graphql.org/October2021/#sec-Field-Selection-Merging]",
          "format": "uint32",
          "minimum": 0.0,
          "nullable": true,
          "type": "integer"
        },
        "max_root_fields": {
          "default": null,
          "description": "If set, requests with operations with more root fields than this maximum are rejected with a HTTP 400 Bad Request response and GraphQL error with `\"extensions\": {\"code\": \"MAX_ROOT_FIELDS_LIMIT\"}`\n\nThis limit counts only the top level fields in a selection set, including fragments and inline fragments.",
          "format": "uint32",
          "minimum": 0.0,
          "nullable": true,
          "type": "integer"
        },
        "parser_max_recursion": {
          "default": 500,
          "description": "Limit recursion in the GraphQL parser to protect against stack overflow. default: 500",
          "format": "uint",
          "minimum": 0.0,
          "type": "integer"
        },
        "parser_max_tokens": {
          "default": 15000,
          "description": "Limit the number of tokens the GraphQL parser processes before aborting.",
          "format": "uint",
          "minimum": 0.0,
          "type": "integer"
        },
        "warn_only": {
          "default": false,
          "description": "If set to true (which is the default is dev mode), requests that exceed a `max_*` limit are *not* rejected. Instead they are executed normally, and a warning is logged.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ListLength": {
      "oneOf": [
        {
          "description": "The length of the list",
          "enum": [
            "value"
          ],
          "type": "string"
        }
      ]
    },
    "ListenAddr": {
      "anyOf": [
        {
          "description": "Socket address.",
          "type": "string"
        },
        {
          "description": "Unix socket.",
          "type": "string"
        }
      ],
      "description": "Listening address."
    },
    "Logging": {
      "additionalProperties": false,
      "description": "Logging configuration.",
      "properties": {
        "common": {
          "$ref": "#/definitions/LoggingCommon",
          "description": "#/definitions/LoggingCommon"
        },
        "experimental_when_header": {
          "description": "Log configuration to log request and response for subgraphs and supergraph Note that this will be removed when events are implemented.",
          "items": {
            "$ref": "#/definitions/HeaderLoggingCondition",
            "description": "#/definitions/HeaderLoggingCondition"
          },
          "type": "array"
        },
        "stdout": {
          "$ref": "#/definitions/StdOut",
          "description": "#/definitions/StdOut"
        }
      },
      "type": "object"
    },
    "LoggingCommon": {
      "additionalProperties": false,
      "properties": {
        "resource": {
          "additionalProperties": {
            "$ref": "#/definitions/AttributeValue",
            "description": "#/definitions/AttributeValue"
          },
          "default": {},
          "description": "The Open Telemetry resource",
          "type": "object"
        },
        "service_name": {
          "default": null,
          "description": "Set a service.name resource in your metrics",
          "nullable": true,
          "type": "string"
        },
        "service_namespace": {
          "default": null,
          "description": "Set a service.namespace attribute in your metrics",
          "nullable": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "MetricAggregation": {
      "oneOf": [
        {
          "additionalProperties": false,
          "description": "An aggregation that summarizes a set of measurements as an histogram with explicitly defined buckets.",
          "properties": {
            "histogram": {
              "additionalProperties": false,
              "properties": {
                "buckets": {
                  "items": {
                    "format": "double",
                    "type": "number"
                  },
                  "type": "array"
                }
              },
              "required": [
                "buckets"
              ],
              "type": "object"
            }
          },
          "required": [
            "histogram"
          ],
          "type": "object"
        }
      ]
    },
    "MetricView": {
      "additionalProperties": false,
      "properties": {
        "aggregation": {
          "$ref": "#/definitions/MetricAggregation",
          "description": "#/definitions/MetricAggregation",
          "nullable": true
        },
        "allowed_attribute_keys": {
          "description": "An allow-list of attribute keys that will be preserved for the instrument.\n\nAny attribute recorded for the instrument with a key not in this set will be dropped. If the set is empty, all attributes will be dropped, if `None` all attributes will be kept.",
          "items": {
            "type": "string"
          },
          "nullable": true,
          "type": "array",
          "uniqueItems": true
        },
        "description": {
          "description": "New description to set to the instrument",
          "nullable": true,
          "type": "string"
        },
        "name": {
          "description": "The instrument name you're targeting",
          "type": "string"
        },
        "unit": {
          "description": "New unit to set to the instrument",
          "nullable": true,
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Metrics": {
      "additionalProperties": false,
      "description": "Per subgraph configuration for entity caching",
      "properties": {
        "enabled": {
          "default": false,
          "description": "enables metrics evaluating the benefits of entity caching",
          "type": "boolean"
        },
        "separate_per_type": {
          "default": false,
          "description": "Adds the entity type name to attributes. This can greatly increase the cardinality",
          "type": "boolean"
        },
        "ttl": {
          "$ref": "#/definitions/Ttl",
          "description": "#/definitions/Ttl",
          "nullable": true
        }
      },
      "type": "object"
    },
    "Metrics2": {
      "additionalProperties": false,
      "description": "Metrics configuration",
      "properties": {
        "common": {
          "$ref": "#/definitions/MetricsCommon",
          "description": "#/definitions/MetricsCommon"
        },
        "otlp": {
          "$ref": "#/definitions/Config9",
          "description": "#/definitions/Config9"
        },
        "prometheus": {
          "$ref": "#/definitions/Config10",
          "description": "#/definitions/Config10"
        }
      },
      "type": "object"
    },
    "MetricsAttributesConf": {
      "additionalProperties": false,
      "description": "Configuration to add custom attributes/labels on metrics",
      "properties": {
        "subgraph": {
          "$ref": "#/definitions/SubgraphAttributesConf",
          "description": "#/definitions/SubgraphAttributesConf"
        },
        "supergraph": {
          "$ref": "#/definitions/AttributesForwardConf",
          "description": "#/definitions/AttributesForwardConf"
        }
      },
      "type": "object"
    },
    "MetricsCommon": {
      "additionalProperties": false,
      "properties": {
        "attributes": {
          "$ref": "#/definitions/MetricsAttributesConf",
          "description": "#/definitions/MetricsAttributesConf"
        },
        "buckets": {
          "default": [
            0.001,
            0.005,
            0.015,
            0.05,
            0.1,
            0.2,
            0.3,
            0.4,
            0.5,
            1.0,
            5.0,
            10.0
          ],
          "description": "Custom buckets for all histograms",
          "items": {
            "format": "double",
            "type": "number"
          },
          "type": "array"
        },
        "resource": {
          "additionalProperties": {
            "$ref": "#/definitions/AttributeValue",
            "description": "#/definitions/AttributeValue"
          },
          "default": {},
          "description": "The Open Telemetry resource",
          "type": "object"
        },
        "service_name": {
          "default": null,
          "description": "Set a service.name resource in your metrics",
          "nullable": true,
          "type": "string"
        },
        "service_namespace": {
          "default": null,
          "description": "Set a service.namespace attribute in your metrics",
          "nullable": true,
          "type": "string"
        },
        "views": {
          "description": "Views applied on metrics",
          "items": {
            "$ref": "#/definitions/MetricView",
            "description": "#/definitions/MetricView"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Mode": {
      "enum": [
        "measure",
        "enforce"
      ],
      "type": "string"
    },
    "MultipartRequest": {
      "additionalProperties": false,
      "description": "Configuration for a multipart request for file uploads.\n\nThis protocol conforms to [jaydenseric's multipart spec](https://github.com/jaydenseric/graphql-multipart-request-spec)",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Whether to enable the multipart protocol for file uploads (default: true)",
          "type": "boolean"
        },
        "limits": {
          "$ref": "#/definitions/MultipartRequestLimits",
          "description": "#/definitions/MultipartRequestLimits"
        },
        "mode": {
          "$ref": "#/definitions/MultipartRequestMode",
          "description": "#/definitions/MultipartRequestMode"
        }
      },
      "type": "object"
    },
    "MultipartRequestLimits": {
      "additionalProperties": false,
      "description": "Request limits for a multipart request",
      "properties": {
        "max_file_size": {
          "description": "The maximum size of each file, in bytes (default: 5MB)",
          "type": "string"
        },
        "max_files": {
          "description": "The maximum amount of files allowed for a single query (default: 4)",
          "format": "uint",
          "minimum": 0.0,
          "type": "integer"
        }
      },
      "required": [
        "max_file_size",
        "max_files"
      ],
      "type": "object"
    },
    "MultipartRequestMode": {
      "description": "Supported mode for a multipart request",
      "oneOf": [
        {
          "description": "The multipart request will not be loaded into memory and instead will be streamed directly to the subgraph in the order received. This has some limitations, mainly that the query _must_ be able to be streamed directly to the subgraph without buffering.\n\nIn practice, this means that certain queries will fail due to ordering of the files.",
          "enum": [
            "stream"
          ],
          "type": "string"
        }
      ]
    },
    "Operation": {
      "oneOf": [
        {
          "additionalProperties": false,
          "properties": {
            "insert": {
              "$ref": "#/definitions/Insert",
              "description": "#/definitions/Insert"
            }
          },
          "required": [
            "insert"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "remove": {
              "$ref": "#/definitions/Remove",
              "description": "#/definitions/Remove"
            }
          },
          "required": [
            "remove"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "propagate": {
              "$ref": "#/definitions/Propagate",
              "description": "#/definitions/Propagate"
            }
          },
          "required": [
            "propagate"
          ],
          "type": "object"
        }
      ]
    },
    "OperationKind": {
      "oneOf": [
        {
          "description": "The raw operation kind.",
          "enum": [
            "string"
          ],
          "type": "string"
        }
      ]
    },
    "OperationName": {
      "oneOf": [
        {
          "description": "The raw operation name.",
          "enum": [
            "string"
          ],
          "type": "string"
        },
        {
          "description": "A hash of the operation name.",
          "enum": [
            "hash"
          ],
          "type": "string"
        }
      ]
    },
    "PersistedQueries": {
      "additionalProperties": false,
      "description": "Persisted Queries (PQ) configuration",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Activates Persisted Queries (disabled by default)",
          "type": "boolean"
        },
        "experimental_local_manifests": {
          "default": null,
          "description": "Enables using a local copy of the persisted query manifest to safelist operations",
          "items": {
            "type": "string"
          },
          "nullable": true,
          "type": "array"
        },
        "experimental_prewarm_query_plan_cache": {
          "default": false,
          "description": "Experimental feature to prewarm the query plan cache with persisted queries",
          "type": "boolean"
        },
        "log_unknown": {
          "default": false,
          "description": "Enabling this field configures the router to log any freeform GraphQL request that is not in the persisted query list",
          "type": "boolean"
        },
        "safelist": {
          "$ref": "#/definitions/PersistedQueriesSafelist",
          "description": "#/definitions/PersistedQueriesSafelist"
        }
      },
      "type": "object"
    },
    "PersistedQueriesSafelist": {
      "additionalProperties": false,
      "description": "Persisted Queries (PQ) Safelisting configuration",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enables using the persisted query list as a safelist (disabled by default)",
          "type": "boolean"
        },
        "require_id": {
          "default": false,
          "description": "Enabling this field configures the router to reject any request that does not include the persisted query ID",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Plugins": {
      "additionalProperties": false,
      "properties": {
        "experimental.broken": {
          "$ref": "#/definitions/Config",
          "description": "#/definitions/Config"
        },
        "experimental.expose_query_plan": {
          "$ref": "#/definitions/ExposeQueryPlanConfig",
          "description": "#/definitions/ExposeQueryPlanConfig"
        },
        "experimental.record": {
          "$ref": "#/definitions/RecordConfig",
          "description": "#/definitions/RecordConfig"
        },
        "experimental.restricted": {
          "$ref": "#/definitions/Config2",
          "description": "#/definitions/Config2"
        },
        "test.always_fails_to_start": {
          "$ref": "#/definitions/Conf",
          "description": "#/definitions/Conf"
        },
        "test.always_starts_and_stops": {
          "$ref": "#/definitions/Conf",
          "description": "#/definitions/Conf"
        }
      }
    },
    "Propagate": {
      "anyOf": [
        {
          "additionalProperties": false,
          "description": "Propagate header given a header name",
          "properties": {
            "default": {
              "description": "Default value for the header.",
              "nullable": true,
              "type": "string"
            },
            "named": {
              "description": "The source header name",
              "type": "string"
            },
            "rename": {
              "description": "An optional target header name",
              "nullable": true,
              "type": "string"
            }
          },
          "required": [
            "named"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Propagate header given a regex to match header name",
          "properties": {
            "matching": {
              "description": "The regex on header name",
              "type": "string"
            }
          },
          "required": [
            "matching"
          ],
          "type": "object"
        }
      ],
      "description": "Propagate header"
    },
    "Propagation": {
      "additionalProperties": false,
      "description": "Configure propagation of traces. In general you won't have to do this as these are automatically configured along with any exporter you configure.",
      "properties": {
        "aws_xray": {
          "default": false,
          "description": "Propagate AWS X-Ray",
          "type": "boolean"
        },
        "baggage": {
          "default": false,
          "description": "Propagate baggage https://www.w3.org/TR/baggage/",
          "type": "boolean"
        },
        "datadog": {
          "default": false,
          "description": "Propagate Datadog",
          "type": "boolean"
        },
        "jaeger": {
          "default": false,
          "description": "Propagate Jaeger",
          "type": "boolean"
        },
        "request": {
          "$ref": "#/definitions/RequestPropagation",
          "description": "#/definitions/RequestPropagation"
        },
        "trace_context": {
          "default": false,
          "description": "Propagate trace context https://www.w3.org/TR/trace-context/",
          "type": "boolean"
        },
        "zipkin": {
          "default": false,
          "description": "Propagate Zipkin",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Protocol": {
      "enum": [
        "grpc",
        "http"
      ],
      "type": "string"
    },
    "Query": {
      "oneOf": [
        {
          "description": "The raw query kind.",
          "enum": [
            "string"
          ],
          "type": "string"
        }
      ]
    },
    "QueryPlanCache": {
      "additionalProperties": false,
      "description": "Cache configuration",
      "properties": {
        "in_memory": {
          "$ref": "#/definitions/InMemoryCache",
          "description": "#/definitions/InMemoryCache"
        },
        "redis": {
          "$ref": "#/definitions/QueryPlanRedisCache",
          "description": "#/definitions/QueryPlanRedisCache",
          "nullable": true
        }
      },
      "type": "object"
    },
    "QueryPlanRedisCache": {
      "additionalProperties": false,
      "description": "Redis cache configuration",
      "properties": {
        "namespace": {
          "description": "namespace used to prefix Redis keys",
          "nullable": true,
          "type": "string"
        },
        "password": {
          "description": "Redis password if not provided in the URLs. This field takes precedence over the password in the URL",
          "nullable": true,
          "type": "string"
        },
        "required_to_start": {
          "default": false,
          "description": "Prevents the router from starting if it cannot connect to Redis",
          "type": "boolean"
        },
        "reset_ttl": {
          "default": true,
          "description": "When a TTL is set on a key, reset it when reading the data from that key",
          "type": "boolean"
        },
        "timeout": {
          "default": null,
          "description": "Redis request timeout (default: 2ms)",
          "nullable": true,
          "type": "string"
        },
        "tls": {
          "$ref": "#/definitions/TlsClient",
          "description": "#/definitions/TlsClient",
          "nullable": true
        },
        "ttl": {
          "default": {
            "nanos": 0,
            "secs": 2592000
          },
          "description": "TTL for entries",
          "nullable": true,
          "type": "string"
        },
        "urls": {
          "description": "List of URLs to the Redis cluster",
          "items": {
            "format": "uri",
            "type": "string"
          },
          "type": "array"
        },
        "username": {
          "description": "Redis username if not provided in the URLs. This field takes precedence over the username in the URL",
          "nullable": true,
          "type": "string"
        }
      },
      "required": [
        "urls"
      ],
      "type": "object"
    },
    "QueryPlannerMode": {
      "description": "Query planner modes.",
      "oneOf": [
        {
          "description": "Use the new Rust-based implementation.",
          "enum": [
            "new"
          ],
          "type": "string"
        },
        {
          "description": "Use the old JavaScript-based implementation.",
          "enum": [
            "legacy"
          ],
          "type": "string"
        },
        {
          "description": "Use Rust-based and Javascript-based implementations side by side, logging warnings if the implementations disagree.",
          "enum": [
            "both"
          ],
          "type": "string"
        }
      ]
    },
    "QueryPlanning": {
      "additionalProperties": false,
      "description": "Query planning cache configuration",
      "properties": {
        "cache": {
          "$ref": "#/definitions/QueryPlanCache",
          "description": "#/definitions/QueryPlanCache"
        },
        "experimental_parallelism": {
          "$ref": "#/definitions/AvailableParallelism",
          "description": "#/definitions/AvailableParallelism"
        },
        "experimental_paths_limit": {
          "default": null,
          "description": "Before creating query plans, for each path of fields in the query we compute all the possible options to traverse that path via the subgraphs. Multiple options can arise because fields in the path can be provided by multiple subgraphs, and abstract types (i.e. unions and interfaces) returned by fields sometimes require the query planner to traverse through each constituent object type. The number of options generated in this computation can grow large if the schema or query are sufficiently complex, and that will increase the time spent planning.\n\nThis config allows specifying a per-path limit to the number of options considered. If any path's options exceeds this limit, query planning will abort and the operation will fail.\n\nThe default value is None, which specifies no limit.",
          "format": "uint32",
          "minimum": 0.0,
          "nullable": true,
          "type": "integer"
        },
        "experimental_plans_limit": {
          "default": null,
          "description": "Sets a limit to the number of generated query plans. The planning process generates many different query plans as it explores the graph, and the list can grow large. By using this limit, we prevent that growth and still get a valid query plan, but it may not be the optimal one.\n\nThe default limit is set to 10000, but it may change in the future",
          "format": "uint32",
          "minimum": 0.0,
          "nullable": true,
          "type": "integer"
        },
        "experimental_reuse_query_plans": {
          "default": false,
          "description": "If cache warm up is configured, this will allow the router to keep a query plan created with the old schema, if it determines that the schema update does not affect the corresponding query",
          "type": "boolean"
        },
        "warmed_up_queries": {
          "default": null,
          "description": "Warms up the cache on reloads by running the query plan over a list of the most used queries (from the in memory cache) Configures the number of queries warmed up. Defaults to 1/3 of the in memory cache",
          "format": "uint",
          "minimum": 0.0,
          "nullable": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "RateLimit": {
      "additionalProperties": false,
      "properties": {
        "capacity": {
          "default": 1,
          "description": "Number of log lines allowed in interval per message",
          "format": "uint32",
          "minimum": 0.0,
          "type": "integer"
        },
        "enabled": {
          "default": false,
          "description": "Set to true to limit the rate of log messages",
          "type": "boolean"
        },
        "interval": {
          "default": {
            "nanos": 0,
            "secs": 1
          },
          "description": "Interval for rate limiting",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RateLimitConf": {
      "additionalProperties": false,
      "properties": {
        "capacity": {
          "description": "Number of requests allowed",
          "format": "uint64",
          "minimum": 1.0,
          "type": "integer"
        },
        "interval": {
          "description": "Per interval",
          "type": "string"
        }
      },
      "required": [
        "capacity",
        "interval"
      ],
      "type": "object"
    },
    "RecordConfig": {
      "additionalProperties": false,
      "description": "Request recording configuration.",
      "properties": {
        "enabled": {
          "description": "The recording plugin is disabled by default.",
          "type": "boolean"
        },
        "storage_path": {
          "description": "The path to the directory where recordings will be stored. Defaults to the current working directory.",
          "nullable": true,
          "type": "string"
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "RedisCache": {
      "additionalProperties": false,
      "description": "Redis cache configuration",
      "properties": {
        "namespace": {
          "description": "namespace used to prefix Redis keys",
          "nullable": true,
          "type": "string"
        },
        "password": {
          "description": "Redis password if not provided in the URLs. This field takes precedence over the password in the URL",
          "nullable": true,
          "type": "string"
        },
        "required_to_start": {
          "default": false,
          "description": "Prevents the router from starting if it cannot connect to Redis",
          "type": "boolean"
        },
        "reset_ttl": {
          "default": true,
          "description": "When a TTL is set on a key, reset it when reading the data from that key",
          "type": "boolean"
        },
        "timeout": {
          "default": null,
          "description": "Redis request timeout (default: 2ms)",
          "nullable": true,
          "type": "string"
        },
        "tls": {
          "$ref": "#/definitions/TlsClient",
          "description": "#/definitions/TlsClient",
          "nullable": true
        },
        "ttl": {
          "default": null,
          "description": "TTL for entries",
          "nullable": true,
          "type": "string"
        },
        "urls": {
          "description": "List of URLs to the Redis cluster",
          "items": {
            "format": "uri",
            "type": "string"
          },
          "type": "array"
        },
        "username": {
          "description": "Redis username if not provided in the URLs. This field takes precedence over the username in the URL",
          "nullable": true,
          "type": "string"
        }
      },
      "required": [
        "urls"
      ],
      "type": "object"
    },
    "Remove": {
      "description": "Remove header",
      "oneOf": [
        {
          "additionalProperties": false,
          "description": "Remove a header given a header name",
          "properties": {
            "named": {
              "description": "Remove a header given a header name",
              "type": "string"
            }
          },
          "required": [
            "named"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Remove a header given a regex matching header name",
          "properties": {
            "matching": {
              "description": "Remove a header given a regex matching against the header name",
              "type": "string"
            }
          },
          "required": [
            "matching"
          ],
          "type": "object"
        }
      ]
    },
    "RequestPropagation": {
      "additionalProperties": false,
      "properties": {
        "header_name": {
          "description": "Choose the header name to expose trace_id (default: apollo-trace-id)",
          "type": "string"
        }
      },
      "required": [
        "header_name"
      ],
      "type": "object"
    },
    "ResponseStatus": {
      "oneOf": [
        {
          "description": "The http status code.",
          "enum": [
            "code"
          ],
          "type": "string"
        },
        {
          "description": "The http status reason.",
          "enum": [
            "reason"
          ],
          "type": "string"
        }
      ]
    },
    "RetryConfig": {
      "additionalProperties": false,
      "description": "Retry configuration",
      "properties": {
        "min_per_sec": {
          "description": "minimum rate of retries allowed to accomodate clients that have just started issuing requests, or clients that do not issue many requests per window. The default value is 10",
          "format": "uint32",
          "minimum": 0.0,
          "nullable": true,
          "type": "integer"
        },
        "retry_mutations": {
          "description": "allows request retries on mutations. This should only be activated if mutations are idempotent. Disabled by default",
          "nullable": true,
          "type": "boolean"
        },
        "retry_percent": {
          "description": "percentage of calls to deposit that can be retried. This is in addition to any retries allowed for via min_per_sec. Must be between 0 and 1000, default value is 0.2",
          "format": "float",
          "nullable": true,
          "type": "number"
        },
        "ttl": {
          "default": null,
          "description": "how long a single deposit should be considered. Must be between 1 and 60 seconds, default value is 10 seconds",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Router": {
      "additionalProperties": false,
      "description": "Router level (APQ) configuration",
      "properties": {
        "cache": {
          "$ref": "#/definitions/Cache",
          "description": "#/definitions/Cache"
        }
      },
      "type": "object"
    },
    "RouterAttributes": {
      "additionalProperties": false,
      "description": "Common attributes for http server and client. See https://opentelemetry.io/docs/specs/semconv/http/http-spans/#common-attributes",
      "properties": {
        "baggage": {
          "default": null,
          "description": "All key values from trace baggage.",
          "nullable": true,
          "type": "boolean"
        },
        "dd.trace_id": {
          "default": null,
          "description": "The datadog trace ID. This can be output in logs and used to correlate traces in Datadog.",
          "nullable": true,
          "type": "boolean"
        },
        "error.type": {
          "default": null,
          "description": "Describes a class of error the operation ended with. Examples: * timeout * name_resolution_error * 500 Requirement level: Conditionally Required: If request has ended with an error.",
          "nullable": true,
          "type": "boolean"
        },
        "http.request.body.size": {
          "default": null,
          "description": "The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the Content-Length header. For requests using transport encoding, this should be the compressed size. Examples: * 3495 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "http.request.method": {
          "default": null,
          "description": "HTTP request method. Examples: * GET * POST * HEAD Requirement level: Required",
          "nullable": true,
          "type": "boolean"
        },
        "http.response.body.size": {
          "default": null,
          "description": "The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the Content-Length header. For requests using transport encoding, this should be the compressed size. Examples: * 3495 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "http.response.status_code": {
          "default": null,
          "description": "HTTP response status code. Examples: * 200 Requirement level: Conditionally Required: If and only if one was received/sent.",
          "nullable": true,
          "type": "boolean"
        },
        "http.route": {
          "default": null,
          "description": "The matched route (path template in the format used by the respective server framework). Examples: * /graphql Requirement level: Conditionally Required: If and only if it’s available",
          "nullable": true,
          "type": "boolean"
        },
        "network.local.address": {
          "default": null,
          "description": "Local socket address. Useful in case of a multi-IP host. Examples: * 10.1.2.80 * /tmp/my.sock Requirement level: Opt-In",
          "nullable": true,
          "type": "boolean"
        },
        "network.local.port": {
          "default": null,
          "description": "Local socket port. Useful in case of a multi-port host. Examples: * 65123 Requirement level: Opt-In",
          "nullable": true,
          "type": "boolean"
        },
        "network.peer.address": {
          "default": null,
          "description": "Peer address of the network connection - IP address or Unix domain socket name. Examples: * 10.1.2.80 * /tmp/my.sock Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "network.peer.port": {
          "default": null,
          "description": "Peer port number of the network connection. Examples: * 65123 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "network.protocol.name": {
          "default": null,
          "description": "OSI application layer or non-OSI equivalent. Examples: * http * spdy Requirement level: Recommended: if not default (http).",
          "nullable": true,
          "type": "boolean"
        },
        "network.protocol.version": {
          "default": null,
          "description": "Version of the protocol specified in network.protocol.name. Examples: * 1.0 * 1.1 * 2 * 3 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "network.transport": {
          "default": null,
          "description": "OSI transport layer. Examples: * tcp * udp Requirement level: Conditionally Required",
          "nullable": true,
          "type": "boolean"
        },
        "network.type": {
          "default": null,
          "description": "OSI network layer or non-OSI equivalent. Examples: * ipv4 * ipv6 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "server.address": {
          "default": null,
          "description": "Name of the local HTTP server that received the request. Examples: * example.com * 10.1.2.80 * /tmp/my.sock Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "server.port": {
          "default": null,
          "description": "Port of the local HTTP server that received the request. Examples: * 80 * 8080 * 443 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "trace_id": {
          "default": null,
          "description": "The OpenTelemetry trace ID. This can be output in logs.",
          "nullable": true,
          "type": "boolean"
        },
        "url.path": {
          "default": null,
          "description": "The URI path component Examples: * /search Requirement level: Required",
          "nullable": true,
          "type": "boolean"
        },
        "url.query": {
          "default": null,
          "description": "The URI query component Examples: * q=OpenTelemetry Requirement level: Conditionally Required: If and only if one was received/sent.",
          "nullable": true,
          "type": "boolean"
        },
        "url.scheme": {
          "default": null,
          "description": "The URI scheme component identifying the used protocol. Examples: * http * https Requirement level: Required",
          "nullable": true,
          "type": "boolean"
        },
        "user_agent.original": {
          "default": null,
          "description": "Value of the HTTP User-Agent header sent by the client. Examples: * CERN-LineMode/2.15 * libwww/2.17b3 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RouterConf": {
      "additionalProperties": false,
      "properties": {
        "jwt": {
          "$ref": "#/definitions/JWTConf",
          "description": "#/definitions/JWTConf"
        }
      },
      "required": [
        "jwt"
      ],
      "type": "object"
    },
    "RouterEventsConfig": {
      "additionalProperties": false,
      "properties": {
        "error": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        },
        "request": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        },
        "response": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        }
      },
      "type": "object"
    },
    "RouterInstrumentsConfig": {
      "additionalProperties": false,
      "properties": {
        "http.server.active_requests": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_ActiveRequestsAttributes",
          "description": "#/definitions/DefaultedStandardInstrument_for_ActiveRequestsAttributes"
        },
        "http.server.request.body.size": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector"
        },
        "http.server.request.duration": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector"
        },
        "http.server.response.body.size": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector"
        }
      },
      "type": "object"
    },
    "RouterRequestConf": {
      "additionalProperties": false,
      "description": "What information is passed to a router request/response stage",
      "properties": {
        "body": {
          "default": false,
          "description": "Send the body",
          "type": "boolean"
        },
        "context": {
          "default": false,
          "description": "Send the context",
          "type": "boolean"
        },
        "headers": {
          "default": false,
          "description": "Send the headers",
          "type": "boolean"
        },
        "method": {
          "default": false,
          "description": "Send the method",
          "type": "boolean"
        },
        "path": {
          "default": false,
          "description": "Send the path",
          "type": "boolean"
        },
        "sdl": {
          "default": false,
          "description": "Send the SDL",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RouterResponseConf": {
      "additionalProperties": false,
      "description": "What information is passed to a router request/response stage",
      "properties": {
        "body": {
          "default": false,
          "description": "Send the body",
          "type": "boolean"
        },
        "context": {
          "default": false,
          "description": "Send the context",
          "type": "boolean"
        },
        "headers": {
          "default": false,
          "description": "Send the headers",
          "type": "boolean"
        },
        "sdl": {
          "default": false,
          "description": "Send the SDL",
          "type": "boolean"
        },
        "status_code": {
          "default": false,
          "description": "Send the HTTP status",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RouterSelector": {
      "anyOf": [
        {
          "additionalProperties": false,
          "description": "A header from the request",
          "properties": {
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            },
            "request_header": {
              "description": "The name of the request header.",
              "type": "string"
            }
          },
          "required": [
            "request_header"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The request method.",
          "properties": {
            "request_method": {
              "description": "The request method enabled or not",
              "type": "boolean"
            }
          },
          "required": [
            "request_method"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "A header from the response",
          "properties": {
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            },
            "response_header": {
              "description": "The name of the request header.",
              "type": "string"
            }
          },
          "required": [
            "response_header"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "A status from the response",
          "properties": {
            "response_status": {
              "$ref": "#/definitions/ResponseStatus",
              "description": "#/definitions/ResponseStatus"
            }
          },
          "required": [
            "response_status"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The trace ID of the request.",
          "properties": {
            "trace_id": {
              "$ref": "#/definitions/TraceIdFormat2",
              "description": "#/definitions/TraceIdFormat2"
            }
          },
          "required": [
            "trace_id"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Apollo Studio operation id",
          "properties": {
            "studio_operation_id": {
              "description": "Apollo Studio operation id",
              "type": "boolean"
            }
          },
          "required": [
            "studio_operation_id"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "A value from context.",
          "properties": {
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            },
            "response_context": {
              "description": "The response context key.",
              "type": "string"
            }
          },
          "required": [
            "response_context"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "The operation name from the query.",
          "properties": {
            "default": {
              "description": "Optional default value.",
              "nullable": true,
              "type": "string"
            },
            "operation_name": {
              "$ref": "#/definitions/OperationName",
              "description": "#/definitions/OperationName"
            }
          },
          "required": [
            "operation_name"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "A value from baggage.",
          "properties": {
            "baggage": {
              "description": "The name of the baggage item.",
              "type": "string"
            },
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            }
          },
          "required": [
            "baggage"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "A value from an environment variable.",
          "properties": {
            "default": {
              "description": "Optional default value.",
              "nullable": true,
              "type": "string"
            },
            "env": {
              "description": "The name of the environment variable",
              "type": "string"
            }
          },
          "required": [
            "env"
          ],
          "type": "object"
        },
        {
          "description": "Deprecated, should not be used anymore, use static field instead",
          "type": "string"
        },
        {
          "additionalProperties": false,
          "properties": {
            "static": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue"
            }
          },
          "required": [
            "static"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "on_graphql_error": {
              "description": "Boolean set to true if the response body contains graphql error",
              "type": "boolean"
            }
          },
          "required": [
            "on_graphql_error"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "error": {
              "$ref": "#/definitions/ErrorRepr",
              "description": "#/definitions/ErrorRepr"
            }
          },
          "required": [
            "error"
          ],
          "type": "object"
        }
      ]
    },
    "RouterShaping": {
      "additionalProperties": false,
      "properties": {
        "global_rate_limit": {
          "$ref": "#/definitions/RateLimitConf",
          "description": "#/definitions/RateLimitConf",
          "nullable": true
        },
        "timeout": {
          "default": null,
          "description": "Enable timeout for incoming requests",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RouterSpans": {
      "additionalProperties": false,
      "properties": {
        "attributes": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::conditional::Conditional<apollo_router::plugins::telemetry::config_new::selectors::RouterSelector>",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::conditional::Conditional<apollo_router::plugins::telemetry::config_new::selectors::RouterSelector>"
        }
      },
      "type": "object"
    },
    "RouterStage": {
      "properties": {
        "request": {
          "$ref": "#/definitions/RouterRequestConf",
          "description": "#/definitions/RouterRequestConf"
        },
        "response": {
          "$ref": "#/definitions/RouterResponseConf",
          "description": "#/definitions/RouterResponseConf"
        }
      },
      "type": "object"
    },
    "RouterValue": {
      "anyOf": [
        {
          "$ref": "#/definitions/Standard",
          "description": "#/definitions/Standard"
        },
        {
          "$ref": "#/definitions/RouterSelector",
          "description": "#/definitions/RouterSelector"
        }
      ]
    },
    "Sampler": {
      "oneOf": [
        {
          "description": "Always sample",
          "enum": [
            "always_on"
          ],
          "type": "string"
        },
        {
          "description": "Never sample",
          "enum": [
            "always_off"
          ],
          "type": "string"
        }
      ]
    },
    "SamplerOption": {
      "anyOf": [
        {
          "description": "Sample a given fraction. Fractions >= 1 will always sample.",
          "format": "double",
          "type": "number"
        },
        {
          "$ref": "#/definitions/Sampler",
          "description": "#/definitions/Sampler"
        }
      ]
    },
    "Sandbox": {
      "additionalProperties": false,
      "description": "Configuration options pertaining to the sandbox page.",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Set to true to enable sandbox",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "SelectorOrValue_for_GraphQLSelector": {
      "anyOf": [
        {
          "$ref": "#/definitions/AttributeValue",
          "description": "#/definitions/AttributeValue"
        },
        {
          "$ref": "#/definitions/GraphQLSelector",
          "description": "#/definitions/GraphQLSelector"
        }
      ]
    },
    "SelectorOrValue_for_RouterSelector": {
      "anyOf": [
        {
          "$ref": "#/definitions/AttributeValue",
          "description": "#/definitions/AttributeValue"
        },
        {
          "$ref": "#/definitions/RouterSelector",
          "description": "#/definitions/RouterSelector"
        }
      ]
    },
    "SelectorOrValue_for_SubgraphSelector": {
      "anyOf": [
        {
          "$ref": "#/definitions/AttributeValue",
          "description": "#/definitions/AttributeValue"
        },
        {
          "$ref": "#/definitions/SubgraphSelector",
          "description": "#/definitions/SubgraphSelector"
        }
      ]
    },
    "SelectorOrValue_for_SupergraphSelector": {
      "anyOf": [
        {
          "$ref": "#/definitions/AttributeValue",
          "description": "#/definitions/AttributeValue"
        },
        {
          "$ref": "#/definitions/SupergraphSelector",
          "description": "#/definitions/SupergraphSelector"
        }
      ]
    },
    "SocketEndpoint": {
      "type": "string"
    },
    "Source": {
      "oneOf": [
        {
          "additionalProperties": false,
          "properties": {
            "name": {
              "default": "authorization",
              "description": "HTTP header expected to contain JWT",
              "type": "string"
            },
            "type": {
              "enum": [
                "header"
              ],
              "type": "string"
            },
            "value_prefix": {
              "default": "Bearer",
              "description": "Header value prefix",
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "name": {
              "description": "Name of the cookie containing the JWT",
              "type": "string"
            },
            "type": {
              "enum": [
                "cookie"
              ],
              "type": "string"
            }
          },
          "required": [
            "name",
            "type"
          ],
          "type": "object"
        }
      ]
    },
    "SpanMode": {
      "description": "Span mode to create new or deprecated spans",
      "oneOf": [
        {
          "description": "Keep the request span as root span and deprecated attributes. This option will eventually removed.",
          "enum": [
            "deprecated"
          ],
          "type": "string"
        },
        {
          "description": "Use new OpenTelemetry spec compliant span attributes or preserve existing. This will be the default in future.",
          "enum": [
            "spec_compliant"
          ],
          "type": "string"
        }
      ]
    },
    "Spans": {
      "additionalProperties": false,
      "properties": {
        "default_attribute_requirement_level": {
          "$ref": "#/definitions/DefaultAttributeRequirementLevel",
          "description": "#/definitions/DefaultAttributeRequirementLevel"
        },
        "mode": {
          "$ref": "#/definitions/SpanMode",
          "description": "#/definitions/SpanMode"
        },
        "router": {
          "$ref": "#/definitions/RouterSpans",
          "description": "#/definitions/RouterSpans"
        },
        "subgraph": {
          "$ref": "#/definitions/SubgraphSpans",
          "description": "#/definitions/SubgraphSpans"
        },
        "supergraph": {
          "$ref": "#/definitions/SupergraphSpans",
          "description": "#/definitions/SupergraphSpans"
        }
      },
      "type": "object"
    },
    "Standard": {
      "enum": [
        "duration",
        "unit"
      ],
      "type": "string"
    },
    "StandardUnit": {
      "enum": [
        "unit"
      ],
      "type": "string"
    },
    "StdOut": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": true,
          "description": "Set to true to log to stdout.",
          "type": "boolean"
        },
        "format": {
          "$ref": "#/definitions/logging_format",
          "description": "#/definitions/logging_format"
        },
        "rate_limit": {
          "$ref": "#/definitions/RateLimit",
          "description": "#/definitions/RateLimit"
        },
        "tty_format": {
          "$ref": "#/definitions/logging_format",
          "description": "#/definitions/logging_format",
          "nullable": true
        }
      },
      "type": "object"
    },
    "StrategyConfig": {
      "description": "Algorithm for calculating the cost of an incoming query.",
      "oneOf": [
        {
          "additionalProperties": false,
          "description": "A simple, statically-defined cost mapping for operations and types.\n\nOperation costs: - Mutation: 10 - Query: 0 - Subscription 0\n\nType costs: - Object: 1 - Interface: 1 - Union: 1 - Scalar: 0 - Enum: 0",
          "properties": {
            "static_estimated": {
              "additionalProperties": false,
              "properties": {
                "list_size": {
                  "description": "The assumed length of lists returned by the operation.",
                  "format": "uint32",
                  "minimum": 0.0,
                  "type": "integer"
                },
                "max": {
                  "description": "The maximum cost of a query",
                  "format": "double",
                  "type": "number"
                }
              },
              "required": [
                "list_size",
                "max"
              ],
              "type": "object"
            }
          },
          "required": [
            "static_estimated"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "test": {
              "additionalProperties": false,
              "properties": {
                "error": {
                  "$ref": "#/definitions/TestError",
                  "description": "#/definitions/TestError"
                },
                "stage": {
                  "$ref": "#/definitions/TestStage",
                  "description": "#/definitions/TestStage"
                }
              },
              "required": [
                "error",
                "stage"
              ],
              "type": "object"
            }
          },
          "required": [
            "test"
          ],
          "type": "object"
        }
      ]
    },
    "Subgraph": {
      "additionalProperties": false,
      "description": "Per subgraph configuration for entity caching",
      "properties": {
        "enabled": {
          "default": null,
          "description": "activates caching for this subgraph, overrides the global configuration",
          "nullable": true,
          "type": "boolean"
        },
        "private_id": {
          "default": null,
          "description": "Context key used to separate cache sections per user",
          "nullable": true,
          "type": "string"
        },
        "ttl": {
          "$ref": "#/definitions/Ttl",
          "description": "#/definitions/Ttl",
          "nullable": true
        }
      },
      "type": "object"
    },
    "SubgraphApq": {
      "additionalProperties": false,
      "description": "Subgraph level Automatic Persisted Queries (APQ) configuration",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "SubgraphAttributes": {
      "additionalProperties": false,
      "properties": {
        "subgraph.graphql.document": {
          "default": null,
          "description": "The GraphQL document being executed. Examples: * query findBookById { bookById(id: ?) { name } } Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "subgraph.graphql.operation.name": {
          "default": null,
          "description": "The name of the operation being executed. Examples: * findBookById Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "subgraph.graphql.operation.type": {
          "default": null,
          "description": "The type of the operation being executed. Examples: * query * subscription * mutation Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "subgraph.name": {
          "default": null,
          "description": "The name of the subgraph Examples: * products Requirement level: Required",
          "nullable": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "SubgraphAttributesConf": {
      "additionalProperties": false,
      "description": "Configuration to add custom attributes/labels on metrics to subgraphs",
      "properties": {
        "all": {
          "$ref": "#/definitions/AttributesForwardConf",
          "description": "#/definitions/AttributesForwardConf"
        },
        "subgraphs": {
          "additionalProperties": {
            "$ref": "#/definitions/AttributesForwardConf",
            "description": "#/definitions/AttributesForwardConf"
          },
          "description": "Attributes per subgraph",
          "type": "object"
        }
      },
      "type": "object"
    },
    "SubgraphConfiguration_for_CommonBatchingConfig": {
      "description": "Configuration options pertaining to the subgraph server component.",
      "properties": {
        "all": {
          "$ref": "#/definitions/CommonBatchingConfig",
          "description": "#/definitions/CommonBatchingConfig"
        },
        "subgraphs": {
          "additionalProperties": {
            "$ref": "#/definitions/CommonBatchingConfig",
            "description": "#/definitions/CommonBatchingConfig"
          },
          "default": {},
          "description": "per subgraph options",
          "type": "object"
        }
      },
      "type": "object"
    },
    "SubgraphConfiguration_for_SubgraphApq": {
      "description": "Configuration options pertaining to the subgraph server component.",
      "properties": {
        "all": {
          "$ref": "#/definitions/SubgraphApq",
          "description": "#/definitions/SubgraphApq"
        },
        "subgraphs": {
          "additionalProperties": {
            "$ref": "#/definitions/SubgraphApq",
            "description": "#/definitions/SubgraphApq"
          },
          "default": {},
          "description": "per subgraph options",
          "type": "object"
        }
      },
      "type": "object"
    },
    "SubgraphConfiguration_for_TlsClient": {
      "description": "Configuration options pertaining to the subgraph server component.",
      "properties": {
        "all": {
          "$ref": "#/definitions/TlsClient",
          "description": "#/definitions/TlsClient"
        },
        "subgraphs": {
          "additionalProperties": {
            "$ref": "#/definitions/TlsClient",
            "description": "#/definitions/TlsClient"
          },
          "default": {},
          "description": "per subgraph options",
          "type": "object"
        }
      },
      "type": "object"
    },
    "SubgraphErrorConfig": {
      "additionalProperties": false,
      "properties": {
        "all": {
          "$ref": "#/definitions/ErrorConfiguration",
          "description": "#/definitions/ErrorConfiguration"
        },
        "subgraphs": {
          "additionalProperties": {
            "$ref": "#/definitions/ErrorConfiguration",
            "description": "#/definitions/ErrorConfiguration"
          },
          "description": "Handling of errors coming from specified subgraphs",
          "type": "object"
        }
      },
      "type": "object"
    },
    "SubgraphEventsConfig": {
      "additionalProperties": false,
      "properties": {
        "error": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        },
        "request": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        },
        "response": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        }
      },
      "type": "object"
    },
    "SubgraphInstrumentsConfig": {
      "additionalProperties": false,
      "properties": {
        "http.client.request.body.size": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector"
        },
        "http.client.request.duration": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector"
        },
        "http.client.response.body.size": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector"
        }
      },
      "type": "object"
    },
    "SubgraphPassthroughMode": {
      "additionalProperties": false,
      "properties": {
        "all": {
          "$ref": "#/definitions/WebSocketConfiguration",
          "description": "#/definitions/WebSocketConfiguration",
          "nullable": true
        },
        "subgraphs": {
          "additionalProperties": {
            "$ref": "#/definitions/WebSocketConfiguration",
            "description": "#/definitions/WebSocketConfiguration"
          },
          "default": {},
          "description": "Configuration for specific subgraphs",
          "type": "object"
        }
      },
      "type": "object"
    },
    "SubgraphRequestConf": {
      "additionalProperties": false,
      "description": "What information is passed to a subgraph request/response stage",
      "properties": {
        "body": {
          "default": false,
          "description": "Send the body",
          "type": "boolean"
        },
        "context": {
          "default": false,
          "description": "Send the context",
          "type": "boolean"
        },
        "headers": {
          "default": false,
          "description": "Send the headers",
          "type": "boolean"
        },
        "method": {
          "default": false,
          "description": "Send the method URI",
          "type": "boolean"
        },
        "service_name": {
          "default": false,
          "description": "Send the service name",
          "type": "boolean"
        },
        "uri": {
          "default": false,
          "description": "Send the subgraph URI",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "SubgraphResponseConf": {
      "additionalProperties": false,
      "description": "What information is passed to a subgraph request/response stage",
      "properties": {
        "body": {
          "default": false,
          "description": "Send the body",
          "type": "boolean"
        },
        "context": {
          "default": false,
          "description": "Send the context",
          "type": "boolean"
        },
        "headers": {
          "default": false,
          "description": "Send the headers",
          "type": "boolean"
        },
        "service_name": {
          "default": false,
          "description": "Send the service name",
          "type": "boolean"
        },
        "status_code": {
          "default": false,
          "description": "Send the http status",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "SubgraphSelector": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Optional default value.",
              "nullable": true,
              "type": "string"
            },
            "subgraph_operation_name": {
              "$ref": "#/definitions/OperationName",
              "description": "#/definitions/OperationName"
            }
          },
          "required": [
            "subgraph_operation_name"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "subgraph_operation_kind": {
              "$ref": "#/definitions/OperationKind",
              "description": "#/definitions/OperationKind"
            }
          },
          "required": [
            "subgraph_operation_kind"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Optional default value.",
              "nullable": true,
              "type": "string"
            },
            "subgraph_query": {
              "$ref": "#/definitions/Query",
              "description": "#/definitions/Query"
            }
          },
          "required": [
            "subgraph_query"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            },
            "subgraph_query_variable": {
              "description": "The name of a subgraph query variable.",
              "type": "string"
            }
          },
          "required": [
            "subgraph_query_variable"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Deprecated, use SubgraphResponseData and SubgraphResponseError instead",
          "properties": {
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            },
            "subgraph_response_body": {
              "description": "The subgraph response body json path.",
              "type": "string"
            }
          },
          "required": [
            "subgraph_response_body"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            },
            "subgraph_response_data": {
              "description": "The subgraph response body json path.",
              "type": "string"
            }
          },
          "required": [
            "subgraph_response_data"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            },
            "subgraph_response_errors": {
              "description": "The subgraph response body json path.",
              "type": "string"
            }
          },
          "required": [
            "subgraph_response_errors"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Optional default value.",
              "nullable": true,
              "type": "string"
            },
            "subgraph_request_header": {
              "description": "The name of a subgraph request header.",
              "type": "string"
            }
          },
          "required": [
            "subgraph_request_header"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Optional default value.",
              "nullable": true,
              "type": "string"
            },
            "subgraph_response_header": {
              "description": "The name of a subgraph response header.",
              "type": "string"
            }
          },
          "required": [
            "subgraph_response_header"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "subgraph_response_status": {
              "$ref": "#/definitions/ResponseStatus",
              "description": "#/definitions/ResponseStatus"
            }
          },
          "required": [
            "subgraph_response_status"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Optional default value.",
              "nullable": true,
              "type": "string"
            },
            "supergraph_operation_name": {
              "$ref": "#/definitions/OperationName",
              "description": "#/definitions/OperationName"
            }
          },
          "required": [
            "supergraph_operation_name"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "supergraph_operation_kind": {
              "$ref": "#/definitions/OperationKind",
              "description": "#/definitions/OperationKind"
            }
          },
          "required": [
            "supergraph_operation_kind"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Optional default value.",
              "nullable": true,
              "type": "string"
            },
            "supergraph_query": {
              "$ref": "#/definitions/Query",
              "description": "#/definitions/Query"
            }
          },
          "required": [
            "supergraph_query"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            },
            "supergraph_query_variable": {
              "description": "The supergraph query variable name.",
              "type": "string"
            }
          },
          "required": [
            "supergraph_query_variable"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Optional default value.",
              "nullable": true,
              "type": "string"
            },
            "supergraph_request_header": {
              "description": "The supergraph request header name.",
              "type": "string"
            }
          },
          "required": [
            "supergraph_request_header"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            },
            "request_context": {
              "description": "The request context key.",
              "type": "string"
            }
          },
          "required": [
            "request_context"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            },
            "response_context": {
              "description": "The response context key.",
              "type": "string"
            }
          },
          "required": [
            "response_context"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "baggage": {
              "description": "The name of the baggage item.",
              "type": "string"
            },
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            }
          },
          "required": [
            "baggage"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Optional default value.",
              "nullable": true,
              "type": "string"
            },
            "env": {
              "description": "The name of the environment variable",
              "type": "string"
            }
          },
          "required": [
            "env"
          ],
          "type": "object"
        },
        {
          "description": "Deprecated, should not be used anymore, use static field instead",
          "type": "string"
        },
        {
          "additionalProperties": false,
          "properties": {
            "static": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue"
            }
          },
          "required": [
            "static"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "error": {
              "$ref": "#/definitions/ErrorRepr",
              "description": "#/definitions/ErrorRepr"
            }
          },
          "required": [
            "error"
          ],
          "type": "object"
        }
      ]
    },
    "SubgraphShaping": {
      "additionalProperties": false,
      "description": "Traffic shaping options",
      "properties": {
        "compression": {
          "$ref": "#/definitions/Compression",
          "description": "#/definitions/Compression",
          "nullable": true
        },
        "deduplicate_query": {
          "description": "Enable query deduplication",
          "nullable": true,
          "type": "boolean"
        },
        "experimental_http2": {
          "$ref": "#/definitions/Http2Config",
          "description": "#/definitions/Http2Config",
          "nullable": true
        },
        "experimental_retry": {
          "$ref": "#/definitions/RetryConfig",
          "description": "#/definitions/RetryConfig",
          "nullable": true
        },
        "global_rate_limit": {
          "$ref": "#/definitions/RateLimitConf",
          "description": "#/definitions/RateLimitConf",
          "nullable": true
        },
        "timeout": {
          "default": null,
          "description": "Enable timeout for incoming requests",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubgraphSpans": {
      "additionalProperties": false,
      "properties": {
        "attributes": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::conditional::Conditional<apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector>",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::conditional::Conditional<apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector>"
        }
      },
      "type": "object"
    },
    "SubgraphStage": {
      "additionalProperties": false,
      "description": "What information is passed to a subgraph request/response stage",
      "properties": {
        "request": {
          "$ref": "#/definitions/SubgraphRequestConf",
          "description": "#/definitions/SubgraphRequestConf"
        },
        "response": {
          "$ref": "#/definitions/SubgraphResponseConf",
          "description": "#/definitions/SubgraphResponseConf"
        }
      },
      "type": "object"
    },
    "SubgraphStages": {
      "additionalProperties": false,
      "description": "What information is passed to a subgraph request/response stage",
      "properties": {
        "all": {
          "$ref": "#/definitions/SubgraphStage",
          "description": "#/definitions/SubgraphStage"
        }
      },
      "type": "object"
    },
    "SubgraphValue": {
      "anyOf": [
        {
          "$ref": "#/definitions/Standard",
          "description": "#/definitions/Standard"
        },
        {
          "$ref": "#/definitions/SubgraphSelector",
          "description": "#/definitions/SubgraphSelector"
        }
      ]
    },
    "SubscriptionConfig": {
      "additionalProperties": false,
      "description": "Subscriptions configuration",
      "properties": {
        "enable_deduplication": {
          "default": true,
          "description": "Enable the deduplication of subscription (for example if we detect the exact same request to subgraph we won't open a new websocket to the subgraph in passthrough mode) (default: true)",
          "type": "boolean"
        },
        "enabled": {
          "default": true,
          "description": "Enable subscription",
          "type": "boolean"
        },
        "max_opened_subscriptions": {
          "default": null,
          "description": "This is a limit to only have maximum X opened subscriptions at the same time. By default if it's not set there is no limit.",
          "format": "uint",
          "minimum": 0.0,
          "nullable": true,
          "type": "integer"
        },
        "mode": {
          "$ref": "#/definitions/SubscriptionModeConfig",
          "description": "#/definitions/SubscriptionModeConfig"
        },
        "queue_capacity": {
          "default": null,
          "description": "It represent the capacity of the in memory queue to know how many events we can keep in a buffer",
          "format": "uint",
          "minimum": 0.0,
          "nullable": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SubscriptionModeConfig": {
      "additionalProperties": false,
      "properties": {
        "callback": {
          "$ref": "#/definitions/CallbackMode",
          "description": "#/definitions/CallbackMode",
          "nullable": true
        },
        "passthrough": {
          "$ref": "#/definitions/SubgraphPassthroughMode",
          "description": "#/definitions/SubgraphPassthroughMode",
          "nullable": true
        }
      },
      "type": "object"
    },
    "Supergraph": {
      "additionalProperties": false,
      "description": "Configuration options pertaining to the supergraph server component.",
      "properties": {
        "defer_support": {
          "default": true,
          "description": "Set to false to disable defer support",
          "type": "boolean"
        },
        "early_cancel": {
          "default": false,
          "description": "abort request handling when the client drops the connection. Default: false. When set to true, some parts of the request pipeline like telemetry will not work properly, but request handling will stop immediately when the client connection is closed.",
          "type": "boolean"
        },
        "experimental_log_on_broken_pipe": {
          "default": false,
          "description": "Log a message if the client closes the connection before the response is sent. Default: false.",
          "type": "boolean"
        },
        "experimental_reuse_query_fragments": {
          "default": null,
          "description": "Enable reuse of query fragments Default: depends on the federation version",
          "nullable": true,
          "type": "boolean"
        },
        "generate_query_fragments": {
          "default": false,
          "description": "Enable QP generation of fragments for subgraph requests Default: false",
          "type": "boolean"
        },
        "introspection": {
          "default": false,
          "description": "Enable introspection Default: false",
          "type": "boolean"
        },
        "listen": {
          "$ref": "#/definitions/ListenAddr",
          "description": "#/definitions/ListenAddr"
        },
        "path": {
          "default": "/",
          "description": "The HTTP path on which GraphQL requests will be served. default: \"/\"",
          "type": "string"
        },
        "query_planning": {
          "$ref": "#/definitions/QueryPlanning",
          "description": "#/definitions/QueryPlanning"
        }
      },
      "type": "object"
    },
    "SupergraphAttributes": {
      "additionalProperties": false,
      "description": "Attributes for Cost",
      "properties": {
        "cost.actual": {
          "default": null,
          "description": "The actual cost of the operation using the currently configured cost model",
          "nullable": true,
          "type": "boolean"
        },
        "cost.delta": {
          "default": null,
          "description": "The delta (estimated - actual) cost of the operation using the currently configured cost model",
          "nullable": true,
          "type": "boolean"
        },
        "cost.estimated": {
          "default": null,
          "description": "The estimated cost of the operation using the currently configured cost model",
          "nullable": true,
          "type": "boolean"
        },
        "cost.result": {
          "default": null,
          "description": "The cost result, this is an error code returned by the cost calculation or COST_OK",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.document": {
          "default": null,
          "description": "The GraphQL document being executed. Examples: * query findBookById { bookById(id: ?) { name } } Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.operation.name": {
          "default": null,
          "description": "The name of the operation being executed. Examples: * findBookById Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.operation.type": {
          "default": null,
          "description": "The type of the operation being executed. Examples: * query * subscription * mutation Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "SupergraphEventsConfig": {
      "additionalProperties": false,
      "properties": {
        "error": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        },
        "request": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        },
        "response": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        }
      },
      "type": "object"
    },
    "SupergraphInstrumentsConfig": {
      "additionalProperties": false,
      "properties": {
        "cost.actual": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector"
        },
        "cost.delta": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector"
        },
        "cost.estimated": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector"
        }
      },
      "type": "object"
    },
    "SupergraphRequestConf": {
      "additionalProperties": false,
      "description": "What information is passed to a router request/response stage",
      "properties": {
        "body": {
          "default": false,
          "description": "Send the body",
          "type": "boolean"
        },
        "context": {
          "default": false,
          "description": "Send the context",
          "type": "boolean"
        },
        "headers": {
          "default": false,
          "description": "Send the headers",
          "type": "boolean"
        },
        "method": {
          "default": false,
          "description": "Send the method",
          "type": "boolean"
        },
        "sdl": {
          "default": false,
          "description": "Send the SDL",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "SupergraphResponseConf": {
      "additionalProperties": false,
      "description": "What information is passed to a router request/response stage",
      "properties": {
        "body": {
          "default": false,
          "description": "Send the body",
          "type": "boolean"
        },
        "context": {
          "default": false,
          "description": "Send the context",
          "type": "boolean"
        },
        "headers": {
          "default": false,
          "description": "Send the headers",
          "type": "boolean"
        },
        "sdl": {
          "default": false,
          "description": "Send the SDL",
          "type": "boolean"
        },
        "status_code": {
          "default": false,
          "description": "Send the HTTP status",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "SupergraphSelector": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Optional default value.",
              "nullable": true,
              "type": "string"
            },
            "operation_name": {
              "$ref": "#/definitions/OperationName",
              "description": "#/definitions/OperationName"
            }
          },
          "required": [
            "operation_name"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "operation_kind": {
              "$ref": "#/definitions/OperationKind",
              "description": "#/definitions/OperationKind"
            }
          },
          "required": [
            "operation_kind"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Optional default value.",
              "nullable": true,
              "type": "string"
            },
            "query": {
              "$ref": "#/definitions/Query",
              "description": "#/definitions/Query"
            }
          },
          "required": [
            "query"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            },
            "query_variable": {
              "description": "The name of a graphql query variable.",
              "type": "string"
            }
          },
          "required": [
            "query_variable"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Optional default value.",
              "nullable": true,
              "type": "string"
            },
            "request_header": {
              "description": "The name of the request header.",
              "type": "string"
            }
          },
          "required": [
            "request_header"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Optional default value.",
              "nullable": true,
              "type": "string"
            },
            "response_header": {
              "description": "The name of the response header.",
              "type": "string"
            }
          },
          "required": [
            "response_header"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "A status from the response",
          "properties": {
            "response_status": {
              "$ref": "#/definitions/ResponseStatus",
              "description": "#/definitions/ResponseStatus"
            }
          },
          "required": [
            "response_status"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            },
            "request_context": {
              "description": "The request context key.",
              "type": "string"
            }
          },
          "required": [
            "request_context"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            },
            "response_context": {
              "description": "The response context key.",
              "type": "string"
            }
          },
          "required": [
            "response_context"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            },
            "response_data": {
              "description": "The supergraph response body json path of the chunks.",
              "type": "string"
            }
          },
          "required": [
            "response_data"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            },
            "response_errors": {
              "description": "The supergraph response body json path of the chunks.",
              "type": "string"
            }
          },
          "required": [
            "response_errors"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "baggage": {
              "description": "The name of the baggage item.",
              "type": "string"
            },
            "default": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue",
              "nullable": true
            }
          },
          "required": [
            "baggage"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "default": {
              "description": "Optional default value.",
              "nullable": true,
              "type": "string"
            },
            "env": {
              "description": "The name of the environment variable",
              "type": "string"
            }
          },
          "required": [
            "env"
          ],
          "type": "object"
        },
        {
          "description": "Deprecated, should not be used anymore, use static field instead",
          "type": "string"
        },
        {
          "additionalProperties": false,
          "properties": {
            "static": {
              "$ref": "#/definitions/AttributeValue",
              "description": "#/definitions/AttributeValue"
            }
          },
          "required": [
            "static"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "on_graphql_error": {
              "description": "Boolean set to true if the response body contains graphql error",
              "type": "boolean"
            }
          },
          "required": [
            "on_graphql_error"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "error": {
              "$ref": "#/definitions/ErrorRepr",
              "description": "#/definitions/ErrorRepr"
            }
          },
          "required": [
            "error"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Cost attributes",
          "properties": {
            "cost": {
              "$ref": "#/definitions/CostValue",
              "description": "#/definitions/CostValue"
            }
          },
          "required": [
            "cost"
          ],
          "type": "object"
        }
      ]
    },
    "SupergraphSpans": {
      "additionalProperties": false,
      "properties": {
        "attributes": {
          "$ref": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::conditional::Conditional<apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector>",
          "description": "#/definitions/extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::conditional::Conditional<apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector>"
        }
      },
      "type": "object"
    },
    "SupergraphStage": {
      "properties": {
        "request": {
          "$ref": "#/definitions/SupergraphRequestConf",
          "description": "#/definitions/SupergraphRequestConf"
        },
        "response": {
          "$ref": "#/definitions/SupergraphResponseConf",
          "description": "#/definitions/SupergraphResponseConf"
        }
      },
      "type": "object"
    },
    "SupergraphValue": {
      "anyOf": [
        {
          "$ref": "#/definitions/Standard",
          "description": "#/definitions/Standard"
        },
        {
          "$ref": "#/definitions/Event_for_SupergraphSelector",
          "description": "#/definitions/Event_for_SupergraphSelector"
        },
        {
          "$ref": "#/definitions/SupergraphSelector",
          "description": "#/definitions/SupergraphSelector"
        }
      ]
    },
    "Temporality": {
      "oneOf": [
        {
          "description": "Export cumulative metrics.",
          "enum": [
            "cumulative"
          ],
          "type": "string"
        },
        {
          "description": "Export delta metrics. `Delta` should be used when exporting to DataDog Agent.",
          "enum": [
            "delta"
          ],
          "type": "string"
        }
      ]
    },
    "TestError": {
      "enum": [
        "estimated_cost_too_expensive",
        "actual_cost_too_expensive"
      ],
      "type": "string"
    },
    "TestStage": {
      "enum": [
        "execution_request",
        "execution_response",
        "subgraph_request",
        "subgraph_response"
      ],
      "type": "string"
    },
    "Tls": {
      "additionalProperties": false,
      "description": "TLS related configuration options.",
      "properties": {
        "subgraph": {
          "$ref": "#/definitions/SubgraphConfiguration_for_TlsClient",
          "description": "#/definitions/SubgraphConfiguration_for_TlsClient"
        },
        "supergraph": {
          "$ref": "#/definitions/TlsSupergraph",
          "description": "#/definitions/TlsSupergraph",
          "nullable": true
        }
      },
      "type": "object"
    },
    "TlsClient": {
      "additionalProperties": false,
      "description": "Configuration options pertaining to the subgraph server component.",
      "properties": {
        "certificate_authorities": {
          "default": null,
          "description": "list of certificate authorities in PEM format",
          "nullable": true,
          "type": "string"
        },
        "client_authentication": {
          "$ref": "#/definitions/TlsClientAuth",
          "description": "#/definitions/TlsClientAuth",
          "nullable": true
        }
      },
      "type": "object"
    },
    "TlsClientAuth": {
      "additionalProperties": false,
      "description": "TLS client authentication",
      "properties": {
        "certificate_chain": {
          "description": "list of certificates in PEM format",
          "type": "string",
          "writeOnly": true
        },
        "key": {
          "description": "key in PEM format",
          "type": "string",
          "writeOnly": true
        }
      },
      "required": [
        "certificate_chain",
        "key"
      ],
      "type": "object"
    },
    "TlsSupergraph": {
      "additionalProperties": false,
      "description": "Configuration options pertaining to the supergraph server component.",
      "properties": {
        "certificate": {
          "description": "server certificate in PEM format",
          "type": "string",
          "writeOnly": true
        },
        "certificate_chain": {
          "description": "list of certificate authorities in PEM format",
          "type": "string",
          "writeOnly": true
        },
        "key": {
          "description": "server key in PEM format",
          "type": "string",
          "writeOnly": true
        }
      },
      "required": [
        "certificate",
        "certificate_chain",
        "key"
      ],
      "type": "object"
    },
    "TraceIdFormat": {
      "oneOf": [
        {
          "description": "Format the Trace ID as a hexadecimal number\n\n(e.g. Trace ID 16 -> 00000000000000000000000000000010)",
          "enum": [
            "hexadecimal"
          ],
          "type": "string"
        },
        {
          "description": "Format the Trace ID as a decimal number\n\n(e.g. Trace ID 16 -> 16)",
          "enum": [
            "decimal"
          ],
          "type": "string"
        }
      ]
    },
    "TraceIdFormat2": {
      "oneOf": [
        {
          "description": "Open Telemetry trace ID, a hex string.",
          "enum": [
            "open_telemetry"
          ],
          "type": "string"
        },
        {
          "description": "Datadog trace ID, a u64.",
          "enum": [
            "datadog"
          ],
          "type": "string"
        }
      ]
    },
    "Tracing": {
      "additionalProperties": false,
      "description": "Tracing configuration",
      "properties": {
        "common": {
          "$ref": "#/definitions/TracingCommon",
          "description": "#/definitions/TracingCommon"
        },
        "datadog": {
          "$ref": "#/definitions/Config13",
          "description": "#/definitions/Config13"
        },
        "experimental_response_trace_id": {
          "$ref": "#/definitions/ExposeTraceId",
          "description": "#/definitions/ExposeTraceId"
        },
        "jaeger": {
          "$ref": "#/definitions/Config11",
          "description": "#/definitions/Config11"
        },
        "otlp": {
          "$ref": "#/definitions/Config9",
          "description": "#/definitions/Config9"
        },
        "propagation": {
          "$ref": "#/definitions/Propagation",
          "description": "#/definitions/Propagation"
        },
        "zipkin": {
          "$ref": "#/definitions/Config12",
          "description": "#/definitions/Config12"
        }
      },
      "type": "object"
    },
    "TracingCommon": {
      "additionalProperties": false,
      "properties": {
        "max_attributes_per_event": {
          "default": 128,
          "description": "The maximum attributes per event before discarding",
          "format": "uint32",
          "minimum": 0.0,
          "type": "integer"
        },
        "max_attributes_per_link": {
          "default": 128,
          "description": "The maximum attributes per link before discarding",
          "format": "uint32",
          "minimum": 0.0,
          "type": "integer"
        },
        "max_attributes_per_span": {
          "default": 128,
          "description": "The maximum attributes per span before discarding",
          "format": "uint32",
          "minimum": 0.0,
          "type": "integer"
        },
        "max_events_per_span": {
          "default": 128,
          "description": "The maximum events per span before discarding",
          "format": "uint32",
          "minimum": 0.0,
          "type": "integer"
        },
        "max_links_per_span": {
          "default": 128,
          "description": "The maximum links per span before discarding",
          "format": "uint32",
          "minimum": 0.0,
          "type": "integer"
        },
        "parent_based_sampler": {
          "default": true,
          "description": "Whether to use parent based sampling",
          "type": "boolean"
        },
        "resource": {
          "additionalProperties": {
            "$ref": "#/definitions/AttributeValue",
            "description": "#/definitions/AttributeValue"
          },
          "default": {},
          "description": "The Open Telemetry resource",
          "type": "object"
        },
        "sampler": {
          "$ref": "#/definitions/SamplerOption",
          "description": "#/definitions/SamplerOption"
        },
        "service_name": {
          "default": null,
          "description": "The trace service name",
          "nullable": true,
          "type": "string"
        },
        "service_namespace": {
          "default": null,
          "description": "The trace service namespace",
          "nullable": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Ttl": {
      "description": "Per subgraph configuration for entity caching",
      "type": "string"
    },
    "TypeName": {
      "oneOf": [
        {
          "description": "The GraphQL type name",
          "enum": [
            "string"
          ],
          "type": "string"
        }
      ]
    },
    "UriEndpoint": {
      "type": "string"
    },
    "WebSocketConfiguration": {
      "additionalProperties": false,
      "description": "WebSocket configuration for a specific subgraph",
      "properties": {
        "heartbeat_interval": {
          "$ref": "#/definitions/HeartbeatInterval",
          "description": "#/definitions/HeartbeatInterval"
        },
        "path": {
          "default": null,
          "description": "Path on which WebSockets are listening",
          "nullable": true,
          "type": "string"
        },
        "protocol": {
          "$ref": "#/definitions/WebSocketProtocol",
          "description": "#/definitions/WebSocketProtocol"
        }
      },
      "type": "object"
    },
    "WebSocketProtocol": {
      "enum": [
        "graphql_ws",
        "graphql_transport_ws"
      ],
      "type": "string"
    },
    "conditional_attribute_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector": {
      "anyOf": [
        {
          "$ref": "#/definitions/RouterSelector",
          "description": "#/definitions/RouterSelector"
        },
        {
          "properties": {
            "condition": {
              "$ref": "#/definitions/Condition_for_RouterSelector",
              "description": "#/definitions/Condition_for_RouterSelector"
            }
          }
        }
      ]
    },
    "conditional_attribute_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector": {
      "anyOf": [
        {
          "$ref": "#/definitions/SubgraphSelector",
          "description": "#/definitions/SubgraphSelector"
        },
        {
          "properties": {
            "condition": {
              "$ref": "#/definitions/Condition_for_SubgraphSelector",
              "description": "#/definitions/Condition_for_SubgraphSelector"
            }
          }
        }
      ]
    },
    "conditional_attribute_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector": {
      "anyOf": [
        {
          "$ref": "#/definitions/SupergraphSelector",
          "description": "#/definitions/SupergraphSelector"
        },
        {
          "properties": {
            "condition": {
              "$ref": "#/definitions/Condition_for_SupergraphSelector",
              "description": "#/definitions/Condition_for_SupergraphSelector"
            }
          }
        }
      ]
    },
    "extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::conditional::Conditional<apollo_router::plugins::telemetry::config_new::selectors::RouterSelector>": {
      "additionalProperties": {
        "$ref": "#/definitions/conditional_attribute_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector",
        "description": "#/definitions/conditional_attribute_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector"
      },
      "description": "Common attributes for http server and client. See https://opentelemetry.io/docs/specs/semconv/http/http-spans/#common-attributes",
      "properties": {
        "baggage": {
          "default": null,
          "description": "All key values from trace baggage.",
          "nullable": true,
          "type": "boolean"
        },
        "dd.trace_id": {
          "default": null,
          "description": "The datadog trace ID. This can be output in logs and used to correlate traces in Datadog.",
          "nullable": true,
          "type": "boolean"
        },
        "error.type": {
          "default": null,
          "description": "Describes a class of error the operation ended with. Examples: * timeout * name_resolution_error * 500 Requirement level: Conditionally Required: If request has ended with an error.",
          "nullable": true,
          "type": "boolean"
        },
        "http.request.body.size": {
          "default": null,
          "description": "The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the Content-Length header. For requests using transport encoding, this should be the compressed size. Examples: * 3495 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "http.request.method": {
          "default": null,
          "description": "HTTP request method. Examples: * GET * POST * HEAD Requirement level: Required",
          "nullable": true,
          "type": "boolean"
        },
        "http.response.body.size": {
          "default": null,
          "description": "The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the Content-Length header. For requests using transport encoding, this should be the compressed size. Examples: * 3495 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "http.response.status_code": {
          "default": null,
          "description": "HTTP response status code. Examples: * 200 Requirement level: Conditionally Required: If and only if one was received/sent.",
          "nullable": true,
          "type": "boolean"
        },
        "http.route": {
          "default": null,
          "description": "The matched route (path template in the format used by the respective server framework). Examples: * /graphql Requirement level: Conditionally Required: If and only if it’s available",
          "nullable": true,
          "type": "boolean"
        },
        "network.local.address": {
          "default": null,
          "description": "Local socket address. Useful in case of a multi-IP host. Examples: * 10.1.2.80 * /tmp/my.sock Requirement level: Opt-In",
          "nullable": true,
          "type": "boolean"
        },
        "network.local.port": {
          "default": null,
          "description": "Local socket port. Useful in case of a multi-port host. Examples: * 65123 Requirement level: Opt-In",
          "nullable": true,
          "type": "boolean"
        },
        "network.peer.address": {
          "default": null,
          "description": "Peer address of the network connection - IP address or Unix domain socket name. Examples: * 10.1.2.80 * /tmp/my.sock Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "network.peer.port": {
          "default": null,
          "description": "Peer port number of the network connection. Examples: * 65123 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "network.protocol.name": {
          "default": null,
          "description": "OSI application layer or non-OSI equivalent. Examples: * http * spdy Requirement level: Recommended: if not default (http).",
          "nullable": true,
          "type": "boolean"
        },
        "network.protocol.version": {
          "default": null,
          "description": "Version of the protocol specified in network.protocol.name. Examples: * 1.0 * 1.1 * 2 * 3 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "network.transport": {
          "default": null,
          "description": "OSI transport layer. Examples: * tcp * udp Requirement level: Conditionally Required",
          "nullable": true,
          "type": "boolean"
        },
        "network.type": {
          "default": null,
          "description": "OSI network layer or non-OSI equivalent. Examples: * ipv4 * ipv6 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "server.address": {
          "default": null,
          "description": "Name of the local HTTP server that received the request. Examples: * example.com * 10.1.2.80 * /tmp/my.sock Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "server.port": {
          "default": null,
          "description": "Port of the local HTTP server that received the request. Examples: * 80 * 8080 * 443 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "trace_id": {
          "default": null,
          "description": "The OpenTelemetry trace ID. This can be output in logs.",
          "nullable": true,
          "type": "boolean"
        },
        "url.path": {
          "default": null,
          "description": "The URI path component Examples: * /search Requirement level: Required",
          "nullable": true,
          "type": "boolean"
        },
        "url.query": {
          "default": null,
          "description": "The URI query component Examples: * q=OpenTelemetry Requirement level: Conditionally Required: If and only if one was received/sent.",
          "nullable": true,
          "type": "boolean"
        },
        "url.scheme": {
          "default": null,
          "description": "The URI scheme component identifying the used protocol. Examples: * http * https Requirement level: Required",
          "nullable": true,
          "type": "boolean"
        },
        "user_agent.original": {
          "default": null,
          "description": "Value of the HTTP User-Agent header sent by the client. Examples: * CERN-LineMode/2.15 * libwww/2.17b3 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector": {
      "additionalProperties": {
        "$ref": "#/definitions/RouterSelector",
        "description": "#/definitions/RouterSelector"
      },
      "description": "Common attributes for http server and client. See https://opentelemetry.io/docs/specs/semconv/http/http-spans/#common-attributes",
      "properties": {
        "baggage": {
          "default": null,
          "description": "All key values from trace baggage.",
          "nullable": true,
          "type": "boolean"
        },
        "dd.trace_id": {
          "default": null,
          "description": "The datadog trace ID. This can be output in logs and used to correlate traces in Datadog.",
          "nullable": true,
          "type": "boolean"
        },
        "error.type": {
          "default": null,
          "description": "Describes a class of error the operation ended with. Examples: * timeout * name_resolution_error * 500 Requirement level: Conditionally Required: If request has ended with an error.",
          "nullable": true,
          "type": "boolean"
        },
        "http.request.body.size": {
          "default": null,
          "description": "The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the Content-Length header. For requests using transport encoding, this should be the compressed size. Examples: * 3495 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "http.request.method": {
          "default": null,
          "description": "HTTP request method. Examples: * GET * POST * HEAD Requirement level: Required",
          "nullable": true,
          "type": "boolean"
        },
        "http.response.body.size": {
          "default": null,
          "description": "The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the Content-Length header. For requests using transport encoding, this should be the compressed size. Examples: * 3495 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "http.response.status_code": {
          "default": null,
          "description": "HTTP response status code. Examples: * 200 Requirement level: Conditionally Required: If and only if one was received/sent.",
          "nullable": true,
          "type": "boolean"
        },
        "http.route": {
          "default": null,
          "description": "The matched route (path template in the format used by the respective server framework). Examples: * /graphql Requirement level: Conditionally Required: If and only if it’s available",
          "nullable": true,
          "type": "boolean"
        },
        "network.local.address": {
          "default": null,
          "description": "Local socket address. Useful in case of a multi-IP host. Examples: * 10.1.2.80 * /tmp/my.sock Requirement level: Opt-In",
          "nullable": true,
          "type": "boolean"
        },
        "network.local.port": {
          "default": null,
          "description": "Local socket port. Useful in case of a multi-port host. Examples: * 65123 Requirement level: Opt-In",
          "nullable": true,
          "type": "boolean"
        },
        "network.peer.address": {
          "default": null,
          "description": "Peer address of the network connection - IP address or Unix domain socket name. Examples: * 10.1.2.80 * /tmp/my.sock Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "network.peer.port": {
          "default": null,
          "description": "Peer port number of the network connection. Examples: * 65123 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "network.protocol.name": {
          "default": null,
          "description": "OSI application layer or non-OSI equivalent. Examples: * http * spdy Requirement level: Recommended: if not default (http).",
          "nullable": true,
          "type": "boolean"
        },
        "network.protocol.version": {
          "default": null,
          "description": "Version of the protocol specified in network.protocol.name. Examples: * 1.0 * 1.1 * 2 * 3 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "network.transport": {
          "default": null,
          "description": "OSI transport layer. Examples: * tcp * udp Requirement level: Conditionally Required",
          "nullable": true,
          "type": "boolean"
        },
        "network.type": {
          "default": null,
          "description": "OSI network layer or non-OSI equivalent. Examples: * ipv4 * ipv6 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "server.address": {
          "default": null,
          "description": "Name of the local HTTP server that received the request. Examples: * example.com * 10.1.2.80 * /tmp/my.sock Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "server.port": {
          "default": null,
          "description": "Port of the local HTTP server that received the request. Examples: * 80 * 8080 * 443 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "trace_id": {
          "default": null,
          "description": "The OpenTelemetry trace ID. This can be output in logs.",
          "nullable": true,
          "type": "boolean"
        },
        "url.path": {
          "default": null,
          "description": "The URI path component Examples: * /search Requirement level: Required",
          "nullable": true,
          "type": "boolean"
        },
        "url.query": {
          "default": null,
          "description": "The URI query component Examples: * q=OpenTelemetry Requirement level: Conditionally Required: If and only if one was received/sent.",
          "nullable": true,
          "type": "boolean"
        },
        "url.scheme": {
          "default": null,
          "description": "The URI scheme component identifying the used protocol. Examples: * http * https Requirement level: Required",
          "nullable": true,
          "type": "boolean"
        },
        "user_agent.original": {
          "default": null,
          "description": "Value of the HTTP User-Agent header sent by the client. Examples: * CERN-LineMode/2.15 * libwww/2.17b3 Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::conditional::Conditional<apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector>": {
      "additionalProperties": {
        "$ref": "#/definitions/conditional_attribute_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector",
        "description": "#/definitions/conditional_attribute_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector"
      },
      "properties": {
        "subgraph.graphql.document": {
          "default": null,
          "description": "The GraphQL document being executed. Examples: * query findBookById { bookById(id: ?) { name } } Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "subgraph.graphql.operation.name": {
          "default": null,
          "description": "The name of the operation being executed. Examples: * findBookById Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "subgraph.graphql.operation.type": {
          "default": null,
          "description": "The type of the operation being executed. Examples: * query * subscription * mutation Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "subgraph.name": {
          "default": null,
          "description": "The name of the subgraph Examples: * products Requirement level: Required",
          "nullable": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector": {
      "additionalProperties": {
        "$ref": "#/definitions/SubgraphSelector",
        "description": "#/definitions/SubgraphSelector"
      },
      "properties": {
        "subgraph.graphql.document": {
          "default": null,
          "description": "The GraphQL document being executed. Examples: * query findBookById { bookById(id: ?) { name } } Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "subgraph.graphql.operation.name": {
          "default": null,
          "description": "The name of the operation being executed. Examples: * findBookById Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "subgraph.graphql.operation.type": {
          "default": null,
          "description": "The type of the operation being executed. Examples: * query * subscription * mutation Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "subgraph.name": {
          "default": null,
          "description": "The name of the subgraph Examples: * products Requirement level: Required",
          "nullable": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::conditional::Conditional<apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector>": {
      "additionalProperties": {
        "$ref": "#/definitions/conditional_attribute_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector",
        "description": "#/definitions/conditional_attribute_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector"
      },
      "description": "Attributes for Cost",
      "properties": {
        "cost.actual": {
          "default": null,
          "description": "The actual cost of the operation using the currently configured cost model",
          "nullable": true,
          "type": "boolean"
        },
        "cost.delta": {
          "default": null,
          "description": "The delta (estimated - actual) cost of the operation using the currently configured cost model",
          "nullable": true,
          "type": "boolean"
        },
        "cost.estimated": {
          "default": null,
          "description": "The estimated cost of the operation using the currently configured cost model",
          "nullable": true,
          "type": "boolean"
        },
        "cost.result": {
          "default": null,
          "description": "The cost result, this is an error code returned by the cost calculation or COST_OK",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.document": {
          "default": null,
          "description": "The GraphQL document being executed. Examples: * query findBookById { bookById(id: ?) { name } } Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.operation.name": {
          "default": null,
          "description": "The name of the operation being executed. Examples: * findBookById Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.operation.type": {
          "default": null,
          "description": "The type of the operation being executed. Examples: * query * subscription * mutation Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector": {
      "additionalProperties": {
        "$ref": "#/definitions/SupergraphSelector",
        "description": "#/definitions/SupergraphSelector"
      },
      "description": "Attributes for Cost",
      "properties": {
        "cost.actual": {
          "default": null,
          "description": "The actual cost of the operation using the currently configured cost model",
          "nullable": true,
          "type": "boolean"
        },
        "cost.delta": {
          "default": null,
          "description": "The delta (estimated - actual) cost of the operation using the currently configured cost model",
          "nullable": true,
          "type": "boolean"
        },
        "cost.estimated": {
          "default": null,
          "description": "The estimated cost of the operation using the currently configured cost model",
          "nullable": true,
          "type": "boolean"
        },
        "cost.result": {
          "default": null,
          "description": "The cost result, this is an error code returned by the cost calculation or COST_OK",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.document": {
          "default": null,
          "description": "The GraphQL document being executed. Examples: * query findBookById { bookById(id: ?) { name } } Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.operation.name": {
          "default": null,
          "description": "The name of the operation being executed. Examples: * findBookById Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.operation.type": {
          "default": null,
          "description": "The type of the operation being executed. Examples: * query * subscription * mutation Requirement level: Recommended",
          "nullable": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "extendable_attribute_apollo_router::plugins::telemetry::config_new::events::RouterEventsConfig_apollo_router::plugins::telemetry::config_new::events::Event<apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes,_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector>": {
      "additionalProperties": {
        "$ref": "#/definitions/Event_for_RouterAttributes_and_RouterSelector",
        "description": "#/definitions/Event_for_RouterAttributes_and_RouterSelector"
      },
      "properties": {
        "error": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        },
        "request": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        },
        "response": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        }
      },
      "type": "object"
    },
    "extendable_attribute_apollo_router::plugins::telemetry::config_new::events::SubgraphEventsConfig_apollo_router::plugins::telemetry::config_new::events::Event<apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes,_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector>": {
      "additionalProperties": {
        "$ref": "#/definitions/Event_for_SubgraphAttributes_and_SubgraphSelector",
        "description": "#/definitions/Event_for_SubgraphAttributes_and_SubgraphSelector"
      },
      "properties": {
        "error": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        },
        "request": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        },
        "response": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        }
      },
      "type": "object"
    },
    "extendable_attribute_apollo_router::plugins::telemetry::config_new::events::SupergraphEventsConfig_apollo_router::plugins::telemetry::config_new::events::Event<apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes,_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector>": {
      "additionalProperties": {
        "$ref": "#/definitions/Event_for_SupergraphAttributes_and_SupergraphSelector",
        "description": "#/definitions/Event_for_SupergraphAttributes_and_SupergraphSelector"
      },
      "properties": {
        "error": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        },
        "request": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        },
        "response": {
          "$ref": "#/definitions/EventLevel",
          "description": "#/definitions/EventLevel"
        }
      },
      "type": "object"
    },
    "extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::GraphQLInstrumentsConfig_apollo_router::plugins::telemetry::config_new::instruments::Instrument<apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes,_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector,_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLValue>": {
      "additionalProperties": {
        "$ref": "#/definitions/Instrument_for_GraphQLAttributes_and_GraphQLSelector_and_GraphQLValue",
        "description": "#/definitions/Instrument_for_GraphQLAttributes_and_GraphQLSelector_and_GraphQLValue"
      },
      "properties": {
        "field.execution": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector"
        },
        "list.length": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector"
        }
      },
      "type": "object"
    },
    "extendable_attribute_apollo_router::plugins::telemetry::config_new::graphql::attributes::GraphQLAttributes_apollo_router::plugins::telemetry::config_new::graphql::selectors::GraphQLSelector": {
      "additionalProperties": {
        "$ref": "#/definitions/GraphQLSelector",
        "description": "#/definitions/GraphQLSelector"
      },
      "properties": {
        "graphql.field.name": {
          "default": null,
          "description": "The GraphQL field name",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.field.type": {
          "default": null,
          "description": "The GraphQL field type",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.list.length": {
          "default": null,
          "description": "If the field is a list, the length of the list",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.operation.name": {
          "default": null,
          "description": "The GraphQL operation name",
          "nullable": true,
          "type": "boolean"
        },
        "graphql.type.name": {
          "default": null,
          "description": "The GraphQL type name",
          "nullable": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "extendable_attribute_apollo_router::plugins::telemetry::config_new::instruments::RouterInstrumentsConfig_apollo_router::plugins::telemetry::config_new::instruments::Instrument<apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes,_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector,_apollo_router::plugins::telemetry::config_new::selectors::RouterValue>": {
      "additionalProperties": {
        "$ref": "#/definitions/Instrument_for_RouterAttributes_and_RouterSelector_and_RouterValue",
        "description": "#/definitions/Instrument_for_RouterAttributes_and_RouterSelector_and_RouterValue"
      },
      "properties": {
        "http.server.active_requests": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_ActiveRequestsAttributes",
          "description": "#/definitions/DefaultedStandardInstrument_for_ActiveRequestsAttributes"
        },
        "http.server.request.body.size": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector"
        },
        "http.server.request.duration": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector"
        },
        "http.server.response.body.size": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::RouterAttributes_apollo_router::plugins::telemetry::config_new::selectors::RouterSelector"
        }
      },
      "type": "object"
    },
    "extendable_attribute_apollo_router::plugins::telemetry::config_new::instruments::SubgraphInstrumentsConfig_apollo_router::plugins::telemetry::config_new::instruments::Instrument<apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes,_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector,_apollo_router::plugins::telemetry::config_new::selectors::SubgraphValue>": {
      "additionalProperties": {
        "$ref": "#/definitions/Instrument_for_SubgraphAttributes_and_SubgraphSelector_and_SubgraphValue",
        "description": "#/definitions/Instrument_for_SubgraphAttributes_and_SubgraphSelector_and_SubgraphValue"
      },
      "properties": {
        "http.client.request.body.size": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector"
        },
        "http.client.request.duration": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector"
        },
        "http.client.response.body.size": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SubgraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SubgraphSelector"
        }
      },
      "type": "object"
    },
    "extendable_attribute_apollo_router::plugins::telemetry::config_new::instruments::SupergraphInstrumentsConfig_apollo_router::plugins::telemetry::config_new::instruments::Instrument<apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes,_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector,_apollo_router::plugins::telemetry::config_new::selectors::SupergraphValue>": {
      "additionalProperties": {
        "$ref": "#/definitions/Instrument_for_SupergraphAttributes_and_SupergraphSelector_and_SupergraphValue",
        "description": "#/definitions/Instrument_for_SupergraphAttributes_and_SupergraphSelector_and_SupergraphValue"
      },
      "properties": {
        "cost.actual": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector"
        },
        "cost.delta": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector"
        },
        "cost.estimated": {
          "$ref": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector",
          "description": "#/definitions/DefaultedStandardInstrument_for_extendable_attribute_apollo_router::plugins::telemetry::config_new::attributes::SupergraphAttributes_apollo_router::plugins::telemetry::config_new::selectors::SupergraphSelector"
        }
      },
      "type": "object"
    },
    "logging_format": {
      "oneOf": [
        {
          "additionalProperties": false,
          "description": "Tracing subscriber https://docs.rs/tracing-subscriber/latest/tracing_subscriber/fmt/format/struct.Json.html",
          "properties": {
            "json": {
              "additionalProperties": false,
              "properties": {
                "display_current_span": {
                  "default": false,
                  "description": "Include the current span in this log event.",
                  "type": "boolean"
                },
                "display_filename": {
                  "default": false,
                  "description": "Include the filename with the log event.",
                  "type": "boolean"
                },
                "display_level": {
                  "default": true,
                  "description": "Include the level with the log event. (default: true)",
                  "type": "boolean"
                },
                "display_line_number": {
                  "default": false,
                  "description": "Include the line number with the log event.",
                  "type": "boolean"
                },
                "display_resource": {
                  "default": true,
                  "description": "Include the resource with the log event. (default: true)",
                  "type": "boolean"
                },
                "display_span_id": {
                  "default": true,
                  "description": "Include the span id (if any) with the log event. (default: true)",
                  "type": "boolean"
                },
                "display_span_list": {
                  "default": true,
                  "description": "Include all of the containing span information with the log event. (default: true)",
                  "type": "boolean"
                },
                "display_target": {
                  "default": true,
                  "description": "Include the target with the log event. (default: true)",
                  "type": "boolean"
                },
                "display_thread_id": {
                  "default": false,
                  "description": "Include the thread_id with the log event.",
                  "type": "boolean"
                },
                "display_thread_name": {
                  "default": false,
                  "description": "Include the thread_name with the log event.",
                  "type": "boolean"
                },
                "display_timestamp": {
                  "default": true,
                  "description": "Include the timestamp with the log event. (default: true)",
                  "type": "boolean"
                },
                "display_trace_id": {
                  "default": true,
                  "description": "Include the trace id (if any) with the log event. (default: true)",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "json"
          ],
          "type": "object"
        },
        {
          "description": "Tracing subscriber https://docs.rs/tracing-subscriber/latest/tracing_subscriber/fmt/format/struct.Json.html",
          "enum": [
            "json"
          ],
          "type": "string"
        },
        {
          "additionalProperties": false,
          "description": "Tracing subscriber https://docs.rs/tracing-subscriber/latest/tracing_subscriber/fmt/format/struct.Full.html",
          "properties": {
            "text": {
              "additionalProperties": false,
              "properties": {
                "ansi_escape_codes": {
                  "default": true,
                  "description": "Process ansi escapes (default: true)",
                  "type": "boolean"
                },
                "display_current_span": {
                  "default": true,
                  "description": "Include the current span in this log event. (default: true)",
                  "type": "boolean"
                },
                "display_filename": {
                  "default": false,
                  "description": "Include the filename with the log event.",
                  "type": "boolean"
                },
                "display_level": {
                  "default": true,
                  "description": "Include the level with the log event. (default: true)",
                  "type": "boolean"
                },
                "display_line_number": {
                  "default": false,
                  "description": "Include the line number with the log event.",
                  "type": "boolean"
                },
                "display_resource": {
                  "default": false,
                  "description": "Include the resource with the log event.",
                  "type": "boolean"
                },
                "display_service_name": {
                  "default": false,
                  "description": "Include the service name with the log event.",
                  "type": "boolean"
                },
                "display_service_namespace": {
                  "default": false,
                  "description": "Include the service namespace with the log event.",
                  "type": "boolean"
                },
                "display_span_id": {
                  "default": false,
                  "description": "Include the span id (if any) with the log event. (default: false)",
                  "type": "boolean"
                },
                "display_span_list": {
                  "default": true,
                  "description": "Include all of the containing span information with the log event. (default: true)",
                  "type": "boolean"
                },
                "display_target": {
                  "default": false,
                  "description": "Include the target with the log event.",
                  "type": "boolean"
                },
                "display_thread_id": {
                  "default": false,
                  "description": "Include the thread_id with the log event.",
                  "type": "boolean"
                },
                "display_thread_name": {
                  "default": false,
                  "description": "Include the thread_name with the log event.",
                  "type": "boolean"
                },
                "display_timestamp": {
                  "default": true,
                  "description": "Include the timestamp with the log event. (default: true)",
                  "type": "boolean"
                },
                "display_trace_id": {
                  "default": false,
                  "description": "Include the trace id (if any) with the log event. (default: false)",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "text"
          ],
          "type": "object"
        },
        {
          "description": "Tracing subscriber https://docs.rs/tracing-subscriber/latest/tracing_subscriber/fmt/format/struct.Full.html",
          "enum": [
            "text"
          ],
          "type": "string"
        }
      ]
    }
  },
  "description": "The configuration for the router.\n\nCan be created through `serde::Deserialize` from various formats, or inline in Rust code with `serde_json::json!` and `serde_json::from_value`.",
  "properties": {
    "apq": {
      "$ref": "#/definitions/Apq",
      "description": "#/definitions/Apq"
    },
    "authentication": {
      "$ref": "#/definitions/Conf2",
      "description": "#/definitions/Conf2"
    },
    "authorization": {
      "$ref": "#/definitions/Conf3",
      "description": "#/definitions/Conf3"
    },
    "batching": {
      "$ref": "#/definitions/Batching",
      "description": "#/definitions/Batching"
    },
    "coprocessor": {
      "$ref": "#/definitions/Conf4",
      "description": "#/definitions/Conf4"
    },
    "cors": {
      "$ref": "#/definitions/Cors",
      "description": "#/definitions/Cors"
    },
    "csrf": {
      "$ref": "#/definitions/CSRFConfig",
      "description": "#/definitions/CSRFConfig"
    },
    "experimental_api_schema_generation_mode": {
      "$ref": "#/definitions/ApiSchemaMode",
      "description": "#/definitions/ApiSchemaMode"
    },
    "experimental_apollo_metrics_generation_mode": {
      "$ref": "#/definitions/ApolloMetricsGenerationMode",
      "description": "#/definitions/ApolloMetricsGenerationMode"
    },
    "experimental_chaos": {
      "$ref": "#/definitions/Chaos",
      "description": "#/definitions/Chaos"
    },
    "experimental_query_planner_mode": {
      "$ref": "#/definitions/QueryPlannerMode",
      "description": "#/definitions/QueryPlannerMode"
    },
    "experimental_type_conditioned_fetching": {
      "default": false,
      "description": "Type conditioned fetching configuration.",
      "type": "boolean"
    },
    "forbid_mutations": {
      "$ref": "#/definitions/ForbidMutationsConfig",
      "description": "#/definitions/ForbidMutationsConfig"
    },
    "headers": {
      "$ref": "#/definitions/Config4",
      "description": "#/definitions/Config4"
    },
    "health_check": {
      "$ref": "#/definitions/HealthCheck",
      "description": "#/definitions/HealthCheck"
    },
    "homepage": {
      "$ref": "#/definitions/Homepage",
      "description": "#/definitions/Homepage"
    },
    "include_subgraph_errors": {
      "$ref": "#/definitions/Config5",
      "description": "#/definitions/Config5"
    },
    "limits": {
      "$ref": "#/definitions/Limits",
      "description": "#/definitions/Limits"
    },
    "override_subgraph_url": {
      "$ref": "#/definitions/Conf5",
      "description": "#/definitions/Conf5"
    },
    "persisted_queries": {
      "$ref": "#/definitions/PersistedQueries",
      "description": "#/definitions/PersistedQueries"
    },
    "plugins": {
      "$ref": "#/definitions/Plugins",
      "description": "#/definitions/Plugins"
    },
    "preview_demand_control": {
      "$ref": "#/definitions/DemandControlConfig",
      "description": "#/definitions/DemandControlConfig"
    },
    "preview_entity_cache": {
      "$ref": "#/definitions/Config6",
      "description": "#/definitions/Config6"
    },
    "preview_file_uploads": {
      "$ref": "#/definitions/FileUploadsConfig",
      "description": "#/definitions/FileUploadsConfig"
    },
    "progressive_override": {
      "$ref": "#/definitions/Config7",
      "description": "#/definitions/Config7"
    },
    "rhai": {
      "$ref": "#/definitions/Conf6",
      "description": "#/definitions/Conf6"
    },
    "sandbox": {
      "$ref": "#/definitions/Sandbox",
      "description": "#/definitions/Sandbox"
    },
    "subscription": {
      "$ref": "#/definitions/SubscriptionConfig",
      "description": "#/definitions/SubscriptionConfig"
    },
    "supergraph": {
      "$ref": "#/definitions/Supergraph",
      "description": "#/definitions/Supergraph"
    },
    "telemetry": {
      "$ref": "#/definitions/Conf7",
      "description": "#/definitions/Conf7"
    },
    "tls": {
      "$ref": "#/definitions/Tls",
      "description": "#/definitions/Tls"
    },
    "traffic_shaping": {
      "$ref": "#/definitions/Config14",
      "description": "#/definitions/Config14"
    }
  },
  "title": "Configuration",
  "type": "object"
}
