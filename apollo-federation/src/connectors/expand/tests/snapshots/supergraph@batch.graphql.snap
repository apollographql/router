---
source: apollo-federation/src/connectors/expand/tests/mod.rs
expression: raw_sdl
input_file: apollo-federation/src/connectors/expand/tests/schemas/expand/batch.graphql
---
schema @link(url: "https://specs.apollo.dev/link/v1.0") @link(url: "https://specs.apollo.dev/join/v0.5", for: EXECUTION) @link(url: "https://specs.apollo.dev/inaccessible/v0.2", for: SECURITY) @join__directive(graphs: [], name: "link", args: {url: "https://specs.apollo.dev/connect/v0.2"}) @link(url: "https://specs.apollo.dev/connect/v0.2", for: EXECUTION) {
  query: Query
}

directive @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__type(graph: join__Graph!, key: join__FieldSet, extension: Boolean! = false, resolvable: Boolean! = true, isInterfaceObject: Boolean! = false) repeatable on ENUM | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION

directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean, override: String, overrideLabel: String, usedOverridden: Boolean, contextArguments: [join__ContextArgument!]) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on INTERFACE | OBJECT

directive @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION

directive @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE

directive @join__directive(graphs: [join__Graph!], name: String!, args: join__DirectiveArguments!) repeatable on SCHEMA | OBJECT | INTERFACE | FIELD_DEFINITION

directive @inaccessible on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

enum link__Purpose {
  """
  SECURITY features provide metadata necessary to securely resolve fields.
  """
  SECURITY
  """EXECUTION features provide metadata necessary for operation execution."""
  EXECUTION
}

scalar link__Import

scalar join__FieldSet

scalar join__FieldValue

input join__ContextArgument {
  name: String!
  type: String!
  context: String!
  selection: join__FieldValue!
}

scalar join__DirectiveArguments

enum join__Graph {
  ONE_QUERY_USERS_0 @join__graph(name: "one_Query_users_0", url: "http://none")
  ONE_USER_0 @join__graph(name: "one_User_0", url: "http://none")
}

type User @join__type(graph: ONE_QUERY_USERS_0) @join__type(graph: ONE_USER_0, key: "id") {
  id: ID! @join__field(graph: ONE_QUERY_USERS_0, type: "ID!") @join__field(graph: ONE_USER_0, type: "ID!")
  name: String @join__field(graph: ONE_USER_0, type: "String")
  username: String @join__field(graph: ONE_USER_0, type: "String")
}

type Query @join__type(graph: ONE_QUERY_USERS_0) @join__type(graph: ONE_USER_0) {
  users: [User!]! @join__field(graph: ONE_QUERY_USERS_0, type: "[User!]!")
  _: ID @inaccessible @join__field(graph: ONE_USER_0, type: "ID")
}
