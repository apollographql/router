---
source: apollo-federation/src/connectors/expand/tests/mod.rs
expression: connectors.by_service_name
input_file: apollo-federation/src/connectors/expand/tests/schemas/expand/steelthread.graphql
---
{
    "connectors_Query_users_0": Connector {
        id: ConnectId {
            subgraph_name: "connectors",
            source_name: Some(
                "json",
            ),
            named: None,
            directive: Field(
                ObjectOrInterfaceFieldDirectivePosition {
                    field: Object(Query.users),
                    directive_name: "connect",
                    directive_index: 0,
                },
            ),
            base_type_name: "User",
        },
        transport: HttpJsonTransport {
            source_template: Some(
                StringTemplate {
                    parts: [
                        Constant(
                            Constant {
                                value: "https://jsonplaceholder.typicode.com/",
                                location: 0..37,
                            },
                        ),
                    ],
                },
            ),
            connect_template: StringTemplate {
                parts: [
                    Constant(
                        Constant {
                            value: "/users",
                            location: 0..6,
                        },
                    ),
                ],
            },
            method: Get,
            headers: [],
            body: None,
            source_path: None,
            source_query_params: None,
            connect_path: None,
            connect_query_params: None,
        },
        selection: JSONSelection {
            inner: Named(
                SubSelection {
                    selections: [
                        NamedSelection {
                            prefix: None,
                            path: PathSelection {
                                path: WithRange {
                                    node: Key(
                                        WithRange {
                                            node: Field(
                                                "id",
                                            ),
                                            range: Some(
                                                0..2,
                                            ),
                                        },
                                        WithRange {
                                            node: Empty,
                                            range: Some(
                                                2..2,
                                            ),
                                        },
                                    ),
                                    range: Some(
                                        0..2,
                                    ),
                                },
                            },
                        },
                        NamedSelection {
                            prefix: None,
                            path: PathSelection {
                                path: WithRange {
                                    node: Key(
                                        WithRange {
                                            node: Field(
                                                "name",
                                            ),
                                            range: Some(
                                                3..7,
                                            ),
                                        },
                                        WithRange {
                                            node: Empty,
                                            range: Some(
                                                7..7,
                                            ),
                                        },
                                    ),
                                    range: Some(
                                        3..7,
                                    ),
                                },
                            },
                        },
                    ],
                    range: Some(
                        0..7,
                    ),
                },
            ),
            spec: V0_1,
        },
        config: None,
        max_requests: None,
        entity_resolver: None,
        spec: V0_1,
        schema_subtypes_map: {
            "_Entity": {
                "User",
            },
        },
        request_headers: {},
        response_headers: {},
        request_variable_keys: {},
        response_variable_keys: {},
        batch_settings: None,
        error_settings: ConnectorErrorsSettings {
            message: None,
            source_extensions: None,
            connect_extensions: None,
            connect_is_success: None,
        },
        label: Label(
            "connectors.json http: GET /users",
        ),
    },
    "connectors_Query_user_0": Connector {
        id: ConnectId {
            subgraph_name: "connectors",
            source_name: Some(
                "json",
            ),
            named: None,
            directive: Field(
                ObjectOrInterfaceFieldDirectivePosition {
                    field: Object(Query.user),
                    directive_name: "connect",
                    directive_index: 0,
                },
            ),
            base_type_name: "User",
        },
        transport: HttpJsonTransport {
            source_template: Some(
                StringTemplate {
                    parts: [
                        Constant(
                            Constant {
                                value: "https://jsonplaceholder.typicode.com/",
                                location: 0..37,
                            },
                        ),
                    ],
                },
            ),
            connect_template: StringTemplate {
                parts: [
                    Constant(
                        Constant {
                            value: "/users/",
                            location: 0..7,
                        },
                    ),
                    Expression(
                        Expression {
                            expression: JSONSelection {
                                inner: Path(
                                    PathSelection {
                                        path: WithRange {
                                            node: Var(
                                                WithRange {
                                                    node: $args,
                                                    range: Some(
                                                        0..5,
                                                    ),
                                                },
                                                WithRange {
                                                    node: Key(
                                                        WithRange {
                                                            node: Field(
                                                                "id",
                                                            ),
                                                            range: Some(
                                                                6..8,
                                                            ),
                                                        },
                                                        WithRange {
                                                            node: Empty,
                                                            range: Some(
                                                                8..8,
                                                            ),
                                                        },
                                                    ),
                                                    range: Some(
                                                        5..8,
                                                    ),
                                                },
                                            ),
                                            range: Some(
                                                0..8,
                                            ),
                                        },
                                    },
                                ),
                                spec: V0_1,
                            },
                            location: 8..16,
                        },
                    ),
                ],
            },
            method: Get,
            headers: [],
            body: None,
            source_path: None,
            source_query_params: None,
            connect_path: None,
            connect_query_params: None,
        },
        selection: JSONSelection {
            inner: Named(
                SubSelection {
                    selections: [
                        NamedSelection {
                            prefix: None,
                            path: PathSelection {
                                path: WithRange {
                                    node: Key(
                                        WithRange {
                                            node: Field(
                                                "id",
                                            ),
                                            range: Some(
                                                0..2,
                                            ),
                                        },
                                        WithRange {
                                            node: Empty,
                                            range: Some(
                                                2..2,
                                            ),
                                        },
                                    ),
                                    range: Some(
                                        0..2,
                                    ),
                                },
                            },
                        },
                        NamedSelection {
                            prefix: None,
                            path: PathSelection {
                                path: WithRange {
                                    node: Key(
                                        WithRange {
                                            node: Field(
                                                "name",
                                            ),
                                            range: Some(
                                                3..7,
                                            ),
                                        },
                                        WithRange {
                                            node: Empty,
                                            range: Some(
                                                7..7,
                                            ),
                                        },
                                    ),
                                    range: Some(
                                        3..7,
                                    ),
                                },
                            },
                        },
                        NamedSelection {
                            prefix: None,
                            path: PathSelection {
                                path: WithRange {
                                    node: Key(
                                        WithRange {
                                            node: Field(
                                                "username",
                                            ),
                                            range: Some(
                                                8..16,
                                            ),
                                        },
                                        WithRange {
                                            node: Empty,
                                            range: Some(
                                                16..16,
                                            ),
                                        },
                                    ),
                                    range: Some(
                                        8..16,
                                    ),
                                },
                            },
                        },
                    ],
                    range: Some(
                        0..16,
                    ),
                },
            ),
            spec: V0_1,
        },
        config: None,
        max_requests: None,
        entity_resolver: Some(
            Explicit,
        ),
        spec: V0_1,
        schema_subtypes_map: {
            "_Entity": {
                "User",
            },
        },
        request_headers: {},
        response_headers: {},
        request_variable_keys: {
            $args: {
                "id",
            },
        },
        response_variable_keys: {},
        batch_settings: None,
        error_settings: ConnectorErrorsSettings {
            message: None,
            source_extensions: None,
            connect_extensions: None,
            connect_is_success: None,
        },
        label: Label(
            "connectors.json http: GET /users/{$args.id}",
        ),
    },
    "connectors_User_d_1": Connector {
        id: ConnectId {
            subgraph_name: "connectors",
            source_name: Some(
                "json",
            ),
            named: None,
            directive: Field(
                ObjectOrInterfaceFieldDirectivePosition {
                    field: Object(User.d),
                    directive_name: "connect",
                    directive_index: 1,
                },
            ),
            base_type_name: "String",
        },
        transport: HttpJsonTransport {
            source_template: Some(
                StringTemplate {
                    parts: [
                        Constant(
                            Constant {
                                value: "https://jsonplaceholder.typicode.com/",
                                location: 0..37,
                            },
                        ),
                    ],
                },
            ),
            connect_template: StringTemplate {
                parts: [
                    Constant(
                        Constant {
                            value: "/users/",
                            location: 0..7,
                        },
                    ),
                    Expression(
                        Expression {
                            expression: JSONSelection {
                                inner: Path(
                                    PathSelection {
                                        path: WithRange {
                                            node: Var(
                                                WithRange {
                                                    node: $this,
                                                    range: Some(
                                                        0..5,
                                                    ),
                                                },
                                                WithRange {
                                                    node: Key(
                                                        WithRange {
                                                            node: Field(
                                                                "c",
                                                            ),
                                                            range: Some(
                                                                6..7,
                                                            ),
                                                        },
                                                        WithRange {
                                                            node: Empty,
                                                            range: Some(
                                                                7..7,
                                                            ),
                                                        },
                                                    ),
                                                    range: Some(
                                                        5..7,
                                                    ),
                                                },
                                            ),
                                            range: Some(
                                                0..7,
                                            ),
                                        },
                                    },
                                ),
                                spec: V0_1,
                            },
                            location: 8..15,
                        },
                    ),
                ],
            },
            method: Get,
            headers: [],
            body: None,
            source_path: None,
            source_query_params: None,
            connect_path: None,
            connect_query_params: None,
        },
        selection: JSONSelection {
            inner: Path(
                PathSelection {
                    path: WithRange {
                        node: Var(
                            WithRange {
                                node: $,
                                range: Some(
                                    0..1,
                                ),
                            },
                            WithRange {
                                node: Key(
                                    WithRange {
                                        node: Field(
                                            "phone",
                                        ),
                                        range: Some(
                                            2..7,
                                        ),
                                    },
                                    WithRange {
                                        node: Empty,
                                        range: Some(
                                            7..7,
                                        ),
                                    },
                                ),
                                range: Some(
                                    1..7,
                                ),
                            },
                        ),
                        range: Some(
                            0..7,
                        ),
                    },
                },
            ),
            spec: V0_1,
        },
        config: None,
        max_requests: None,
        entity_resolver: Some(
            Implicit,
        ),
        spec: V0_1,
        schema_subtypes_map: {
            "_Entity": {
                "User",
            },
        },
        request_headers: {},
        response_headers: {},
        request_variable_keys: {
            $this: {
                "c",
            },
        },
        response_variable_keys: {},
        batch_settings: None,
        error_settings: ConnectorErrorsSettings {
            message: None,
            source_extensions: None,
            connect_extensions: None,
            connect_is_success: None,
        },
        label: Label(
            "connectors.json http: GET /users/{$this.c}",
        ),
    },
}
