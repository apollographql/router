---
source: apollo-router/src/configuration/mod.rs
assertion_line: 358
expression: "&schema"
---
{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "title": "Configuration",
  "description": "The configuration for the router. Currently maintains a mapping of subgraphs.",
  "type": "object",
  "properties": {
    "plugins": {
      "description": "Plugin configuration",
      "default": {},
      "$ref": "#/definitions/Plugins"
    },
    "server": {
      "description": "Configuration options pertaining to the http server component.",
      "default": {
        "listen": "127.0.0.1:4000",
        "cors": null
      },
      "$ref": "#/definitions/Server"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "Conf": {
      "type": "object",
      "properties": {
        "graph": {
          "$ref": "#/definitions/StudioGraph",
          "nullable": true
        },
        "opentelemetry": {
          "$ref": "#/definitions/OpenTelemetry",
          "nullable": true
        },
        "opentracing": {
          "$ref": "#/definitions/OpenTracingConfig",
          "nullable": true
        },
        "spaceport": {
          "$ref": "#/definitions/SpaceportConfig",
          "nullable": true
        }
      }
    },
    "Config": {
      "type": "object",
      "properties": {
        "all": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "subgraphs": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Operation"
            }
          }
        }
      },
      "additionalProperties": false
    },
    "Cors": {
      "description": "Cross origin request configuration.",
      "type": "object",
      "properties": {
        "allow_any_origin": {
          "description": "Set to false to disallow any origin and rely exclusively on `origins`.\n\n/!\\ Defaults to true Having this set to true is the only way to allow Origin: null.",
          "default": null,
          "type": "boolean",
          "nullable": true
        },
        "allow_credentials": {
          "description": "Set to true to add the `Access-Control-Allow-Credentials` header.",
          "default": null,
          "type": "boolean",
          "nullable": true
        },
        "allow_headers": {
          "description": "The headers to allow. Defaults to the required request header for Apollo Studio",
          "default": [
            "Content-Type"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expose_headers": {
          "description": "Which response headers should be made available to scripts running in the browser, in response to a cross-origin request.",
          "default": null,
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true
        },
        "methods": {
          "description": "Allowed request methods. Defaults to GET, POST, OPTIONS.",
          "default": [
            "GET",
            "POST",
            "OPTIONS"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origins": {
          "description": "The origin(s) to allow requests from. Use `https://studio.apollographql.com/` to allow Apollo Studio to function.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "Exporter": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "grpc"
          ],
          "properties": {
            "grpc": {
              "$ref": "#/definitions/GrpcExporter",
              "nullable": true
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "GrpcExporter": {
      "type": "object",
      "required": [
        "protocol"
      ],
      "properties": {
        "endpoint": {
          "default": null,
          "type": "string",
          "format": "uri",
          "nullable": true
        },
        "metadata": {
          "default": null,
          "type": "object",
          "additionalProperties": true,
          "nullable": true
        },
        "protocol": {
          "$ref": "#/definitions/ProtocolMirror",
          "nullable": true
        },
        "timeout": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0,
          "nullable": true
        },
        "tls_config": {
          "$ref": "#/definitions/TlsConfig",
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "Insert": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Jaeger": {
      "type": "object",
      "properties": {
        "endpoint": {
          "$ref": "#/definitions/JaegerEndpoint",
          "nullable": true
        },
        "service_name": {
          "default": "router",
          "type": "string"
        },
        "trace_config": {
          "$ref": "#/definitions/TraceConfig",
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "JaegerEndpoint": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "agent"
          ],
          "properties": {
            "agent": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "collector"
          ],
          "properties": {
            "collector": {
              "type": "string",
              "format": "uri"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ListenAddr": {
      "description": "Listening address.",
      "anyOf": [
        {
          "description": "Socket address.",
          "type": "string"
        },
        {
          "description": "Unix socket.",
          "type": "string"
        }
      ]
    },
    "OpenTelemetry": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "jaeger"
          ],
          "properties": {
            "jaeger": {
              "$ref": "#/definitions/Jaeger",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "otlp"
          ],
          "properties": {
            "otlp": {
              "$ref": "#/definitions/Otlp"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "OpenTracingConfig": {
      "type": "object",
      "required": [
        "format"
      ],
      "properties": {
        "format": {
          "$ref": "#/definitions/PropagationFormat"
        }
      }
    },
    "Operation": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "insert"
          ],
          "properties": {
            "insert": {
              "$ref": "#/definitions/Insert"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "remove"
          ],
          "properties": {
            "remove": {
              "$ref": "#/definitions/Remove"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "propagate"
          ],
          "properties": {
            "propagate": {
              "$ref": "#/definitions/Propagate"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Otlp": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "tracing"
          ],
          "properties": {
            "tracing": {
              "$ref": "#/definitions/Tracing",
              "nullable": true
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Plugins": {
      "anyOf": [
        {
          "required": [
            "apollo.headers"
          ]
        },
        {
          "required": [
            "apollo.override_subgraph_url"
          ]
        },
        {
          "required": [
            "apollo.reporting"
          ]
        },
        {
          "required": [
            "apollo.test.always_fails_to_start"
          ]
        },
        {
          "required": [
            "apollo.test.always_fails_to_start_and_stop"
          ]
        },
        {
          "required": [
            "apollo.test.always_fails_to_stop"
          ]
        },
        {
          "required": [
            "apollo.test.always_starts_and_stops"
          ]
        },
        {
          "required": [
            "com.example.hello"
          ]
        }
      ],
      "properties": {
        "apollo.headers": {
          "$ref": "#/definitions/Config"
        },
        "apollo.override_subgraph_url": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "uri"
          }
        },
        "apollo.reporting": {
          "$ref": "#/definitions/Conf"
        },
        "apollo.test.always_fails_to_start": {
          "$ref": "#/definitions/Conf"
        },
        "apollo.test.always_fails_to_start_and_stop": {
          "$ref": "#/definitions/Conf"
        },
        "apollo.test.always_fails_to_stop": {
          "$ref": "#/definitions/Conf"
        },
        "apollo.test.always_starts_and_stops": {
          "$ref": "#/definitions/Conf"
        },
        "com.example.hello": {
          "$ref": "#/definitions/Conf"
        }
      }
    },
    "Propagate": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "matching"
          ],
          "properties": {
            "matching": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "default",
            "named",
            "rename"
          ],
          "properties": {
            "default": {
              "type": "string",
              "nullable": true
            },
            "named": {
              "type": "string"
            },
            "rename": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "PropagationFormat": {
      "type": "string",
      "enum": [
        "jaeger",
        "zipkin_b3"
      ]
    },
    "ProtocolMirror": {
      "type": "string",
      "enum": [
        "Grpc",
        "HttpBinary"
      ]
    },
    "Remove": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "matching"
          ],
          "properties": {
            "matching": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "SamplerMirror": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "AlwaysOn",
            "AlwaysOff"
          ]
        },
        {
          "description": "Respects the parent span's sampling decision or delegates a delegate sampler for root spans. Not supported via yaml config Sample a given fraction of traces. Fractions >= 1 will always sample. If the parent span is sampled, then it's child spans will automatically be sampled. Fractions < 0 are treated as zero, but spans may still be sampled if their parent is.",
          "type": "object",
          "required": [
            "TraceIdRatioBased"
          ],
          "properties": {
            "TraceIdRatioBased": {
              "type": "number",
              "format": "double"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Secret": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "env"
          ],
          "properties": {
            "env": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "file"
          ],
          "properties": {
            "file": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Server": {
      "description": "Configuration options pertaining to the http server component.",
      "type": "object",
      "properties": {
        "cors": {
          "description": "Cross origin request headers.",
          "default": null,
          "$ref": "#/definitions/Cors",
          "nullable": true
        },
        "listen": {
          "description": "The socket address and port to listen on Defaults to 127.0.0.1:4000",
          "default": "127.0.0.1:4000",
          "$ref": "#/definitions/ListenAddr"
        }
      },
      "additionalProperties": false
    },
    "SpaceportConfig": {
      "type": "object",
      "required": [
        "external"
      ],
      "properties": {
        "collector": {
          "default": "https://127.0.0.1:50051",
          "type": "string"
        },
        "external": {
          "type": "boolean"
        },
        "listener": {
          "default": "127.0.0.1:50051",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "StudioGraph": {
      "type": "object"
    },
    "TlsConfig": {
      "type": "object",
      "properties": {
        "ca": {
          "$ref": "#/definitions/Secret",
          "nullable": true
        },
        "cert": {
          "$ref": "#/definitions/Secret",
          "nullable": true
        },
        "domain_name": {
          "type": "string",
          "nullable": true
        },
        "key": {
          "$ref": "#/definitions/Secret",
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "TraceConfig": {
      "type": "object",
      "required": [
        "resource",
        "sampler"
      ],
      "properties": {
        "max_attributes_per_event": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0,
          "nullable": true
        },
        "max_attributes_per_link": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0,
          "nullable": true
        },
        "max_attributes_per_span": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0,
          "nullable": true
        },
        "max_events_per_span": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0,
          "nullable": true
        },
        "max_links_per_span": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0,
          "nullable": true
        },
        "resource": {
          "type": "object",
          "additionalProperties": true,
          "nullable": true
        },
        "sampler": {
          "$ref": "#/definitions/SamplerMirror",
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "Tracing": {
      "type": "object",
      "required": [
        "exporter"
      ],
      "properties": {
        "exporter": {
          "$ref": "#/definitions/Exporter"
        },
        "trace_config": {
          "$ref": "#/definitions/TraceConfig",
          "nullable": true
        }
      },
      "additionalProperties": false
    }
  }
}
