---
source: apollo-router/src/configuration/tests.rs
expression: "&schema"
---
{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "title": "Configuration",
  "description": "The configuration for the router.\n\nCan be created through `serde::Deserialize` from various formats, or inline in Rust code with `serde_json::json!` and `serde_json::from_value`.",
  "type": "object",
  "properties": {
    "authentication": {
      "description": "Authentication",
      "type": "object",
      "required": [
        "experimental"
      ],
      "properties": {
        "experimental": {
          "description": "The experimental configuration",
          "type": "object",
          "required": [
            "jwt"
          ],
          "properties": {
            "jwt": {
              "description": "The JWT configuration",
              "type": "object",
              "required": [
                "jwks_urls"
              ],
              "properties": {
                "cooldown": {
                  "description": "JWKS retrieval cooldown",
                  "default": null,
                  "type": "string"
                },
                "header_name": {
                  "description": "HTTP header expected to contain JWT",
                  "default": "authorization",
                  "type": "string"
                },
                "header_value_prefix": {
                  "description": "Header value prefix",
                  "default": "Bearer",
                  "type": "string"
                },
                "jwks_urls": {
                  "description": "Retrieve our JWK Sets from these locations",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "cors": {
      "description": "Cross origin request headers.",
      "default": {
        "allow_any_origin": false,
        "allow_credentials": false,
        "allow_headers": [],
        "expose_headers": null,
        "origins": [
          "https://studio.apollographql.com"
        ],
        "match_origins": null,
        "methods": [
          "GET",
          "POST",
          "OPTIONS"
        ],
        "max_age": null
      },
      "type": "object",
      "properties": {
        "allow_any_origin": {
          "description": "Set to true to allow any origin.\n\nDefaults to false Having this set to true is the only way to allow Origin: null.",
          "default": false,
          "type": "boolean"
        },
        "allow_credentials": {
          "description": "Set to true to add the `Access-Control-Allow-Credentials` header.",
          "default": false,
          "type": "boolean"
        },
        "allow_headers": {
          "description": "The headers to allow.\n\nIf this value is not set, the router will mirror client's `Access-Control-Request-Headers`.\n\nNote that if you set headers here, you also want to have a look at your `CSRF` plugins configuration, and make sure you either: - accept `x-apollo-operation-name` AND / OR `apollo-require-preflight` - defined `csrf` required headers in your yml configuration, as shown in the `examples/cors-and-csrf/custom-headers.router.yaml` files.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expose_headers": {
          "description": "Which response headers should be made available to scripts running in the browser, in response to a cross-origin request.",
          "default": null,
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true
        },
        "match_origins": {
          "description": "`Regex`es you want to match the origins against to determine if they're allowed. Defaults to an empty list. Note that `origins` will be evaluated before `match_origins`",
          "default": null,
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true
        },
        "max_age": {
          "description": "The `Access-Control-Max-Age` header value in time units",
          "default": null,
          "type": "string"
        },
        "methods": {
          "description": "Allowed request methods. Defaults to GET, POST, OPTIONS.",
          "default": [
            "GET",
            "POST",
            "OPTIONS"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origins": {
          "description": "The origin(s) to allow requests from. Defaults to `https://studio.apollographql.com/` for Apollo Studio.",
          "default": [
            "https://studio.apollographql.com"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "csrf": {
      "description": "CSRF Configuration.",
      "type": "object",
      "properties": {
        "required_headers": {
          "description": "Override the headers to check for by setting custom_headers Note that if you set required_headers here, you may also want to have a look at your `CORS` configuration, and make sure you either: - did not set any `allow_headers` list (so it defaults to `mirror_request`) - added your required headers to the allow_headers list, as shown in the `examples/cors-and-csrf/custom-headers.router.yaml` files.",
          "default": [
            "x-apollo-operation-name",
            "apollo-require-preflight"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unsafe_disabled": {
          "description": "The CSRF plugin is enabled by default; set unsafe_disabled = true to disable the plugin behavior Note that setting this to true is deemed unsafe. See <https://developer.mozilla.org/en-US/docs/Glossary/CSRF>.",
          "default": false,
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "forbid_mutations": {
      "description": "Forbid mutations configuration",
      "type": "boolean"
    },
    "headers": {
      "description": "Configuration for header propagation",
      "type": "object",
      "properties": {
        "all": {
          "description": "Rules to apply to all subgraphs",
          "type": "object",
          "required": [
            "request"
          ],
          "properties": {
            "request": {
              "description": "Propagate/Insert/Remove headers from request",
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": [
                      "insert"
                    ],
                    "properties": {
                      "insert": {
                        "description": "Insert header",
                        "anyOf": [
                          {
                            "description": "Insert static header",
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "description": "The name of the header",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value for the header",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "description": "Insert header with a value coming from context key (works only for a string in the context)",
                            "type": "object",
                            "required": [
                              "from_context",
                              "name"
                            ],
                            "properties": {
                              "from_context": {
                                "description": "Specify context key to fetch value",
                                "type": "string"
                              },
                              "name": {
                                "description": "Specify header name",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "description": "Insert header with a value coming from body",
                            "type": "object",
                            "required": [
                              "name",
                              "path"
                            ],
                            "properties": {
                              "default": {
                                "description": "The default if the path in the body did not resolve to an element",
                                "type": "string",
                                "nullable": true
                              },
                              "name": {
                                "description": "The target header name",
                                "type": "string"
                              },
                              "path": {
                                "description": "The path in the request body",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "remove"
                    ],
                    "properties": {
                      "remove": {
                        "description": "Remove header",
                        "oneOf": [
                          {
                            "description": "Remove a header given a header name",
                            "type": "object",
                            "required": [
                              "named"
                            ],
                            "properties": {
                              "named": {
                                "description": "Remove a header given a header name",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "description": "Remove a header given a regex matching header name",
                            "type": "object",
                            "required": [
                              "matching"
                            ],
                            "properties": {
                              "matching": {
                                "description": "Remove a header given a regex matching against the header name",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "propagate"
                    ],
                    "properties": {
                      "propagate": {
                        "description": "Propagate header",
                        "anyOf": [
                          {
                            "description": "Propagate header given a header name",
                            "type": "object",
                            "required": [
                              "named"
                            ],
                            "properties": {
                              "default": {
                                "description": "Default value for the header.",
                                "type": "string",
                                "nullable": true
                              },
                              "named": {
                                "description": "The source header name",
                                "type": "string"
                              },
                              "rename": {
                                "description": "An optional target header name",
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "description": "Propagate header given a regex to match header name",
                            "type": "object",
                            "required": [
                              "matching"
                            ],
                            "properties": {
                              "matching": {
                                "description": "The regex on header name",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                ]
              }
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "subgraphs": {
          "description": "Rules to specific subgraphs",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "required": [
              "request"
            ],
            "properties": {
              "request": {
                "description": "Propagate/Insert/Remove headers from request",
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "required": [
                        "insert"
                      ],
                      "properties": {
                        "insert": {
                          "description": "Insert header",
                          "anyOf": [
                            {
                              "description": "Insert static header",
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "description": "The name of the header",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The value for the header",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "description": "Insert header with a value coming from context key (works only for a string in the context)",
                              "type": "object",
                              "required": [
                                "from_context",
                                "name"
                              ],
                              "properties": {
                                "from_context": {
                                  "description": "Specify context key to fetch value",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Specify header name",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "description": "Insert header with a value coming from body",
                              "type": "object",
                              "required": [
                                "name",
                                "path"
                              ],
                              "properties": {
                                "default": {
                                  "description": "The default if the path in the body did not resolve to an element",
                                  "type": "string",
                                  "nullable": true
                                },
                                "name": {
                                  "description": "The target header name",
                                  "type": "string"
                                },
                                "path": {
                                  "description": "The path in the request body",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "required": [
                        "remove"
                      ],
                      "properties": {
                        "remove": {
                          "description": "Remove header",
                          "oneOf": [
                            {
                              "description": "Remove a header given a header name",
                              "type": "object",
                              "required": [
                                "named"
                              ],
                              "properties": {
                                "named": {
                                  "description": "Remove a header given a header name",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "description": "Remove a header given a regex matching header name",
                              "type": "object",
                              "required": [
                                "matching"
                              ],
                              "properties": {
                                "matching": {
                                  "description": "Remove a header given a regex matching against the header name",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "required": [
                        "propagate"
                      ],
                      "properties": {
                        "propagate": {
                          "description": "Propagate header",
                          "anyOf": [
                            {
                              "description": "Propagate header given a header name",
                              "type": "object",
                              "required": [
                                "named"
                              ],
                              "properties": {
                                "default": {
                                  "description": "Default value for the header.",
                                  "type": "string",
                                  "nullable": true
                                },
                                "named": {
                                  "description": "The source header name",
                                  "type": "string"
                                },
                                "rename": {
                                  "description": "An optional target header name",
                                  "type": "string",
                                  "nullable": true
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "description": "Propagate header given a regex to match header name",
                              "type": "object",
                              "required": [
                                "matching"
                              ],
                              "properties": {
                                "matching": {
                                  "description": "The regex on header name",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                }
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "health_check": {
      "description": "Health check configuration",
      "default": {
        "listen": "127.0.0.1:8088",
        "enabled": true
      },
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Set to false to disable the health check endpoint",
          "default": true,
          "type": "boolean"
        },
        "listen": {
          "description": "The socket address and port to listen on Defaults to 127.0.0.1:8088",
          "default": "127.0.0.1:8088",
          "anyOf": [
            {
              "description": "Socket address.",
              "type": "string"
            },
            {
              "description": "Unix socket.",
              "type": "string"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "homepage": {
      "description": "Homepage configuration",
      "default": {
        "enabled": true
      },
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Set to false to disable the homepage",
          "default": true,
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "include_subgraph_errors": {
      "description": "Configuration for exposing errors that originate from subgraphs",
      "type": "object",
      "properties": {
        "all": {
          "description": "Include errors from all subgraphs",
          "default": false,
          "type": "boolean"
        },
        "subgraphs": {
          "description": "Include errors from specific subgraphs",
          "default": {},
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "additionalProperties": false
    },
    "override_subgraph_url": {
      "description": "Subgraph URL mappings",
      "anyOf": [
        {
          "description": "Subgraph URL mappings",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "uri"
          }
        }
      ]
    },
    "plugins": {
      "description": "Plugin configuration",
      "default": null,
      "properties": {
        "experimental.expose_query_plan": {
          "description": "Expose query plan",
          "type": "boolean"
        },
        "experimental.external": {
          "description": "Configures the externalization plugin",
          "type": "object",
          "required": [
            "url"
          ],
          "properties": {
            "stages": {
              "description": "The stages request/response configuration",
              "default": null,
              "type": "object",
              "properties": {
                "router": {
                  "description": "The router stage",
                  "default": null,
                  "type": "object",
                  "properties": {
                    "request": {
                      "description": "The request configuration",
                      "default": null,
                      "type": "object",
                      "properties": {
                        "body": {
                          "description": "Send the body",
                          "default": false,
                          "type": "boolean"
                        },
                        "context": {
                          "description": "Send the context",
                          "default": false,
                          "type": "boolean"
                        },
                        "headers": {
                          "description": "Send the headers",
                          "default": false,
                          "type": "boolean"
                        },
                        "sdl": {
                          "description": "Send the SDL",
                          "default": false,
                          "type": "boolean"
                        }
                      },
                      "nullable": true
                    },
                    "response": {
                      "description": "The response configuration",
                      "default": null,
                      "type": "object",
                      "properties": {
                        "body": {
                          "description": "Send the body",
                          "default": false,
                          "type": "boolean"
                        },
                        "context": {
                          "description": "Send the context",
                          "default": false,
                          "type": "boolean"
                        },
                        "headers": {
                          "description": "Send the headers",
                          "default": false,
                          "type": "boolean"
                        },
                        "sdl": {
                          "description": "Send the SDL",
                          "default": false,
                          "type": "boolean"
                        }
                      },
                      "nullable": true
                    }
                  },
                  "nullable": true
                }
              },
              "nullable": true
            },
            "timeout": {
              "description": "The timeout for external requests",
              "default": null,
              "type": "string"
            },
            "url": {
              "description": "The url you'd like to offload processing to",
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    "rhai": {
      "description": "Configuration for the Rhai Plugin",
      "type": "object",
      "properties": {
        "main": {
          "description": "The main entry point for Rhai script evaluation",
          "type": "string",
          "nullable": true
        },
        "scripts": {
          "description": "The directory where Rhai scripts can be found",
          "type": "string",
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "sandbox": {
      "description": "Sandbox configuration",
      "default": {
        "enabled": false
      },
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Set to true to enable sandbox",
          "default": false,
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "server": {
      "description": "Configuration options pertaining to the http server component.",
      "default": {
        "experimental_parser_recursion_limit": 4096
      },
      "type": "object",
      "properties": {
        "experimental_parser_recursion_limit": {
          "description": "Experimental limitation of query depth default: 4096",
          "default": 4096,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    "supergraph": {
      "description": "Configuration for the supergraph",
      "default": {
        "listen": "127.0.0.1:4000",
        "path": "/",
        "introspection": false,
        "defer_support": true,
        "apq": {
          "enabled": true,
          "experimental_cache": {
            "in_memory": {
              "limit": 512
            },
            "redis": null
          },
          "subgraph": {
            "all": {
              "enabled": false
            },
            "subgraphs": {}
          }
        },
        "query_planning": {
          "experimental_cache": {
            "in_memory": {
              "limit": 512
            },
            "redis": null
          },
          "warmed_up_queries": 0
        }
      },
      "type": "object",
      "properties": {
        "apq": {
          "description": "Configures automatic persisted queries",
          "default": {
            "enabled": true,
            "experimental_cache": {
              "in_memory": {
                "limit": 512
              },
              "redis": null
            },
            "subgraph": {
              "all": {
                "enabled": false
              },
              "subgraphs": {}
            }
          },
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Activates Automatic Persisted Queries (enabled by default)",
              "default": true,
              "type": "boolean"
            },
            "experimental_cache": {
              "description": "Cache configuration",
              "default": {
                "in_memory": {
                  "limit": 512
                },
                "redis": null
              },
              "type": "object",
              "required": [
                "in_memory"
              ],
              "properties": {
                "in_memory": {
                  "description": "Configures the in memory cache (always active)",
                  "type": "object",
                  "required": [
                    "limit"
                  ],
                  "properties": {
                    "limit": {
                      "description": "Number of entries in the Least Recently Used cache",
                      "type": "integer",
                      "format": "uint",
                      "minimum": 1.0
                    }
                  },
                  "additionalProperties": false
                },
                "redis": {
                  "description": "Configures and activates the Redis cache",
                  "type": "object",
                  "required": [
                    "urls"
                  ],
                  "properties": {
                    "urls": {
                      "description": "List of URLs to the Redis cluster",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false,
                  "nullable": true
                }
              },
              "additionalProperties": false
            },
            "subgraph": {
              "description": "Configuration options pertaining to the subgraph server component.",
              "default": {
                "all": {
                  "enabled": false
                },
                "subgraphs": {}
              },
              "type": "object",
              "properties": {
                "all": {
                  "description": "options applying to all subgraphs",
                  "default": {
                    "enabled": false
                  },
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "Enable",
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "subgraphs": {
                  "description": "per subgraph options",
                  "default": {},
                  "type": "object",
                  "additionalProperties": {
                    "description": "Subgraph level Automatic Persisted Queries (APQ) configuration",
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "description": "Enable",
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "defer_support": {
          "description": "Set to false to disable defer support",
          "default": true,
          "type": "boolean"
        },
        "introspection": {
          "description": "Enable introspection Default: false",
          "default": false,
          "type": "boolean"
        },
        "listen": {
          "description": "The socket address and port to listen on Defaults to 127.0.0.1:4000",
          "default": "127.0.0.1:4000",
          "anyOf": [
            {
              "description": "Socket address.",
              "type": "string"
            },
            {
              "description": "Unix socket.",
              "type": "string"
            }
          ]
        },
        "path": {
          "description": "The HTTP path on which GraphQL requests will be served. default: \"/\"",
          "default": "/",
          "type": "string"
        },
        "query_planning": {
          "description": "Query planning options",
          "default": {
            "experimental_cache": {
              "in_memory": {
                "limit": 512
              },
              "redis": null
            },
            "warmed_up_queries": 0
          },
          "type": "object",
          "required": [
            "experimental_cache"
          ],
          "properties": {
            "experimental_cache": {
              "description": "Cache configuration",
              "type": "object",
              "required": [
                "in_memory"
              ],
              "properties": {
                "in_memory": {
                  "description": "Configures the in memory cache (always active)",
                  "type": "object",
                  "required": [
                    "limit"
                  ],
                  "properties": {
                    "limit": {
                      "description": "Number of entries in the Least Recently Used cache",
                      "type": "integer",
                      "format": "uint",
                      "minimum": 1.0
                    }
                  },
                  "additionalProperties": false
                },
                "redis": {
                  "description": "Configures and activates the Redis cache",
                  "type": "object",
                  "required": [
                    "urls"
                  ],
                  "properties": {
                    "urls": {
                      "description": "List of URLs to the Redis cluster",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false,
                  "nullable": true
                }
              },
              "additionalProperties": false
            },
            "warmed_up_queries": {
              "description": "Warm up the cache on reloads by running the query plan over a list of the most used queries Defaults to 0 (do not warm up the cache)",
              "default": 0,
              "type": "integer",
              "format": "uint",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "telemetry": {
      "description": "Telemetry configuration",
      "type": "object",
      "properties": {
        "apollo": {
          "description": "Apollo reporting configuration",
          "type": "object",
          "properties": {
            "batch_processor": {
              "description": "Configuration for batch processing.",
              "default": {
                "scheduled_delay": {
                  "secs": 5,
                  "nanos": 0
                },
                "max_queue_size": 2048,
                "max_export_batch_size": 512,
                "max_export_timeout": {
                  "secs": 30,
                  "nanos": 0
                },
                "max_concurrent_exports": 1
              },
              "type": "object",
              "properties": {
                "max_concurrent_exports": {
                  "description": "Maximum number of concurrent exports\n\nLimits the number of spawned tasks for exports and thus memory consumed by an exporter. A value of 1 will cause exports to be performed synchronously on the BatchSpanProcessor task. The default is 1.",
                  "default": 1,
                  "type": "integer",
                  "format": "uint",
                  "minimum": 0.0
                },
                "max_export_batch_size": {
                  "description": "The maximum number of spans to process in a single batch. If there are more than one batch worth of spans then it processes multiple batches of spans one batch after the other without any delay. The default value is 512.",
                  "default": 512,
                  "type": "integer",
                  "format": "uint",
                  "minimum": 0.0
                },
                "max_export_timeout": {
                  "description": "The maximum duration to export a batch of data. The default value is 30 seconds.",
                  "default": {
                    "secs": 30,
                    "nanos": 0
                  },
                  "type": "string"
                },
                "max_queue_size": {
                  "description": "The maximum queue size to buffer spans for delayed processing. If the queue gets full it drops the spans. The default value of is 2048.",
                  "default": 2048,
                  "type": "integer",
                  "format": "uint",
                  "minimum": 0.0
                },
                "scheduled_delay": {
                  "description": "The delay interval in milliseconds between two consecutive processing of batches. The default value is 5 seconds.",
                  "default": {
                    "secs": 5,
                    "nanos": 0
                  },
                  "type": "string"
                }
              }
            },
            "buffer_size": {
              "description": "The buffer size for sending traces to Apollo. Increase this if you are experiencing lost traces.",
              "default": 10000,
              "type": "integer",
              "format": "uint",
              "minimum": 1.0
            },
            "client_name_header": {
              "description": "The name of the header to extract from requests when populating 'client nane' for traces and metrics in Apollo Studio.",
              "default": "apollographql-client-name",
              "type": "string",
              "nullable": true
            },
            "client_version_header": {
              "description": "The name of the header to extract from requests when populating 'client version' for traces and metrics in Apollo Studio.",
              "default": "apollographql-client-version",
              "type": "string",
              "nullable": true
            },
            "endpoint": {
              "description": "The Apollo Studio endpoint for exporting traces and metrics.",
              "default": "https://usage-reporting.api.apollographql.com/api/ingress/traces",
              "type": "string"
            },
            "field_level_instrumentation_sampler": {
              "description": "Enable field level instrumentation for subgraphs via ftv1. ftv1 tracing can cause performance issues as it is transmitted in band with subgraph responses. 0.0 will result in no field level instrumentation. 1.0 will result in always instrumentation. Value MUST be less than global sampling rate",
              "anyOf": [
                {
                  "description": "Sample a given fraction. Fractions >= 1 will always sample.",
                  "type": "number",
                  "format": "double"
                },
                {
                  "oneOf": [
                    {
                      "description": "Always sample",
                      "type": "string",
                      "enum": [
                        "always_on"
                      ]
                    },
                    {
                      "description": "Never sample",
                      "type": "string",
                      "enum": [
                        "always_off"
                      ]
                    }
                  ]
                }
              ]
            },
            "send_headers": {
              "description": "To configure which request header names and values are included in trace data that's sent to Apollo Studio.",
              "oneOf": [
                {
                  "description": "Don't send any headers",
                  "type": "string",
                  "enum": [
                    "none"
                  ]
                },
                {
                  "description": "Send all headers",
                  "type": "string",
                  "enum": [
                    "all"
                  ]
                },
                {
                  "description": "Send only the headers specified",
                  "type": "object",
                  "required": [
                    "only"
                  ],
                  "properties": {
                    "only": {
                      "description": "Send only the headers specified",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "description": "Send all headers except those specified",
                  "type": "object",
                  "required": [
                    "except"
                  ],
                  "properties": {
                    "except": {
                      "description": "Send all headers except those specified",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            },
            "send_variable_values": {
              "description": "To configure which GraphQL variable values are included in trace data that's sent to Apollo Studio",
              "oneOf": [
                {
                  "description": "Dont send any variables",
                  "type": "string",
                  "enum": [
                    "none"
                  ]
                },
                {
                  "description": "Send all variables",
                  "type": "string",
                  "enum": [
                    "all"
                  ]
                },
                {
                  "description": "Send only the variables specified",
                  "type": "object",
                  "required": [
                    "only"
                  ],
                  "properties": {
                    "only": {
                      "description": "Send only the variables specified",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "description": "Send all variables except those specified",
                  "type": "object",
                  "required": [
                    "except"
                  ],
                  "properties": {
                    "except": {
                      "description": "Send all variables except those specified",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "experimental_logging": {
          "description": "Logging configuration",
          "type": "object",
          "properties": {
            "display_filename": {
              "description": "Display the filename in the logs",
              "default": false,
              "type": "boolean"
            },
            "display_line_number": {
              "description": "Display the line number in the logs",
              "default": false,
              "type": "boolean"
            },
            "display_target": {
              "description": "Display the target in the logs",
              "default": false,
              "type": "boolean"
            },
            "format": {
              "description": "Log format",
              "oneOf": [
                {
                  "description": "Pretty text format (default if you're running from a tty)",
                  "type": "string",
                  "enum": [
                    "pretty"
                  ]
                },
                {
                  "description": "Json log format",
                  "type": "string",
                  "enum": [
                    "json"
                  ]
                }
              ]
            },
            "when_header": {
              "description": "Log configuration to log request and response for subgraphs and supergraph",
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "description": "Match header value given a regex to display logs",
                    "type": "object",
                    "required": [
                      "match",
                      "name"
                    ],
                    "properties": {
                      "body": {
                        "description": "Display request/response body (default: false)",
                        "default": false,
                        "type": "boolean"
                      },
                      "headers": {
                        "description": "Display request/response headers (default: false)",
                        "default": false,
                        "type": "boolean"
                      },
                      "match": {
                        "description": "Regex to match the header value",
                        "type": "string"
                      },
                      "name": {
                        "description": "Header name",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "description": "Match header value given a value to display logs",
                    "type": "object",
                    "required": [
                      "name",
                      "value"
                    ],
                    "properties": {
                      "body": {
                        "description": "Display request/response body (default: false)",
                        "default": false,
                        "type": "boolean"
                      },
                      "headers": {
                        "description": "Display request/response headers (default: false)",
                        "default": false,
                        "type": "boolean"
                      },
                      "name": {
                        "description": "Header name",
                        "type": "string"
                      },
                      "value": {
                        "description": "Header value",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                ]
              }
            }
          },
          "additionalProperties": false
        },
        "metrics": {
          "description": "Metrics configuration",
          "type": "object",
          "properties": {
            "common": {
              "description": "Common metrics configuration across all exporters",
              "type": "object",
              "properties": {
                "attributes": {
                  "description": "Configuration to add custom labels/attributes to metrics",
                  "type": "object",
                  "properties": {
                    "subgraph": {
                      "description": "Configuration to forward header values or body values from subgraph request/response in metric attributes/labels",
                      "type": "object",
                      "properties": {
                        "all": {
                          "description": "Attributes for all subgraphs",
                          "type": "object",
                          "properties": {
                            "context": {
                              "description": "Configuration to forward values from the context to custom attributes/labels in metrics",
                              "type": "array",
                              "items": {
                                "description": "Configuration to forward context values in metric attributes/labels",
                                "type": "object",
                                "required": [
                                  "named"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "The optional default value",
                                    "anyOf": [
                                      {
                                        "description": "bool values",
                                        "type": "boolean"
                                      },
                                      {
                                        "description": "i64 values",
                                        "type": "integer",
                                        "format": "int64"
                                      },
                                      {
                                        "description": "f64 values",
                                        "type": "number",
                                        "format": "double"
                                      },
                                      {
                                        "description": "String values",
                                        "type": "string"
                                      },
                                      {
                                        "description": "Array of homogeneous values",
                                        "anyOf": [
                                          {
                                            "description": "Array of bools",
                                            "type": "array",
                                            "items": {
                                              "type": "boolean"
                                            }
                                          },
                                          {
                                            "description": "Array of integers",
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int64"
                                            }
                                          },
                                          {
                                            "description": "Array of floats",
                                            "type": "array",
                                            "items": {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          },
                                          {
                                            "description": "Array of strings",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "nullable": true
                                  },
                                  "named": {
                                    "description": "The name of the value in the context",
                                    "type": "string"
                                  },
                                  "rename": {
                                    "description": "The optional output name",
                                    "type": "string",
                                    "nullable": true
                                  }
                                },
                                "additionalProperties": false
                              },
                              "nullable": true
                            },
                            "errors": {
                              "description": "Configuration to forward values from the error to custom attributes/labels in metrics",
                              "type": "object",
                              "properties": {
                                "extensions": {
                                  "description": "Forward extensions values as custom attributes/labels in metrics",
                                  "type": "array",
                                  "items": {
                                    "description": "Configuration to forward body values in metric attributes/labels",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "path"
                                    ],
                                    "properties": {
                                      "default": {
                                        "description": "The optional default value",
                                        "anyOf": [
                                          {
                                            "description": "bool values",
                                            "type": "boolean"
                                          },
                                          {
                                            "description": "i64 values",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          {
                                            "description": "f64 values",
                                            "type": "number",
                                            "format": "double"
                                          },
                                          {
                                            "description": "String values",
                                            "type": "string"
                                          },
                                          {
                                            "description": "Array of homogeneous values",
                                            "anyOf": [
                                              {
                                                "description": "Array of bools",
                                                "type": "array",
                                                "items": {
                                                  "type": "boolean"
                                                }
                                              },
                                              {
                                                "description": "Array of integers",
                                                "type": "array",
                                                "items": {
                                                  "type": "integer",
                                                  "format": "int64"
                                                }
                                              },
                                              {
                                                "description": "Array of floats",
                                                "type": "array",
                                                "items": {
                                                  "type": "number",
                                                  "format": "double"
                                                }
                                              },
                                              {
                                                "description": "Array of strings",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "nullable": true
                                      },
                                      "name": {
                                        "description": "The name of the attribute",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "The path in the body",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "nullable": true
                                },
                                "include_messages": {
                                  "description": "Will include the error message in a \"message\" attribute",
                                  "default": false,
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "nullable": true
                            },
                            "request": {
                              "description": "Configuration to forward headers or body values from the request to custom attributes/labels in metrics",
                              "type": "object",
                              "properties": {
                                "body": {
                                  "description": "Forward body values as custom attributes/labels in metrics",
                                  "type": "array",
                                  "items": {
                                    "description": "Configuration to forward body values in metric attributes/labels",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "path"
                                    ],
                                    "properties": {
                                      "default": {
                                        "description": "The optional default value",
                                        "anyOf": [
                                          {
                                            "description": "bool values",
                                            "type": "boolean"
                                          },
                                          {
                                            "description": "i64 values",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          {
                                            "description": "f64 values",
                                            "type": "number",
                                            "format": "double"
                                          },
                                          {
                                            "description": "String values",
                                            "type": "string"
                                          },
                                          {
                                            "description": "Array of homogeneous values",
                                            "anyOf": [
                                              {
                                                "description": "Array of bools",
                                                "type": "array",
                                                "items": {
                                                  "type": "boolean"
                                                }
                                              },
                                              {
                                                "description": "Array of integers",
                                                "type": "array",
                                                "items": {
                                                  "type": "integer",
                                                  "format": "int64"
                                                }
                                              },
                                              {
                                                "description": "Array of floats",
                                                "type": "array",
                                                "items": {
                                                  "type": "number",
                                                  "format": "double"
                                                }
                                              },
                                              {
                                                "description": "Array of strings",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "nullable": true
                                      },
                                      "name": {
                                        "description": "The name of the attribute",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "The path in the body",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "nullable": true
                                },
                                "header": {
                                  "description": "Forward header values as custom attributes/labels in metrics",
                                  "type": "array",
                                  "items": {
                                    "description": "Configuration to forward header values in metric labels",
                                    "anyOf": [
                                      {
                                        "description": "Match via header name",
                                        "type": "object",
                                        "required": [
                                          "named"
                                        ],
                                        "properties": {
                                          "default": {
                                            "description": "The optional default value",
                                            "anyOf": [
                                              {
                                                "description": "bool values",
                                                "type": "boolean"
                                              },
                                              {
                                                "description": "i64 values",
                                                "type": "integer",
                                                "format": "int64"
                                              },
                                              {
                                                "description": "f64 values",
                                                "type": "number",
                                                "format": "double"
                                              },
                                              {
                                                "description": "String values",
                                                "type": "string"
                                              },
                                              {
                                                "description": "Array of homogeneous values",
                                                "anyOf": [
                                                  {
                                                    "description": "Array of bools",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "boolean"
                                                    }
                                                  },
                                                  {
                                                    "description": "Array of integers",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  },
                                                  {
                                                    "description": "Array of floats",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "number",
                                                      "format": "double"
                                                    }
                                                  },
                                                  {
                                                    "description": "Array of strings",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                ]
                                              }
                                            ],
                                            "nullable": true
                                          },
                                          "named": {
                                            "description": "The name of the header",
                                            "type": "string"
                                          },
                                          "rename": {
                                            "description": "The optional output name",
                                            "type": "string",
                                            "nullable": true
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "description": "Match via rgex",
                                        "type": "object",
                                        "required": [
                                          "matching"
                                        ],
                                        "properties": {
                                          "matching": {
                                            "description": "Using a regex on the header name",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  },
                                  "nullable": true
                                }
                              },
                              "additionalProperties": false,
                              "nullable": true
                            },
                            "response": {
                              "description": "Configuration to forward headers or body values from the response to custom attributes/labels in metrics",
                              "type": "object",
                              "properties": {
                                "body": {
                                  "description": "Forward body values as custom attributes/labels in metrics",
                                  "type": "array",
                                  "items": {
                                    "description": "Configuration to forward body values in metric attributes/labels",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "path"
                                    ],
                                    "properties": {
                                      "default": {
                                        "description": "The optional default value",
                                        "anyOf": [
                                          {
                                            "description": "bool values",
                                            "type": "boolean"
                                          },
                                          {
                                            "description": "i64 values",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          {
                                            "description": "f64 values",
                                            "type": "number",
                                            "format": "double"
                                          },
                                          {
                                            "description": "String values",
                                            "type": "string"
                                          },
                                          {
                                            "description": "Array of homogeneous values",
                                            "anyOf": [
                                              {
                                                "description": "Array of bools",
                                                "type": "array",
                                                "items": {
                                                  "type": "boolean"
                                                }
                                              },
                                              {
                                                "description": "Array of integers",
                                                "type": "array",
                                                "items": {
                                                  "type": "integer",
                                                  "format": "int64"
                                                }
                                              },
                                              {
                                                "description": "Array of floats",
                                                "type": "array",
                                                "items": {
                                                  "type": "number",
                                                  "format": "double"
                                                }
                                              },
                                              {
                                                "description": "Array of strings",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "nullable": true
                                      },
                                      "name": {
                                        "description": "The name of the attribute",
                                        "type": "string"
                                      },
                                      "path": {
                                        "description": "The path in the body",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "nullable": true
                                },
                                "header": {
                                  "description": "Forward header values as custom attributes/labels in metrics",
                                  "type": "array",
                                  "items": {
                                    "description": "Configuration to forward header values in metric labels",
                                    "anyOf": [
                                      {
                                        "description": "Match via header name",
                                        "type": "object",
                                        "required": [
                                          "named"
                                        ],
                                        "properties": {
                                          "default": {
                                            "description": "The optional default value",
                                            "anyOf": [
                                              {
                                                "description": "bool values",
                                                "type": "boolean"
                                              },
                                              {
                                                "description": "i64 values",
                                                "type": "integer",
                                                "format": "int64"
                                              },
                                              {
                                                "description": "f64 values",
                                                "type": "number",
                                                "format": "double"
                                              },
                                              {
                                                "description": "String values",
                                                "type": "string"
                                              },
                                              {
                                                "description": "Array of homogeneous values",
                                                "anyOf": [
                                                  {
                                                    "description": "Array of bools",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "boolean"
                                                    }
                                                  },
                                                  {
                                                    "description": "Array of integers",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  },
                                                  {
                                                    "description": "Array of floats",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "number",
                                                      "format": "double"
                                                    }
                                                  },
                                                  {
                                                    "description": "Array of strings",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                ]
                                              }
                                            ],
                                            "nullable": true
                                          },
                                          "named": {
                                            "description": "The name of the header",
                                            "type": "string"
                                          },
                                          "rename": {
                                            "description": "The optional output name",
                                            "type": "string",
                                            "nullable": true
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "description": "Match via rgex",
                                        "type": "object",
                                        "required": [
                                          "matching"
                                        ],
                                        "properties": {
                                          "matching": {
                                            "description": "Using a regex on the header name",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  },
                                  "nullable": true
                                }
                              },
                              "additionalProperties": false,
                              "nullable": true
                            },
                            "static": {
                              "description": "Configuration to insert custom attributes/labels in metrics",
                              "type": "array",
                              "items": {
                                "description": "Configuration to insert custom attributes/labels in metrics",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The name of the attribute to insert",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The value of the attribute to insert",
                                    "anyOf": [
                                      {
                                        "description": "bool values",
                                        "type": "boolean"
                                      },
                                      {
                                        "description": "i64 values",
                                        "type": "integer",
                                        "format": "int64"
                                      },
                                      {
                                        "description": "f64 values",
                                        "type": "number",
                                        "format": "double"
                                      },
                                      {
                                        "description": "String values",
                                        "type": "string"
                                      },
                                      {
                                        "description": "Array of homogeneous values",
                                        "anyOf": [
                                          {
                                            "description": "Array of bools",
                                            "type": "array",
                                            "items": {
                                              "type": "boolean"
                                            }
                                          },
                                          {
                                            "description": "Array of integers",
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int64"
                                            }
                                          },
                                          {
                                            "description": "Array of floats",
                                            "type": "array",
                                            "items": {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          },
                                          {
                                            "description": "Array of strings",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "nullable": true
                            }
                          },
                          "additionalProperties": false,
                          "nullable": true
                        },
                        "subgraphs": {
                          "description": "Attributes per subgraph",
                          "type": "object",
                          "additionalProperties": {
                            "description": "Configuration to add custom attributes/labels on metrics to subgraphs",
                            "type": "object",
                            "properties": {
                              "context": {
                                "description": "Configuration to forward values from the context to custom attributes/labels in metrics",
                                "type": "array",
                                "items": {
                                  "description": "Configuration to forward context values in metric attributes/labels",
                                  "type": "object",
                                  "required": [
                                    "named"
                                  ],
                                  "properties": {
                                    "default": {
                                      "description": "The optional default value",
                                      "anyOf": [
                                        {
                                          "description": "bool values",
                                          "type": "boolean"
                                        },
                                        {
                                          "description": "i64 values",
                                          "type": "integer",
                                          "format": "int64"
                                        },
                                        {
                                          "description": "f64 values",
                                          "type": "number",
                                          "format": "double"
                                        },
                                        {
                                          "description": "String values",
                                          "type": "string"
                                        },
                                        {
                                          "description": "Array of homogeneous values",
                                          "anyOf": [
                                            {
                                              "description": "Array of bools",
                                              "type": "array",
                                              "items": {
                                                "type": "boolean"
                                              }
                                            },
                                            {
                                              "description": "Array of integers",
                                              "type": "array",
                                              "items": {
                                                "type": "integer",
                                                "format": "int64"
                                              }
                                            },
                                            {
                                              "description": "Array of floats",
                                              "type": "array",
                                              "items": {
                                                "type": "number",
                                                "format": "double"
                                              }
                                            },
                                            {
                                              "description": "Array of strings",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          ]
                                        }
                                      ],
                                      "nullable": true
                                    },
                                    "named": {
                                      "description": "The name of the value in the context",
                                      "type": "string"
                                    },
                                    "rename": {
                                      "description": "The optional output name",
                                      "type": "string",
                                      "nullable": true
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "nullable": true
                              },
                              "errors": {
                                "description": "Configuration to forward values from the error to custom attributes/labels in metrics",
                                "type": "object",
                                "properties": {
                                  "extensions": {
                                    "description": "Forward extensions values as custom attributes/labels in metrics",
                                    "type": "array",
                                    "items": {
                                      "description": "Configuration to forward body values in metric attributes/labels",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "path"
                                      ],
                                      "properties": {
                                        "default": {
                                          "description": "The optional default value",
                                          "anyOf": [
                                            {
                                              "description": "bool values",
                                              "type": "boolean"
                                            },
                                            {
                                              "description": "i64 values",
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            {
                                              "description": "f64 values",
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "description": "String values",
                                              "type": "string"
                                            },
                                            {
                                              "description": "Array of homogeneous values",
                                              "anyOf": [
                                                {
                                                  "description": "Array of bools",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                {
                                                  "description": "Array of integers",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                {
                                                  "description": "Array of floats",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "number",
                                                    "format": "double"
                                                  }
                                                },
                                                {
                                                  "description": "Array of strings",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              ]
                                            }
                                          ],
                                          "nullable": true
                                        },
                                        "name": {
                                          "description": "The name of the attribute",
                                          "type": "string"
                                        },
                                        "path": {
                                          "description": "The path in the body",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "nullable": true
                                  },
                                  "include_messages": {
                                    "description": "Will include the error message in a \"message\" attribute",
                                    "default": false,
                                    "type": "boolean"
                                  }
                                },
                                "additionalProperties": false,
                                "nullable": true
                              },
                              "request": {
                                "description": "Configuration to forward headers or body values from the request to custom attributes/labels in metrics",
                                "type": "object",
                                "properties": {
                                  "body": {
                                    "description": "Forward body values as custom attributes/labels in metrics",
                                    "type": "array",
                                    "items": {
                                      "description": "Configuration to forward body values in metric attributes/labels",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "path"
                                      ],
                                      "properties": {
                                        "default": {
                                          "description": "The optional default value",
                                          "anyOf": [
                                            {
                                              "description": "bool values",
                                              "type": "boolean"
                                            },
                                            {
                                              "description": "i64 values",
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            {
                                              "description": "f64 values",
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "description": "String values",
                                              "type": "string"
                                            },
                                            {
                                              "description": "Array of homogeneous values",
                                              "anyOf": [
                                                {
                                                  "description": "Array of bools",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                {
                                                  "description": "Array of integers",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                {
                                                  "description": "Array of floats",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "number",
                                                    "format": "double"
                                                  }
                                                },
                                                {
                                                  "description": "Array of strings",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              ]
                                            }
                                          ],
                                          "nullable": true
                                        },
                                        "name": {
                                          "description": "The name of the attribute",
                                          "type": "string"
                                        },
                                        "path": {
                                          "description": "The path in the body",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "nullable": true
                                  },
                                  "header": {
                                    "description": "Forward header values as custom attributes/labels in metrics",
                                    "type": "array",
                                    "items": {
                                      "description": "Configuration to forward header values in metric labels",
                                      "anyOf": [
                                        {
                                          "description": "Match via header name",
                                          "type": "object",
                                          "required": [
                                            "named"
                                          ],
                                          "properties": {
                                            "default": {
                                              "description": "The optional default value",
                                              "anyOf": [
                                                {
                                                  "description": "bool values",
                                                  "type": "boolean"
                                                },
                                                {
                                                  "description": "i64 values",
                                                  "type": "integer",
                                                  "format": "int64"
                                                },
                                                {
                                                  "description": "f64 values",
                                                  "type": "number",
                                                  "format": "double"
                                                },
                                                {
                                                  "description": "String values",
                                                  "type": "string"
                                                },
                                                {
                                                  "description": "Array of homogeneous values",
                                                  "anyOf": [
                                                    {
                                                      "description": "Array of bools",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "boolean"
                                                      }
                                                    },
                                                    {
                                                      "description": "Array of integers",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      }
                                                    },
                                                    {
                                                      "description": "Array of floats",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "number",
                                                        "format": "double"
                                                      }
                                                    },
                                                    {
                                                      "description": "Array of strings",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  ]
                                                }
                                              ],
                                              "nullable": true
                                            },
                                            "named": {
                                              "description": "The name of the header",
                                              "type": "string"
                                            },
                                            "rename": {
                                              "description": "The optional output name",
                                              "type": "string",
                                              "nullable": true
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        {
                                          "description": "Match via rgex",
                                          "type": "object",
                                          "required": [
                                            "matching"
                                          ],
                                          "properties": {
                                            "matching": {
                                              "description": "Using a regex on the header name",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      ]
                                    },
                                    "nullable": true
                                  }
                                },
                                "additionalProperties": false,
                                "nullable": true
                              },
                              "response": {
                                "description": "Configuration to forward headers or body values from the response to custom attributes/labels in metrics",
                                "type": "object",
                                "properties": {
                                  "body": {
                                    "description": "Forward body values as custom attributes/labels in metrics",
                                    "type": "array",
                                    "items": {
                                      "description": "Configuration to forward body values in metric attributes/labels",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "path"
                                      ],
                                      "properties": {
                                        "default": {
                                          "description": "The optional default value",
                                          "anyOf": [
                                            {
                                              "description": "bool values",
                                              "type": "boolean"
                                            },
                                            {
                                              "description": "i64 values",
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            {
                                              "description": "f64 values",
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "description": "String values",
                                              "type": "string"
                                            },
                                            {
                                              "description": "Array of homogeneous values",
                                              "anyOf": [
                                                {
                                                  "description": "Array of bools",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                {
                                                  "description": "Array of integers",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                {
                                                  "description": "Array of floats",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "number",
                                                    "format": "double"
                                                  }
                                                },
                                                {
                                                  "description": "Array of strings",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              ]
                                            }
                                          ],
                                          "nullable": true
                                        },
                                        "name": {
                                          "description": "The name of the attribute",
                                          "type": "string"
                                        },
                                        "path": {
                                          "description": "The path in the body",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "nullable": true
                                  },
                                  "header": {
                                    "description": "Forward header values as custom attributes/labels in metrics",
                                    "type": "array",
                                    "items": {
                                      "description": "Configuration to forward header values in metric labels",
                                      "anyOf": [
                                        {
                                          "description": "Match via header name",
                                          "type": "object",
                                          "required": [
                                            "named"
                                          ],
                                          "properties": {
                                            "default": {
                                              "description": "The optional default value",
                                              "anyOf": [
                                                {
                                                  "description": "bool values",
                                                  "type": "boolean"
                                                },
                                                {
                                                  "description": "i64 values",
                                                  "type": "integer",
                                                  "format": "int64"
                                                },
                                                {
                                                  "description": "f64 values",
                                                  "type": "number",
                                                  "format": "double"
                                                },
                                                {
                                                  "description": "String values",
                                                  "type": "string"
                                                },
                                                {
                                                  "description": "Array of homogeneous values",
                                                  "anyOf": [
                                                    {
                                                      "description": "Array of bools",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "boolean"
                                                      }
                                                    },
                                                    {
                                                      "description": "Array of integers",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      }
                                                    },
                                                    {
                                                      "description": "Array of floats",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "number",
                                                        "format": "double"
                                                      }
                                                    },
                                                    {
                                                      "description": "Array of strings",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  ]
                                                }
                                              ],
                                              "nullable": true
                                            },
                                            "named": {
                                              "description": "The name of the header",
                                              "type": "string"
                                            },
                                            "rename": {
                                              "description": "The optional output name",
                                              "type": "string",
                                              "nullable": true
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        {
                                          "description": "Match via rgex",
                                          "type": "object",
                                          "required": [
                                            "matching"
                                          ],
                                          "properties": {
                                            "matching": {
                                              "description": "Using a regex on the header name",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      ]
                                    },
                                    "nullable": true
                                  }
                                },
                                "additionalProperties": false,
                                "nullable": true
                              },
                              "static": {
                                "description": "Configuration to insert custom attributes/labels in metrics",
                                "type": "array",
                                "items": {
                                  "description": "Configuration to insert custom attributes/labels in metrics",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The name of the attribute to insert",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The value of the attribute to insert",
                                      "anyOf": [
                                        {
                                          "description": "bool values",
                                          "type": "boolean"
                                        },
                                        {
                                          "description": "i64 values",
                                          "type": "integer",
                                          "format": "int64"
                                        },
                                        {
                                          "description": "f64 values",
                                          "type": "number",
                                          "format": "double"
                                        },
                                        {
                                          "description": "String values",
                                          "type": "string"
                                        },
                                        {
                                          "description": "Array of homogeneous values",
                                          "anyOf": [
                                            {
                                              "description": "Array of bools",
                                              "type": "array",
                                              "items": {
                                                "type": "boolean"
                                              }
                                            },
                                            {
                                              "description": "Array of integers",
                                              "type": "array",
                                              "items": {
                                                "type": "integer",
                                                "format": "int64"
                                              }
                                            },
                                            {
                                              "description": "Array of floats",
                                              "type": "array",
                                              "items": {
                                                "type": "number",
                                                "format": "double"
                                              }
                                            },
                                            {
                                              "description": "Array of strings",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "nullable": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "nullable": true
                        }
                      },
                      "additionalProperties": false,
                      "nullable": true
                    },
                    "supergraph": {
                      "description": "Configuration to forward header values or body values from router request/response in metric attributes/labels",
                      "type": "object",
                      "properties": {
                        "context": {
                          "description": "Configuration to forward values from the context to custom attributes/labels in metrics",
                          "type": "array",
                          "items": {
                            "description": "Configuration to forward context values in metric attributes/labels",
                            "type": "object",
                            "required": [
                              "named"
                            ],
                            "properties": {
                              "default": {
                                "description": "The optional default value",
                                "anyOf": [
                                  {
                                    "description": "bool values",
                                    "type": "boolean"
                                  },
                                  {
                                    "description": "i64 values",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  {
                                    "description": "f64 values",
                                    "type": "number",
                                    "format": "double"
                                  },
                                  {
                                    "description": "String values",
                                    "type": "string"
                                  },
                                  {
                                    "description": "Array of homogeneous values",
                                    "anyOf": [
                                      {
                                        "description": "Array of bools",
                                        "type": "array",
                                        "items": {
                                          "type": "boolean"
                                        }
                                      },
                                      {
                                        "description": "Array of integers",
                                        "type": "array",
                                        "items": {
                                          "type": "integer",
                                          "format": "int64"
                                        }
                                      },
                                      {
                                        "description": "Array of floats",
                                        "type": "array",
                                        "items": {
                                          "type": "number",
                                          "format": "double"
                                        }
                                      },
                                      {
                                        "description": "Array of strings",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "nullable": true
                              },
                              "named": {
                                "description": "The name of the value in the context",
                                "type": "string"
                              },
                              "rename": {
                                "description": "The optional output name",
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "nullable": true
                        },
                        "errors": {
                          "description": "Configuration to forward values from the error to custom attributes/labels in metrics",
                          "type": "object",
                          "properties": {
                            "extensions": {
                              "description": "Forward extensions values as custom attributes/labels in metrics",
                              "type": "array",
                              "items": {
                                "description": "Configuration to forward body values in metric attributes/labels",
                                "type": "object",
                                "required": [
                                  "name",
                                  "path"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "The optional default value",
                                    "anyOf": [
                                      {
                                        "description": "bool values",
                                        "type": "boolean"
                                      },
                                      {
                                        "description": "i64 values",
                                        "type": "integer",
                                        "format": "int64"
                                      },
                                      {
                                        "description": "f64 values",
                                        "type": "number",
                                        "format": "double"
                                      },
                                      {
                                        "description": "String values",
                                        "type": "string"
                                      },
                                      {
                                        "description": "Array of homogeneous values",
                                        "anyOf": [
                                          {
                                            "description": "Array of bools",
                                            "type": "array",
                                            "items": {
                                              "type": "boolean"
                                            }
                                          },
                                          {
                                            "description": "Array of integers",
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int64"
                                            }
                                          },
                                          {
                                            "description": "Array of floats",
                                            "type": "array",
                                            "items": {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          },
                                          {
                                            "description": "Array of strings",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "nullable": true
                                  },
                                  "name": {
                                    "description": "The name of the attribute",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "The path in the body",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "nullable": true
                            },
                            "include_messages": {
                              "description": "Will include the error message in a \"message\" attribute",
                              "default": false,
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "nullable": true
                        },
                        "request": {
                          "description": "Configuration to forward headers or body values from the request to custom attributes/labels in metrics",
                          "type": "object",
                          "properties": {
                            "body": {
                              "description": "Forward body values as custom attributes/labels in metrics",
                              "type": "array",
                              "items": {
                                "description": "Configuration to forward body values in metric attributes/labels",
                                "type": "object",
                                "required": [
                                  "name",
                                  "path"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "The optional default value",
                                    "anyOf": [
                                      {
                                        "description": "bool values",
                                        "type": "boolean"
                                      },
                                      {
                                        "description": "i64 values",
                                        "type": "integer",
                                        "format": "int64"
                                      },
                                      {
                                        "description": "f64 values",
                                        "type": "number",
                                        "format": "double"
                                      },
                                      {
                                        "description": "String values",
                                        "type": "string"
                                      },
                                      {
                                        "description": "Array of homogeneous values",
                                        "anyOf": [
                                          {
                                            "description": "Array of bools",
                                            "type": "array",
                                            "items": {
                                              "type": "boolean"
                                            }
                                          },
                                          {
                                            "description": "Array of integers",
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int64"
                                            }
                                          },
                                          {
                                            "description": "Array of floats",
                                            "type": "array",
                                            "items": {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          },
                                          {
                                            "description": "Array of strings",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "nullable": true
                                  },
                                  "name": {
                                    "description": "The name of the attribute",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "The path in the body",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "nullable": true
                            },
                            "header": {
                              "description": "Forward header values as custom attributes/labels in metrics",
                              "type": "array",
                              "items": {
                                "description": "Configuration to forward header values in metric labels",
                                "anyOf": [
                                  {
                                    "description": "Match via header name",
                                    "type": "object",
                                    "required": [
                                      "named"
                                    ],
                                    "properties": {
                                      "default": {
                                        "description": "The optional default value",
                                        "anyOf": [
                                          {
                                            "description": "bool values",
                                            "type": "boolean"
                                          },
                                          {
                                            "description": "i64 values",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          {
                                            "description": "f64 values",
                                            "type": "number",
                                            "format": "double"
                                          },
                                          {
                                            "description": "String values",
                                            "type": "string"
                                          },
                                          {
                                            "description": "Array of homogeneous values",
                                            "anyOf": [
                                              {
                                                "description": "Array of bools",
                                                "type": "array",
                                                "items": {
                                                  "type": "boolean"
                                                }
                                              },
                                              {
                                                "description": "Array of integers",
                                                "type": "array",
                                                "items": {
                                                  "type": "integer",
                                                  "format": "int64"
                                                }
                                              },
                                              {
                                                "description": "Array of floats",
                                                "type": "array",
                                                "items": {
                                                  "type": "number",
                                                  "format": "double"
                                                }
                                              },
                                              {
                                                "description": "Array of strings",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "nullable": true
                                      },
                                      "named": {
                                        "description": "The name of the header",
                                        "type": "string"
                                      },
                                      "rename": {
                                        "description": "The optional output name",
                                        "type": "string",
                                        "nullable": true
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "description": "Match via rgex",
                                    "type": "object",
                                    "required": [
                                      "matching"
                                    ],
                                    "properties": {
                                      "matching": {
                                        "description": "Using a regex on the header name",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              },
                              "nullable": true
                            }
                          },
                          "additionalProperties": false,
                          "nullable": true
                        },
                        "response": {
                          "description": "Configuration to forward headers or body values from the response to custom attributes/labels in metrics",
                          "type": "object",
                          "properties": {
                            "body": {
                              "description": "Forward body values as custom attributes/labels in metrics",
                              "type": "array",
                              "items": {
                                "description": "Configuration to forward body values in metric attributes/labels",
                                "type": "object",
                                "required": [
                                  "name",
                                  "path"
                                ],
                                "properties": {
                                  "default": {
                                    "description": "The optional default value",
                                    "anyOf": [
                                      {
                                        "description": "bool values",
                                        "type": "boolean"
                                      },
                                      {
                                        "description": "i64 values",
                                        "type": "integer",
                                        "format": "int64"
                                      },
                                      {
                                        "description": "f64 values",
                                        "type": "number",
                                        "format": "double"
                                      },
                                      {
                                        "description": "String values",
                                        "type": "string"
                                      },
                                      {
                                        "description": "Array of homogeneous values",
                                        "anyOf": [
                                          {
                                            "description": "Array of bools",
                                            "type": "array",
                                            "items": {
                                              "type": "boolean"
                                            }
                                          },
                                          {
                                            "description": "Array of integers",
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int64"
                                            }
                                          },
                                          {
                                            "description": "Array of floats",
                                            "type": "array",
                                            "items": {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          },
                                          {
                                            "description": "Array of strings",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        ]
                                      }
                                    ],
                                    "nullable": true
                                  },
                                  "name": {
                                    "description": "The name of the attribute",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "The path in the body",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "nullable": true
                            },
                            "header": {
                              "description": "Forward header values as custom attributes/labels in metrics",
                              "type": "array",
                              "items": {
                                "description": "Configuration to forward header values in metric labels",
                                "anyOf": [
                                  {
                                    "description": "Match via header name",
                                    "type": "object",
                                    "required": [
                                      "named"
                                    ],
                                    "properties": {
                                      "default": {
                                        "description": "The optional default value",
                                        "anyOf": [
                                          {
                                            "description": "bool values",
                                            "type": "boolean"
                                          },
                                          {
                                            "description": "i64 values",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          {
                                            "description": "f64 values",
                                            "type": "number",
                                            "format": "double"
                                          },
                                          {
                                            "description": "String values",
                                            "type": "string"
                                          },
                                          {
                                            "description": "Array of homogeneous values",
                                            "anyOf": [
                                              {
                                                "description": "Array of bools",
                                                "type": "array",
                                                "items": {
                                                  "type": "boolean"
                                                }
                                              },
                                              {
                                                "description": "Array of integers",
                                                "type": "array",
                                                "items": {
                                                  "type": "integer",
                                                  "format": "int64"
                                                }
                                              },
                                              {
                                                "description": "Array of floats",
                                                "type": "array",
                                                "items": {
                                                  "type": "number",
                                                  "format": "double"
                                                }
                                              },
                                              {
                                                "description": "Array of strings",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        "nullable": true
                                      },
                                      "named": {
                                        "description": "The name of the header",
                                        "type": "string"
                                      },
                                      "rename": {
                                        "description": "The optional output name",
                                        "type": "string",
                                        "nullable": true
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "description": "Match via rgex",
                                    "type": "object",
                                    "required": [
                                      "matching"
                                    ],
                                    "properties": {
                                      "matching": {
                                        "description": "Using a regex on the header name",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                ]
                              },
                              "nullable": true
                            }
                          },
                          "additionalProperties": false,
                          "nullable": true
                        },
                        "static": {
                          "description": "Configuration to insert custom attributes/labels in metrics",
                          "type": "array",
                          "items": {
                            "description": "Configuration to insert custom attributes/labels in metrics",
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "description": "The name of the attribute to insert",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value of the attribute to insert",
                                "anyOf": [
                                  {
                                    "description": "bool values",
                                    "type": "boolean"
                                  },
                                  {
                                    "description": "i64 values",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  {
                                    "description": "f64 values",
                                    "type": "number",
                                    "format": "double"
                                  },
                                  {
                                    "description": "String values",
                                    "type": "string"
                                  },
                                  {
                                    "description": "Array of homogeneous values",
                                    "anyOf": [
                                      {
                                        "description": "Array of bools",
                                        "type": "array",
                                        "items": {
                                          "type": "boolean"
                                        }
                                      },
                                      {
                                        "description": "Array of integers",
                                        "type": "array",
                                        "items": {
                                          "type": "integer",
                                          "format": "int64"
                                        }
                                      },
                                      {
                                        "description": "Array of floats",
                                        "type": "array",
                                        "items": {
                                          "type": "number",
                                          "format": "double"
                                        }
                                      },
                                      {
                                        "description": "Array of strings",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "nullable": true
                        }
                      },
                      "additionalProperties": false,
                      "nullable": true
                    }
                  },
                  "additionalProperties": false,
                  "nullable": true
                },
                "resources": {
                  "description": "Resources",
                  "default": {},
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "service_name": {
                  "description": "Set a service.name resource in your metrics",
                  "type": "string",
                  "nullable": true
                },
                "service_namespace": {
                  "description": "Set a service.namespace attribute in your metrics",
                  "type": "string",
                  "nullable": true
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "otlp": {
              "description": "Open Telemetry native exporter configuration",
              "type": "object",
              "required": [
                "endpoint"
              ],
              "properties": {
                "batch_processor": {
                  "description": "Batch processor settings",
                  "default": {
                    "scheduled_delay": {
                      "secs": 5,
                      "nanos": 0
                    },
                    "max_queue_size": 2048,
                    "max_export_batch_size": 512,
                    "max_export_timeout": {
                      "secs": 30,
                      "nanos": 0
                    },
                    "max_concurrent_exports": 1
                  },
                  "type": "object",
                  "properties": {
                    "max_concurrent_exports": {
                      "description": "Maximum number of concurrent exports\n\nLimits the number of spawned tasks for exports and thus memory consumed by an exporter. A value of 1 will cause exports to be performed synchronously on the BatchSpanProcessor task. The default is 1.",
                      "default": 1,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "max_export_batch_size": {
                      "description": "The maximum number of spans to process in a single batch. If there are more than one batch worth of spans then it processes multiple batches of spans one batch after the other without any delay. The default value is 512.",
                      "default": 512,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "max_export_timeout": {
                      "description": "The maximum duration to export a batch of data. The default value is 30 seconds.",
                      "default": {
                        "secs": 30,
                        "nanos": 0
                      },
                      "type": "string"
                    },
                    "max_queue_size": {
                      "description": "The maximum queue size to buffer spans for delayed processing. If the queue gets full it drops the spans. The default value of is 2048.",
                      "default": 2048,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "scheduled_delay": {
                      "description": "The delay interval in milliseconds between two consecutive processing of batches. The default value is 5 seconds.",
                      "default": {
                        "secs": 5,
                        "nanos": 0
                      },
                      "type": "string"
                    }
                  }
                },
                "endpoint": {
                  "description": "The endpoint to send data to",
                  "type": "string"
                },
                "grpc": {
                  "description": "gRPC configuration settings",
                  "default": {
                    "domain_name": null,
                    "ca": null,
                    "cert": null,
                    "key": null,
                    "metadata": {}
                  },
                  "type": "object",
                  "properties": {
                    "ca": {
                      "description": "The optional certificate authority (CA) certificate to be used in TLS configuration.",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "cert": {
                      "description": "The optional cert for tls config",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "domain_name": {
                      "description": "The optional domain name for tls config. Note that domain name is will be defaulted to match the endpoint is not explicitly set.",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "key": {
                      "description": "The optional private key file for TLS configuration.",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "metadata": {
                      "description": "gRPC metadata",
                      "default": {},
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                },
                "http": {
                  "description": "HTTP configuration settings",
                  "default": {
                    "headers": {}
                  },
                  "type": "object",
                  "properties": {
                    "headers": {
                      "description": "Headers to send on report requests",
                      "default": {},
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "protocol": {
                  "description": "The protocol to use when sending data",
                  "default": "grpc",
                  "type": "string",
                  "enum": [
                    "grpc",
                    "http"
                  ]
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "prometheus": {
              "description": "Prometheus exporter configuration",
              "type": "object",
              "required": [
                "enabled"
              ],
              "properties": {
                "enabled": {
                  "description": "Set to true to enable",
                  "type": "boolean"
                },
                "listen": {
                  "description": "The listen address",
                  "default": "127.0.0.1:9090",
                  "anyOf": [
                    {
                      "description": "Socket address.",
                      "type": "string"
                    },
                    {
                      "description": "Unix socket.",
                      "type": "string"
                    }
                  ]
                },
                "path": {
                  "description": "The path where prometheus will be exposed",
                  "default": "/metrics",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "nullable": true
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "tracing": {
          "description": "Tracing configuration",
          "type": "object",
          "properties": {
            "datadog": {
              "description": "Datadog exporter configuration",
              "type": "object",
              "required": [
                "endpoint"
              ],
              "properties": {
                "batch_processor": {
                  "description": "batch processor configuration",
                  "default": {
                    "scheduled_delay": {
                      "secs": 5,
                      "nanos": 0
                    },
                    "max_queue_size": 2048,
                    "max_export_batch_size": 512,
                    "max_export_timeout": {
                      "secs": 30,
                      "nanos": 0
                    },
                    "max_concurrent_exports": 1
                  },
                  "type": "object",
                  "properties": {
                    "max_concurrent_exports": {
                      "description": "Maximum number of concurrent exports\n\nLimits the number of spawned tasks for exports and thus memory consumed by an exporter. A value of 1 will cause exports to be performed synchronously on the BatchSpanProcessor task. The default is 1.",
                      "default": 1,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "max_export_batch_size": {
                      "description": "The maximum number of spans to process in a single batch. If there are more than one batch worth of spans then it processes multiple batches of spans one batch after the other without any delay. The default value is 512.",
                      "default": 512,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "max_export_timeout": {
                      "description": "The maximum duration to export a batch of data. The default value is 30 seconds.",
                      "default": {
                        "secs": 30,
                        "nanos": 0
                      },
                      "type": "string"
                    },
                    "max_queue_size": {
                      "description": "The maximum queue size to buffer spans for delayed processing. If the queue gets full it drops the spans. The default value of is 2048.",
                      "default": 2048,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "scheduled_delay": {
                      "description": "The delay interval in milliseconds between two consecutive processing of batches. The default value is 5 seconds.",
                      "default": {
                        "secs": 5,
                        "nanos": 0
                      },
                      "type": "string"
                    }
                  }
                },
                "endpoint": {
                  "description": "The endpoint to send to",
                  "default": "default",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "experimental_response_trace_id": {
              "description": "A way to expose trace id in response headers",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Expose the trace_id in response headers",
                  "default": false,
                  "type": "boolean"
                },
                "header_name": {
                  "description": "Choose the header name to expose trace_id (default: apollo-trace-id)",
                  "type": "string",
                  "nullable": true
                }
              },
              "additionalProperties": false
            },
            "jaeger": {
              "description": "Jaeger exporter configuration",
              "anyOf": [
                {
                  "type": "object",
                  "required": [
                    "agent"
                  ],
                  "properties": {
                    "agent": {
                      "description": "Agent configuration",
                      "type": "object",
                      "required": [
                        "endpoint"
                      ],
                      "properties": {
                        "endpoint": {
                          "description": "The endpoint to send to",
                          "default": "default",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "batch_processor": {
                      "description": "Batch processor configuration",
                      "default": {
                        "scheduled_delay": {
                          "secs": 5,
                          "nanos": 0
                        },
                        "max_queue_size": 2048,
                        "max_export_batch_size": 512,
                        "max_export_timeout": {
                          "secs": 30,
                          "nanos": 0
                        },
                        "max_concurrent_exports": 1
                      },
                      "type": "object",
                      "properties": {
                        "max_concurrent_exports": {
                          "description": "Maximum number of concurrent exports\n\nLimits the number of spawned tasks for exports and thus memory consumed by an exporter. A value of 1 will cause exports to be performed synchronously on the BatchSpanProcessor task. The default is 1.",
                          "default": 1,
                          "type": "integer",
                          "format": "uint",
                          "minimum": 0.0
                        },
                        "max_export_batch_size": {
                          "description": "The maximum number of spans to process in a single batch. If there are more than one batch worth of spans then it processes multiple batches of spans one batch after the other without any delay. The default value is 512.",
                          "default": 512,
                          "type": "integer",
                          "format": "uint",
                          "minimum": 0.0
                        },
                        "max_export_timeout": {
                          "description": "The maximum duration to export a batch of data. The default value is 30 seconds.",
                          "default": {
                            "secs": 30,
                            "nanos": 0
                          },
                          "type": "string"
                        },
                        "max_queue_size": {
                          "description": "The maximum queue size to buffer spans for delayed processing. If the queue gets full it drops the spans. The default value of is 2048.",
                          "default": 2048,
                          "type": "integer",
                          "format": "uint",
                          "minimum": 0.0
                        },
                        "scheduled_delay": {
                          "description": "The delay interval in milliseconds between two consecutive processing of batches. The default value is 5 seconds.",
                          "default": {
                            "secs": 5,
                            "nanos": 0
                          },
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "collector"
                  ],
                  "properties": {
                    "batch_processor": {
                      "description": "Batch processor configuration",
                      "default": {
                        "scheduled_delay": {
                          "secs": 5,
                          "nanos": 0
                        },
                        "max_queue_size": 2048,
                        "max_export_batch_size": 512,
                        "max_export_timeout": {
                          "secs": 30,
                          "nanos": 0
                        },
                        "max_concurrent_exports": 1
                      },
                      "type": "object",
                      "properties": {
                        "max_concurrent_exports": {
                          "description": "Maximum number of concurrent exports\n\nLimits the number of spawned tasks for exports and thus memory consumed by an exporter. A value of 1 will cause exports to be performed synchronously on the BatchSpanProcessor task. The default is 1.",
                          "default": 1,
                          "type": "integer",
                          "format": "uint",
                          "minimum": 0.0
                        },
                        "max_export_batch_size": {
                          "description": "The maximum number of spans to process in a single batch. If there are more than one batch worth of spans then it processes multiple batches of spans one batch after the other without any delay. The default value is 512.",
                          "default": 512,
                          "type": "integer",
                          "format": "uint",
                          "minimum": 0.0
                        },
                        "max_export_timeout": {
                          "description": "The maximum duration to export a batch of data. The default value is 30 seconds.",
                          "default": {
                            "secs": 30,
                            "nanos": 0
                          },
                          "type": "string"
                        },
                        "max_queue_size": {
                          "description": "The maximum queue size to buffer spans for delayed processing. If the queue gets full it drops the spans. The default value of is 2048.",
                          "default": 2048,
                          "type": "integer",
                          "format": "uint",
                          "minimum": 0.0
                        },
                        "scheduled_delay": {
                          "description": "The delay interval in milliseconds between two consecutive processing of batches. The default value is 5 seconds.",
                          "default": {
                            "secs": 5,
                            "nanos": 0
                          },
                          "type": "string"
                        }
                      }
                    },
                    "collector": {
                      "description": "Collector configuration",
                      "type": "object",
                      "required": [
                        "endpoint"
                      ],
                      "properties": {
                        "endpoint": {
                          "description": "The endpoint to send reports to",
                          "type": "string",
                          "format": "uri"
                        },
                        "password": {
                          "description": "The optional password",
                          "type": "string",
                          "nullable": true
                        },
                        "username": {
                          "description": "The optional username",
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              ],
              "nullable": true
            },
            "otlp": {
              "description": "OpenTelemetry native exporter configuration",
              "type": "object",
              "required": [
                "endpoint"
              ],
              "properties": {
                "batch_processor": {
                  "description": "Batch processor settings",
                  "default": {
                    "scheduled_delay": {
                      "secs": 5,
                      "nanos": 0
                    },
                    "max_queue_size": 2048,
                    "max_export_batch_size": 512,
                    "max_export_timeout": {
                      "secs": 30,
                      "nanos": 0
                    },
                    "max_concurrent_exports": 1
                  },
                  "type": "object",
                  "properties": {
                    "max_concurrent_exports": {
                      "description": "Maximum number of concurrent exports\n\nLimits the number of spawned tasks for exports and thus memory consumed by an exporter. A value of 1 will cause exports to be performed synchronously on the BatchSpanProcessor task. The default is 1.",
                      "default": 1,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "max_export_batch_size": {
                      "description": "The maximum number of spans to process in a single batch. If there are more than one batch worth of spans then it processes multiple batches of spans one batch after the other without any delay. The default value is 512.",
                      "default": 512,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "max_export_timeout": {
                      "description": "The maximum duration to export a batch of data. The default value is 30 seconds.",
                      "default": {
                        "secs": 30,
                        "nanos": 0
                      },
                      "type": "string"
                    },
                    "max_queue_size": {
                      "description": "The maximum queue size to buffer spans for delayed processing. If the queue gets full it drops the spans. The default value of is 2048.",
                      "default": 2048,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "scheduled_delay": {
                      "description": "The delay interval in milliseconds between two consecutive processing of batches. The default value is 5 seconds.",
                      "default": {
                        "secs": 5,
                        "nanos": 0
                      },
                      "type": "string"
                    }
                  }
                },
                "endpoint": {
                  "description": "The endpoint to send data to",
                  "type": "string"
                },
                "grpc": {
                  "description": "gRPC configuration settings",
                  "default": {
                    "domain_name": null,
                    "ca": null,
                    "cert": null,
                    "key": null,
                    "metadata": {}
                  },
                  "type": "object",
                  "properties": {
                    "ca": {
                      "description": "The optional certificate authority (CA) certificate to be used in TLS configuration.",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "cert": {
                      "description": "The optional cert for tls config",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "domain_name": {
                      "description": "The optional domain name for tls config. Note that domain name is will be defaulted to match the endpoint is not explicitly set.",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "key": {
                      "description": "The optional private key file for TLS configuration.",
                      "default": null,
                      "type": "string",
                      "nullable": true
                    },
                    "metadata": {
                      "description": "gRPC metadata",
                      "default": {},
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                },
                "http": {
                  "description": "HTTP configuration settings",
                  "default": {
                    "headers": {}
                  },
                  "type": "object",
                  "properties": {
                    "headers": {
                      "description": "Headers to send on report requests",
                      "default": {},
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "protocol": {
                  "description": "The protocol to use when sending data",
                  "default": "grpc",
                  "type": "string",
                  "enum": [
                    "grpc",
                    "http"
                  ]
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "propagation": {
              "description": "Propagation configuration",
              "type": "object",
              "properties": {
                "baggage": {
                  "description": "Propagate baggage https://www.w3.org/TR/baggage/",
                  "default": false,
                  "type": "boolean"
                },
                "datadog": {
                  "description": "Propagate Datadog",
                  "default": false,
                  "type": "boolean"
                },
                "jaeger": {
                  "description": "Propagate Jaeger",
                  "default": false,
                  "type": "boolean"
                },
                "request": {
                  "description": "Select a custom request header to set your own trace_id (header value must be convertible from hexadecimal to set a correct trace_id)",
                  "type": "object",
                  "required": [
                    "header_name"
                  ],
                  "properties": {
                    "header_name": {
                      "description": "Choose the header name to expose trace_id (default: apollo-trace-id)",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "trace_context": {
                  "description": "Propagate trace context https://www.w3.org/TR/trace-context/",
                  "default": false,
                  "type": "boolean"
                },
                "zipkin": {
                  "description": "Propagate Zipkin",
                  "default": false,
                  "type": "boolean"
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "trace_config": {
              "description": "Common configuration",
              "type": "object",
              "properties": {
                "attributes": {
                  "description": "Default attributes",
                  "default": {},
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "description": "bool values",
                        "type": "boolean"
                      },
                      {
                        "description": "i64 values",
                        "type": "integer",
                        "format": "int64"
                      },
                      {
                        "description": "f64 values",
                        "type": "number",
                        "format": "double"
                      },
                      {
                        "description": "String values",
                        "type": "string"
                      },
                      {
                        "description": "Array of homogeneous values",
                        "anyOf": [
                          {
                            "description": "Array of bools",
                            "type": "array",
                            "items": {
                              "type": "boolean"
                            }
                          },
                          {
                            "description": "Array of integers",
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int64"
                            }
                          },
                          {
                            "description": "Array of floats",
                            "type": "array",
                            "items": {
                              "type": "number",
                              "format": "double"
                            }
                          },
                          {
                            "description": "Array of strings",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                "max_attributes_per_event": {
                  "description": "The maximum attributes per event before discarding",
                  "default": 128,
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "max_attributes_per_link": {
                  "description": "The maximum attributes per link before discarding",
                  "default": 128,
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "max_attributes_per_span": {
                  "description": "The maximum attributes per span before discarding",
                  "default": 128,
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "max_events_per_span": {
                  "description": "The maximum events per span before discarding",
                  "default": 128,
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "max_links_per_span": {
                  "description": "The maximum links per span before discarding",
                  "default": 128,
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "parent_based_sampler": {
                  "description": "Whether to use parent based sampling",
                  "default": true,
                  "type": "boolean"
                },
                "sampler": {
                  "description": "The sampler, always_on, always_off or a decimal between 0.0 and 1.0",
                  "anyOf": [
                    {
                      "description": "Sample a given fraction. Fractions >= 1 will always sample.",
                      "type": "number",
                      "format": "double"
                    },
                    {
                      "oneOf": [
                        {
                          "description": "Always sample",
                          "type": "string",
                          "enum": [
                            "always_on"
                          ]
                        },
                        {
                          "description": "Never sample",
                          "type": "string",
                          "enum": [
                            "always_off"
                          ]
                        }
                      ]
                    }
                  ]
                },
                "service_name": {
                  "description": "The trace service name",
                  "default": "${env.OTEL_SERVICE_NAME:-router}",
                  "type": "string"
                },
                "service_namespace": {
                  "description": "The trace service namespace",
                  "default": "",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "zipkin": {
              "description": "Zipkin exporter configuration",
              "type": "object",
              "properties": {
                "batch_processor": {
                  "description": "Batch processor configuration",
                  "default": {
                    "scheduled_delay": {
                      "secs": 5,
                      "nanos": 0
                    },
                    "max_queue_size": 2048,
                    "max_export_batch_size": 512,
                    "max_export_timeout": {
                      "secs": 30,
                      "nanos": 0
                    },
                    "max_concurrent_exports": 1
                  },
                  "type": "object",
                  "properties": {
                    "max_concurrent_exports": {
                      "description": "Maximum number of concurrent exports\n\nLimits the number of spawned tasks for exports and thus memory consumed by an exporter. A value of 1 will cause exports to be performed synchronously on the BatchSpanProcessor task. The default is 1.",
                      "default": 1,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "max_export_batch_size": {
                      "description": "The maximum number of spans to process in a single batch. If there are more than one batch worth of spans then it processes multiple batches of spans one batch after the other without any delay. The default value is 512.",
                      "default": 512,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "max_export_timeout": {
                      "description": "The maximum duration to export a batch of data. The default value is 30 seconds.",
                      "default": {
                        "secs": 30,
                        "nanos": 0
                      },
                      "type": "string"
                    },
                    "max_queue_size": {
                      "description": "The maximum queue size to buffer spans for delayed processing. If the queue gets full it drops the spans. The default value of is 2048.",
                      "default": 2048,
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    },
                    "scheduled_delay": {
                      "description": "The delay interval in milliseconds between two consecutive processing of batches. The default value is 5 seconds.",
                      "default": {
                        "secs": 5,
                        "nanos": 0
                      },
                      "type": "string"
                    }
                  }
                },
                "endpoint": {
                  "description": "The endpoint to send to",
                  "default": "default",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "nullable": true
            }
          },
          "additionalProperties": false,
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "test.always_fails_to_start": {
      "description": "Configuration for the test plugin",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "The name of the test",
          "type": "string"
        }
      }
    },
    "test.always_starts_and_stops": {
      "description": "Configuration for the test plugin",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "The name of the test",
          "type": "string"
        }
      }
    },
    "tls": {
      "description": "TLS related configuration options.",
      "default": {
        "subgraph": {
          "all": {
            "certificate_authorities": null
          },
          "subgraphs": {}
        }
      },
      "type": "object",
      "properties": {
        "subgraph": {
          "description": "Configuration options pertaining to the subgraph server component.",
          "default": {
            "all": {
              "certificate_authorities": null
            },
            "subgraphs": {}
          },
          "type": "object",
          "properties": {
            "all": {
              "description": "options applying to all subgraphs",
              "default": {
                "certificate_authorities": null
              },
              "type": "object",
              "properties": {
                "certificate_authorities": {
                  "description": "list of certificate authorities in PEM format",
                  "default": null,
                  "type": "string",
                  "nullable": true
                }
              },
              "additionalProperties": false
            },
            "subgraphs": {
              "description": "per subgraph options",
              "default": {},
              "type": "object",
              "additionalProperties": {
                "description": "Configuration options pertaining to the subgraph server component.",
                "type": "object",
                "properties": {
                  "certificate_authorities": {
                    "description": "list of certificate authorities in PEM format",
                    "default": null,
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "traffic_shaping": {
      "description": "Configuration for the experimental traffic shaping plugin",
      "type": "object",
      "properties": {
        "all": {
          "description": "Applied on all subgraphs",
          "type": "object",
          "properties": {
            "compression": {
              "description": "Enable compression for subgraphs (available compressions are deflate, br, gzip)",
              "oneOf": [
                {
                  "description": "gzip",
                  "type": "string",
                  "enum": [
                    "gzip"
                  ]
                },
                {
                  "description": "deflate",
                  "type": "string",
                  "enum": [
                    "deflate"
                  ]
                },
                {
                  "description": "brotli",
                  "type": "string",
                  "enum": [
                    "br"
                  ]
                }
              ],
              "nullable": true
            },
            "deduplicate_query": {
              "description": "Enable query deduplication",
              "type": "boolean",
              "nullable": true
            },
            "experimental_retry": {
              "description": "Retry configuration",
              "type": "object",
              "properties": {
                "min_per_sec": {
                  "description": "minimum rate of retries allowed to accomodate clients that have just started issuing requests, or clients that do not issue many requests per window. The default value is 10",
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0,
                  "nullable": true
                },
                "retry_mutations": {
                  "description": "allows request retries on mutations. This should only be activated if mutations are idempotent. Disabled by default",
                  "type": "boolean",
                  "nullable": true
                },
                "retry_percent": {
                  "description": "percentage of calls to deposit that can be retried. This is in addition to any retries allowed for via min_per_sec. Must be between 0 and 1000, default value is 0.2",
                  "type": "number",
                  "format": "float",
                  "nullable": true
                },
                "ttl": {
                  "description": "how long a single deposit should be considered. Must be between 1 and 60 seconds, default value is 10 seconds",
                  "default": null,
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "global_rate_limit": {
              "description": "Enable global rate limiting",
              "type": "object",
              "required": [
                "capacity",
                "interval"
              ],
              "properties": {
                "capacity": {
                  "description": "Number of requests allowed",
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 1.0
                },
                "interval": {
                  "description": "Per interval",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "timeout": {
              "description": "Enable timeout for incoming requests",
              "default": null,
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "deduplicate_variables": {
          "description": "DEPRECATED, now always enabled: Enable variable deduplication optimization when sending requests to subgraphs (https://github.com/apollographql/router/issues/87)",
          "default": null,
          "type": "boolean",
          "nullable": true
        },
        "router": {
          "description": "Applied at the router level",
          "type": "object",
          "properties": {
            "global_rate_limit": {
              "description": "Enable global rate limiting",
              "type": "object",
              "required": [
                "capacity",
                "interval"
              ],
              "properties": {
                "capacity": {
                  "description": "Number of requests allowed",
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 1.0
                },
                "interval": {
                  "description": "Per interval",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "timeout": {
              "description": "Enable timeout for incoming requests",
              "default": null,
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "subgraphs": {
          "description": "Applied on specific subgraphs",
          "type": "object",
          "additionalProperties": {
            "description": "Traffic shaping options",
            "type": "object",
            "properties": {
              "compression": {
                "description": "Enable compression for subgraphs (available compressions are deflate, br, gzip)",
                "oneOf": [
                  {
                    "description": "gzip",
                    "type": "string",
                    "enum": [
                      "gzip"
                    ]
                  },
                  {
                    "description": "deflate",
                    "type": "string",
                    "enum": [
                      "deflate"
                    ]
                  },
                  {
                    "description": "brotli",
                    "type": "string",
                    "enum": [
                      "br"
                    ]
                  }
                ],
                "nullable": true
              },
              "deduplicate_query": {
                "description": "Enable query deduplication",
                "type": "boolean",
                "nullable": true
              },
              "experimental_retry": {
                "description": "Retry configuration",
                "type": "object",
                "properties": {
                  "min_per_sec": {
                    "description": "minimum rate of retries allowed to accomodate clients that have just started issuing requests, or clients that do not issue many requests per window. The default value is 10",
                    "type": "integer",
                    "format": "uint32",
                    "minimum": 0.0,
                    "nullable": true
                  },
                  "retry_mutations": {
                    "description": "allows request retries on mutations. This should only be activated if mutations are idempotent. Disabled by default",
                    "type": "boolean",
                    "nullable": true
                  },
                  "retry_percent": {
                    "description": "percentage of calls to deposit that can be retried. This is in addition to any retries allowed for via min_per_sec. Must be between 0 and 1000, default value is 0.2",
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "ttl": {
                    "description": "how long a single deposit should be considered. Must be between 1 and 60 seconds, default value is 10 seconds",
                    "default": null,
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "nullable": true
              },
              "global_rate_limit": {
                "description": "Enable global rate limiting",
                "type": "object",
                "required": [
                  "capacity",
                  "interval"
                ],
                "properties": {
                  "capacity": {
                    "description": "Number of requests allowed",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 1.0
                  },
                  "interval": {
                    "description": "Per interval",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "nullable": true
              },
              "timeout": {
                "description": "Enable timeout for incoming requests",
                "default": null,
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
