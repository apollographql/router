---
source: apollo-router/tests/tracing_test.rs
expression: get_spans()
---
{
  "name": "tracing_test::root",
  "record": {
    "entries": [],
    "metadata": {
      "name": "root",
      "target": "tracing_test",
      "level": "ERROR",
      "module_path": "tracing_test",
      "fields": {
        "names": []
      }
    }
  },
  "children": {
    "apollo_router::router_factory::plugin: apollo.include_subgraph_errors": {
      "name": "apollo_router::router_factory::plugin: apollo.include_subgraph_errors",
      "record": {
        "entries": [],
        "metadata": {
          "name": "plugin: apollo.include_subgraph_errors",
          "target": "apollo_router::router_factory",
          "level": "INFO",
          "module_path": "apollo_router::router_factory",
          "fields": {
            "names": []
          }
        }
      },
      "children": {}
    },
    "apollo_router::router_factory::plugin: apollo.csrf": {
      "name": "apollo_router::router_factory::plugin: apollo.csrf",
      "record": {
        "entries": [],
        "metadata": {
          "name": "plugin: apollo.csrf",
          "target": "apollo_router::router_factory",
          "level": "INFO",
          "module_path": "apollo_router::router_factory",
          "fields": {
            "names": []
          }
        }
      },
      "children": {}
    },
    "apollo_router::router_factory::plugin: apollo.headers": {
      "name": "apollo_router::router_factory::plugin: apollo.headers",
      "record": {
        "entries": [],
        "metadata": {
          "name": "plugin: apollo.headers",
          "target": "apollo_router::router_factory",
          "level": "INFO",
          "module_path": "apollo_router::router_factory",
          "fields": {
            "names": []
          }
        }
      },
      "children": {}
    },
    "apollo_router::router_factory::plugin: apollo.telemetry": {
      "name": "apollo_router::router_factory::plugin: apollo.telemetry",
      "record": {
        "entries": [
          [
            "message",
            "telemetry.instrumentation.spans.mode is currently set to 'deprecated', either explicitly or via defaulting. Set telemetry.instrumentation.spans.mode explicitly in your router.yaml to 'spec_compliant' for log and span attributes that follow OpenTelemetry semantic conventions. This option will be defaulted to 'spec_compliant' in a future release and eventually removed altogether"
          ]
        ],
        "metadata": {
          "name": "plugin: apollo.telemetry",
          "target": "apollo_router::router_factory",
          "level": "INFO",
          "module_path": "apollo_router::router_factory",
          "fields": {
            "names": []
          }
        }
      },
      "children": {}
    },
    "apollo_router::router_factory::plugin: apollo.traffic_shaping": {
      "name": "apollo_router::router_factory::plugin: apollo.traffic_shaping",
      "record": {
        "entries": [],
        "metadata": {
          "name": "plugin: apollo.traffic_shaping",
          "target": "apollo_router::router_factory",
          "level": "INFO",
          "module_path": "apollo_router::router_factory",
          "fields": {
            "names": []
          }
        }
      },
      "children": {}
    },
    "apollo_router::router_factory::plugin: apollo.forbid_mutations": {
      "name": "apollo_router::router_factory::plugin: apollo.forbid_mutations",
      "record": {
        "entries": [],
        "metadata": {
          "name": "plugin: apollo.forbid_mutations",
          "target": "apollo_router::router_factory",
          "level": "INFO",
          "module_path": "apollo_router::router_factory",
          "fields": {
            "names": []
          }
        }
      },
      "children": {}
    },
    "apollo_router::router_factory::plugin: apollo.subscription": {
      "name": "apollo_router::router_factory::plugin: apollo.subscription",
      "record": {
        "entries": [],
        "metadata": {
          "name": "plugin: apollo.subscription",
          "target": "apollo_router::router_factory",
          "level": "INFO",
          "module_path": "apollo_router::router_factory",
          "fields": {
            "names": []
          }
        }
      },
      "children": {}
    },
    "apollo_router::router_factory::plugin: apollo.override_subgraph_url": {
      "name": "apollo_router::router_factory::plugin: apollo.override_subgraph_url",
      "record": {
        "entries": [],
        "metadata": {
          "name": "plugin: apollo.override_subgraph_url",
          "target": "apollo_router::router_factory",
          "level": "INFO",
          "module_path": "apollo_router::router_factory",
          "fields": {
            "names": []
          }
        }
      },
      "children": {}
    },
    "apollo_router::router_factory::plugin: apollo.authorization": {
      "name": "apollo_router::router_factory::plugin: apollo.authorization",
      "record": {
        "entries": [],
        "metadata": {
          "name": "plugin: apollo.authorization",
          "target": "apollo_router::router_factory",
          "level": "INFO",
          "module_path": "apollo_router::router_factory",
          "fields": {
            "names": []
          }
        }
      },
      "children": {}
    },
    "apollo_router::router_factory::plugin: apollo.authentication": {
      "name": "apollo_router::router_factory::plugin: apollo.authentication",
      "record": {
        "entries": [],
        "metadata": {
          "name": "plugin: apollo.authentication",
          "target": "apollo_router::router_factory",
          "level": "INFO",
          "module_path": "apollo_router::router_factory",
          "fields": {
            "names": []
          }
        }
      },
      "children": {}
    },
    "apollo_router::router_factory::plugin: apollo.experimental_entity_cache": {
      "name": "apollo_router::router_factory::plugin: apollo.experimental_entity_cache",
      "record": {
        "entries": [],
        "metadata": {
          "name": "plugin: apollo.experimental_entity_cache",
          "target": "apollo_router::router_factory",
          "level": "INFO",
          "module_path": "apollo_router::router_factory",
          "fields": {
            "names": []
          }
        }
      },
      "children": {}
    },
    "apollo_router::router_factory::plugin: apollo.rhai": {
      "name": "apollo_router::router_factory::plugin: apollo.rhai",
      "record": {
        "entries": [],
        "metadata": {
          "name": "plugin: apollo.rhai",
          "target": "apollo_router::router_factory",
          "level": "INFO",
          "module_path": "apollo_router::router_factory",
          "fields": {
            "names": []
          }
        }
      },
      "children": {}
    },
    "apollo_router::router_factory::plugin: apollo.coprocessor": {
      "name": "apollo_router::router_factory::plugin: apollo.coprocessor",
      "record": {
        "entries": [],
        "metadata": {
          "name": "plugin: apollo.coprocessor",
          "target": "apollo_router::router_factory",
          "level": "INFO",
          "module_path": "apollo_router::router_factory",
          "fields": {
            "names": []
          }
        }
      },
      "children": {}
    },
    "apollo_router::plugins::telemetry::span_factory::request": {
      "name": "apollo_router::plugins::telemetry::span_factory::request",
      "record": {
        "entries": [
          [
            "http.method",
            "POST"
          ],
          [
            "http.request.method",
            "POST"
          ],
          [
            "http.route",
            "http://default/"
          ],
          [
            "http.flavor",
            "HTTP/1.1"
          ],
          [
            "otel.kind",
            "SERVER"
          ],
          [
            "apollo_private.request",
            true
          ],
          [
            "graphql.operation.type",
            "query"
          ],
          [
            "graphql.operation.name",
            "ExampleQuery"
          ],
          [
            "otel.name",
            "query ExampleQuery"
          ]
        ],
        "metadata": {
          "name": "request",
          "target": "apollo_router::plugins::telemetry::span_factory",
          "level": "INFO",
          "module_path": "apollo_router::plugins::telemetry::span_factory",
          "fields": {
            "names": [
              "http.method",
              "http.request.method",
              "http.route",
              "http.flavor",
              "otel.name",
              "otel.kind",
              "graphql.operation.name",
              "graphql.operation.type",
              "apollo_private.request"
            ]
          }
        }
      },
      "children": {
        "apollo_router::plugins::telemetry::span_factory::router": {
          "name": "apollo_router::plugins::telemetry::span_factory::router",
          "record": {
            "entries": [
              [
                "http.method",
                "POST"
              ],
              [
                "http.request.method",
                "POST"
              ],
              [
                "http.route",
                "http://default/"
              ],
              [
                "http.flavor",
                "HTTP/1.1"
              ],
              [
                "trace_id",
                "[REDACTED]"
              ],
              [
                "otel.kind",
                "INTERNAL"
              ],
              [
                "apollo_private.duration_ns",
                0
              ],
              [
                "otel.status_code",
                "Error"
              ]
            ],
            "metadata": {
              "name": "router",
              "target": "apollo_router::plugins::telemetry::span_factory",
              "level": "INFO",
              "module_path": "apollo_router::plugins::telemetry::span_factory",
              "fields": {
                "names": [
                  "http.method",
                  "http.request.method",
                  "http.route",
                  "http.flavor",
                  "trace_id",
                  "client.name",
                  "client.version",
                  "otel.kind",
                  "otel.status_code",
                  "apollo_private.duration_ns",
                  "apollo_private.http.request_headers",
                  "apollo_private.http.response_headers"
                ]
              }
            }
          },
          "children": {
            "apollo_router::services::layers::query_analysis::parse_query": {
              "name": "apollo_router::services::layers::query_analysis::parse_query",
              "record": {
                "entries": [
                  [
                    "otel.kind",
                    "INTERNAL"
                  ]
                ],
                "metadata": {
                  "name": "parse_query",
                  "target": "apollo_router::services::layers::query_analysis",
                  "level": "INFO",
                  "module_path": "apollo_router::services::layers::query_analysis",
                  "fields": {
                    "names": [
                      "otel.kind"
                    ]
                  }
                }
              },
              "children": {}
            },
            "apollo_router::plugins::telemetry::span_factory::supergraph": {
              "name": "apollo_router::plugins::telemetry::span_factory::supergraph",
              "record": {
                "entries": [
                  [
                    "otel.kind",
                    "INTERNAL"
                  ],
                  [
                    "graphql.document",
                    "query ExampleQuery($topProductsFirst: Int, $reviewsForAuthorAuthorId: ID!) {\n                topProducts(first: $topProductsFirst) {\n                    name\n                    reviewsForAuthor(authorID: $reviewsForAuthorAuthorId) {\n                        body\n                        author {\n                            id\n                            name\n                        }\n                    }\n                }\n            }"
                  ],
                  [
                    "apollo_private.field_level_instrumentation_ratio",
                    0.0
                  ],
                  [
                    "apollo_private.graphql.variables",
                    "{}"
                  ],
                  [
                    "graphql.operation.name",
                    "ExampleQuery"
                  ],
                  [
                    "apollo_private.operation_signature",
                    "# ExampleQuery\nquery ExampleQuery($reviewsForAuthorAuthorId:ID!,$topProductsFirst:Int){topProducts(first:$topProductsFirst){name reviewsForAuthor(authorID:$reviewsForAuthorAuthorId){author{id name}body}}}"
                  ]
                ],
                "metadata": {
                  "name": "supergraph",
                  "target": "apollo_router::plugins::telemetry::span_factory",
                  "level": "INFO",
                  "module_path": "apollo_router::plugins::telemetry::span_factory",
                  "fields": {
                    "names": [
                      "otel.kind",
                      "graphql.operation.name",
                      "graphql.document",
                      "apollo_private.field_level_instrumentation_ratio",
                      "apollo_private.operation_signature",
                      "apollo_private.graphql.variables"
                    ]
                  }
                }
              },
              "children": {
                "apollo_router::services::supergraph::service::query_planning": {
                  "name": "apollo_router::services::supergraph::service::query_planning",
                  "record": {
                    "entries": [
                      [
                        "otel.kind",
                        "INTERNAL"
                      ],
                      [
                        "histogram.apollo_router_cache_miss_time",
                        "[REDACTED]"
                      ],
                      [
                        "kind",
                        "query planner"
                      ],
                      [
                        "storage",
                        "memory"
                      ],
                      [
                        "monotonic_counter.apollo_router_cache_miss_count",
                        1
                      ],
                      [
                        "kind",
                        "query planner"
                      ],
                      [
                        "storage",
                        "memory"
                      ],
                      [
                        "monotonic_counter.apollo.router.operations.validation",
                        1
                      ],
                      [
                        "validation.source",
                        "operation"
                      ],
                      [
                        "validation.result",
                        "match"
                      ],
                      [
                        "histogram.apollo_router_query_planning_time",
                        "[REDACTED]"
                      ],
                      [
                        "value.apollo_router_cache_size",
                        1
                      ],
                      [
                        "kind",
                        "query planner"
                      ],
                      [
                        "storage",
                        "memory"
                      ]
                    ],
                    "metadata": {
                      "name": "query_planning",
                      "target": "apollo_router::services::supergraph::service",
                      "level": "INFO",
                      "module_path": "apollo_router::services::supergraph::service",
                      "fields": {
                        "names": [
                          "otel.kind"
                        ]
                      }
                    }
                  },
                  "children": {}
                }
              }
            }
          }
        }
      }
    }
  }
}
