---
source: apollo-federation/src/sources/connect/expand/tests/mod.rs
expression: api_schema
input_file: apollo-federation/src/sources/connect/expand/tests/schemas/expand/realistic.graphql
---
directive @defer(label: String, if: Boolean! = true) on FRAGMENT_SPREAD | INLINE_FRAGMENT

type Address {
  street: String
  suite: String
  city: String
  zipcode: String
  geo: AddressGeo
}

type AddressGeo {
  lat: Float
  lng: Float
}

input AddressGeoInput {
  lat: Float
  lng: Float
}

input AddressInput {
  street: String
  suite: String
  city: String
  zipcode: String
  geo: AddressGeoInput
}

type CompanyInfo {
  name: String
  catchPhrase: String
  bs: String
  email: EmailAddress
}

input CompanyInput {
  name: String!
  catchPhrase: String
}

input CreateUserInput {
  name: String!
  username: String!
  email: EmailAddress
  status: Status
  address: AddressInput
}

scalar EmailAddress

type Mutation {
  createUser(input: CreateUserInput!): User
}

type Query {
  filterUsersByEmailDomain(email: EmailAddress!): [User]
  usersByCompany(company: CompanyInput!): [User]
  user(id: ID!): User
}

enum Status {
  ACTIVE
  INACTIVE
}

type User {
  id: ID!
  name: String
  username: String
  email: EmailAddress
  address: Address
  phone: String
  website: String
  company: CompanyInfo
  status: Status
}
