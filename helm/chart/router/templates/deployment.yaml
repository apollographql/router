apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "router.fullname" . }}
  labels:
    {{- include "router.labels" . | nindent 4 }}
  {{/* There may not be much configuration so check that there is something */}}
  {{- if (((((.Values.router).configuration).telemetry).metrics).prometheus).enabled }}
  annotations:
    prometheus.io/path: {{ .Values.router.configuration.telemetry.metrics.prometheus.path | default "/metrics" }}
    {{- if  .Values.router.configuration.telemetry.metrics.prometheus.listen }}
    prometheus.io/port: {{ (split ":" .Values.router.configuration.telemetry.metrics.prometheus.listen)._1 | quote }}
    {{- else }}
    prometheus.io/port: "9090"
    {{- end }}
    prometheus.io/scrape: "true"
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "router.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "router.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "router.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or .Values.router.args .Values.router.configuration }}
          args:
            {{- if .Values.router.args }}
            {{- toYaml .Values.router.args | nindent 12 }}
            {{- end }}
            {{- if .Values.router.configuration }}
            - --config
            - /app/configuration.yaml
            {{- end }}
          {{- end }}
          {{- if or .Values.managedFederation.apiKey .Values.managedFederation.graphRef .Values.extraEnvVars }}
          env:
            {{- if .Values.managedFederation.apiKey }}
            - name: APOLLO_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "router.managedFederation.apiSecretName" . }}
                  key: managedFederationApiKey
                  optional: true
            {{- end }}
            {{- if not (empty .Values.managedFederation.graphRef) }}
            - name: APOLLO_GRAPH_REF
              value: {{ .Values.managedFederation.graphRef }}
            {{- end }}
            {{- if .Values.extraEnvVars }}
            {{- tpl (toYaml .Values.extraEnvVars) $ | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if or .Values.extraEnvVarsCM .Values.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ .Values.extraEnvVarsCM }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ .Values.extraEnvVarsSecret }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPorts.http }}
              protocol: TCP
          livenessProbe:
            httpGet:
              httpHeaders:
                - name: Content-Type
                  value: application/json
              path: {{ .Values.router.configuration.supergraph.path | default "/" }}?query={__typename}
              port: {{ .Values.containerPorts.http }}
          readinessProbe:
            httpGet:
              httpHeaders:
                - name: Content-Type
                  value: application/json
              path: {{ .Values.router.configuration.supergraph.path | default "/" }}?query={__typename}
              port: {{ .Values.containerPorts.http }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.router.configuration  .Values.extraVolumeMounts }}
          volumeMounts:
            {{- if .Values.router.configuration }}
            - name: router-configuration
              mountPath: /app/configuration.yaml
              subPath: configuration.yaml
              readOnly: true
            {{- if index .Values.router.configuration "rhai" }}
            - name: router-rhai
              mountPath: {{ .Values.router.configuration.rhai.scripts | default "/dist/rhai" }}/{{ .Values.router.configuration.rhai.main | default "main.rhai" }}
              subPath: {{ .Values.router.configuration.rhai.main | default "main.rhai" }}
              readOnly: true
            {{- end }}
            {{- end }}
          {{- if .Values.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
          {{- end }}
      {{- if or .Values.router.configuration .Values.extraVolumes }}
      volumes:
        {{- if .Values.router.configuration }}
        - name: router-configuration
          configMap:
            name: {{ include "router.fullname" . }}
        {{- if index .Values.router.configuration "rhai" }}
        - name: router-rhai
          configMap:
            name: {{ include "router.rhaiConfigMapName" . }}
        {{- end }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
