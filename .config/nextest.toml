[[profile.default.overrides]]
# These are known flaky tests according to the test flakiness report provided
# in CircleCI insights, based on the `dev` branch:
#
# https://app.circleci.com/insights/github/apollographql/router/workflows/ci_checks/tests
#
# We will retry these tests up to 2 additional times. Retry counts are recorded.
# Items on this list should be prioritized to get improved and removed from this
# list at the time they are fixed.
#
# Frankly, it may be best to just retry all tests in the apollo-router::integration_tests
# module, as they have a high failure rate, in general.
retries = 2
filter = '''
   ( binary_id(=apollo-router-benchmarks) )
or ( binary_id(=apollo-router::apollo_otel_traces) )
or ( binary_id(=apollo-router::apollo_reports) )
or ( binary_id(=apollo-router::integration_tests) )
or ( binary_id(=apollo-router::samples) )
or ( binary_id(=apollo-router::set_context) )
or ( binary_id(=apollo-router::type_conditions) )
or ( binary_id(=apollo-router) & test(=axum_factory::axum_http_server_factory::tests::request_cancel_log) )
or ( binary_id(=apollo-router) & test(=axum_factory::axum_http_server_factory::tests::request_cancel_no_log) )
or ( binary_id(=apollo-router) & test(=axum_factory::tests::cors_origin_default) )
or ( binary_id(=apollo-router) & test(=axum_factory::tests::cors_origin_list) )
or ( binary_id(=apollo-router) & test(=axum_factory::tests::cors_origin_regex) )
or ( binary_id(=apollo-router) & test(=axum_factory::tests::it_answers_to_custom_endpoint) )
or ( binary_id(=apollo-router) & test(=axum_factory::tests::it_compress_response_body) )
or ( binary_id(=apollo-router) & test(=axum_factory::tests::response_with_custom_endpoint_wildcard) )
or ( binary_id(=apollo-router) & test(=axum_factory::tests::response_with_custom_endpoint) )
or ( binary_id(=apollo-router) & test(=axum_factory::tests::response_with_custom_prefix_endpoint) )
or ( binary_id(=apollo-router) & test(=axum_factory::tests::response_with_root_wildcard) )
or ( binary_id(=apollo-router) & test(=axum_factory::tests::response) )
or ( binary_id(=apollo-router) & test(=cache::metrics::tests::test_redis_storage_with_mocks) )
or ( binary_id(=apollo-router) & test(=layers::map_first_graphql_response::tests::test_map_first_graphql_response) )
or ( binary_id(=apollo-router) & test(=notification::tests::it_test_ttl) )
or ( binary_id(=apollo-router) & test(=plugins::authentication::subgraph::test::test_credentials_provider_refresh_on_stale) )
or ( binary_id(=apollo-router) & test(=plugins::connectors::tests::quickstart::query_4) )
or ( binary_id(=apollo-router) & test(=plugins::connectors::tests::test_interface_object) )
or ( binary_id(=apollo-router) & test(=plugins::expose_query_plan::tests::it_expose_query_plan) )
or ( binary_id(=apollo-router) & test(=plugins::include_subgraph_errors::test::it_does_not_redact_all_explicit_allow_account_explict_redact_for_product_query) )
or ( binary_id(=apollo-router) & test(=plugins::include_subgraph_errors::test::it_does_not_redact_all_explicit_allow_review_explict_redact_for_product_query) )
or ( binary_id(=apollo-router) & test(=plugins::include_subgraph_errors::test::it_does_not_redact_all_implicit_redact_product_explict_allow_for_product_query) )
or ( binary_id(=apollo-router) & test(=plugins::include_subgraph_errors::test::it_does_redact_all_explicit_allow_account_explict_redact_for_account_query) )
or ( binary_id(=apollo-router) & test(=plugins::include_subgraph_errors::test::it_does_redact_all_explicit_allow_product_explict_redact_for_product_query) )
or ( binary_id(=apollo-router) & test(=plugins::include_subgraph_errors::test::it_redacts_all_subgraphs_implicit_redact) )
or ( binary_id(=apollo-router) & test(=plugins::include_subgraph_errors::test::it_returns_valid_response) )
or ( binary_id(=apollo-router) & test(=plugins::telemetry::config_new::instruments::tests::test_instruments) )
or ( binary_id(=apollo-router) & test(=plugins::telemetry::metrics::apollo::test::apollo_metrics_enabled) )
or ( binary_id(=apollo-router) & test(=plugins::telemetry::metrics::apollo::test::apollo_metrics_for_subscription_error) )
or ( binary_id(=apollo-router) & test(=plugins::telemetry::metrics::apollo::test::apollo_metrics_multiple_operations) )
or ( binary_id(=apollo-router) & test(=plugins::telemetry::metrics::apollo::test::apollo_metrics_parse_failure) )
or ( binary_id(=apollo-router) & test(=plugins::telemetry::metrics::apollo::test::apollo_metrics_unknown_operation) )
or ( binary_id(=apollo-router) & test(=plugins::telemetry::metrics::apollo::test::apollo_metrics_validation_failure) )
or ( binary_id(=apollo-router) & test(=plugins::telemetry::tests::it_test_prometheus_metrics) )
or ( binary_id(=apollo-router) & test(=protocols::websocket::tests::test_ws_connection_new_proto_with_heartbeat) )
or ( binary_id(=apollo-router) & test(=router::tests::basic_event_stream_test) )
or ( binary_id(=apollo-router) & test(=router::tests::schema_update_test) )
or ( binary_id(=apollo-router) & test(=services::layers::persisted_queries::tests::pq_layer_freeform_graphql_with_safelist_log_unknown_true) )
or ( binary_id(=apollo-router) & test(=services::subgraph_service::tests::test_subgraph_service_websocket_with_error) )
or ( binary_id(=apollo-router) & test(=services::supergraph::tests::aliased_subgraph_data_rewrites_on_non_root_fetch) )
or ( binary_id(=apollo-router) & test(=services::supergraph::tests::interface_object_typename_rewrites) )
or ( binary_id(=apollo-router) & test(=services::supergraph::tests::only_query_interface_object_subgraph) )
or ( binary_id(=apollo-router) & test(=uplink::license_stream::test::license_expander_claim_no_claim) )
or ( binary_id(=apollo-router) & test(=uplink::license_stream::test::license_expander_claim_pause_claim) )
or ( binary_id(=apollo-router) & test(=uplink::persisted_queries_manifest_stream::test::integration_test) )
or ( binary_id(=apollo-router) & test(=uplink::schema_stream::test::integration_test) )
'''

[profile.ci]
# Print out output for failing tests as soon as they fail, and also at the end
# of the run (for easy scrollability).
failure-output = "immediate-final"

# Repeat non-pass status at the end so they’re easier to find.
final-status-level = "skip"

# Do not cancel the test run on the first failure.
fail-fast = false

# Each test should take much less than 2 minute
slow-timeout = { period = "30s", terminate-after = 4 }

# Write to output for persistence to CircleCI
[profile.ci.junit]
path = "junit.xml"

# Integration tests require more than one thread. The default setting of 1 will cause too many integration tests to run
# at the same time and causes tests to fail where timing is involved.
# This filter applies only to to the integration tests in the apollo-router package.
[[profile.ci.overrides]]
filter = 'test(/^apollo-router::/)'
threads-required = 4
