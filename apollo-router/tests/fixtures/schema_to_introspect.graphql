"The schema"
schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
  @link(url: "https://specs.apollo.dev/join/v0.3", for: EXECUTION) {
  query: TheQuery
}

directive @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE

directive @join__field(
  graph: join__Graph
  requires: join__FieldSet
  provides: join__FieldSet
  type: String
  external: Boolean
  override: String
  usedOverridden: Boolean
) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(
  graph: join__Graph!
  interface: String!
) repeatable on OBJECT | INTERFACE

directive @join__type(
  graph: join__Graph!
  key: join__FieldSet
  extension: Boolean! = false
  resolvable: Boolean! = true
  isInterfaceObject: Boolean! = false
) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @join__unionMember(
  graph: join__Graph!
  member: String!
) repeatable on UNION

directive @link(
  url: String
  as: String
  for: link__Purpose
  import: [link__Import]
) repeatable on SCHEMA

scalar join__FieldSet
scalar link__Import

enum join__Graph {
  SUBGRAPH1 @join__graph(name: "subgraph1", url: "http://localhost:4001/graphql")
}

enum link__Purpose {
  SECURITY
  EXECUTION
}

"""
Root query type
"""
type TheQuery implements I @join__type(graph: SUBGRAPH1) {
  id: ID!
  ints: [[Int!]]! @deprecated(reason: "â€¦")
  url(arg: [In] = [{ b: 4, a: 2 }]): Url
  union: U @deprecated(reason: null)
}

interface I @join__type(graph: SUBGRAPH1) {
  id: ID!
}

input In @join__type(graph: SUBGRAPH1) {
  a: Int! = 0 @deprecated(reason: null)
  b: Int @deprecated
}

scalar Url @specifiedBy(url: "https://url.spec.whatwg.org/") @join__type(graph: SUBGRAPH1)

union U @join__type(graph: SUBGRAPH1) = TheQuery | T

type T @join__type(graph: SUBGRAPH1) {
  enum: E @deprecated
}

enum E @join__type(graph: SUBGRAPH1) {
  NEW
  OLD @deprecated
}
