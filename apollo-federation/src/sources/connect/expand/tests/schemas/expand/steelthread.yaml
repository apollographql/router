# rover supergraph compose --config apollo-federation/src/sources/connect/expand/tests/schemas/steelthread.yaml > apollo-federation/src/sources/connect/expand/tests/schemas/steelthread.graphql
federation_version: =2.10.0-alpha.0
subgraphs:
  connectors:
    routing_url: none
    schema:
      sdl: |
        extend schema
          @link(
            url: "https://specs.apollo.dev/federation/v2.10"
            import: ["@key", "@external", "@requires", "@shareable"]
          )
          @link(
            url: "https://specs.apollo.dev/connect/v0.1"
            import: ["@connect", "@source"]
          )
          @source(
            name: "json"
            http: { baseURL: "https://jsonplaceholder.typicode.com/" }
          )

        type Query {
          users: [User]
            @connect(source: "json", http: { GET: "/users" }, selection: "id name")

          user(id: ID!): User
            @connect(
              source: "json"
              http: { GET: "/users/{$$args.id}" }
              selection: """
              id
              name
              username
              rest: *
              """
              entity: true
            )
        }

        type Contact {
          phone: String
          email: String
        }

        type User @key(fields: "id") {
          id: ID!
          name: String
          username: String
          rest: JSON
          c: String @external
          d: String
            @requires(fields: "c")
            @connect(
              source: "json"
              http: { GET: "/users/{$$this.c}" }
              selection: "$.phone"
            )
        }

        scalar JSON

  graphql:
    routing_url: https://localhost:4001
    schema:
      sdl: |
        extend schema
          @link(
            url: "https://specs.apollo.dev/federation/v2.7"
            import: ["@key"]
          )

        type User @key(fields: "id") {
          id: ID!
          c: String
        }
