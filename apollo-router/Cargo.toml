[package]
name = "apollo-router"
version = "1.32.0"
authors = ["Apollo Graph, Inc. <packages@apollographql.com>"]
repository = "https://github.com/apollographql/router/"
documentation = "https://docs.rs/apollo-router"
description = "A configurable, high-performance routing runtime for Apollo Federation ðŸš€"
license = "Elastic-2.0"

# renovate-automation: rustc version
rust-version = "1.72.0"
edition = "2021"
build = "build/main.rs"

[[bin]]
name = "router"
path = "src/main.rs"

[features]
default = ["global-allocator"]

# Set the Rust global allocator on some platforms
# https://doc.rust-lang.org/std/alloc/index.html#the-global_allocator-attribute
# Enabled by default. Disable default features in library crates or to set it yourself:
# ```
# [dependencies]
# apollo-router = {version = "1.20", default-features = false}
# ```
global-allocator = []

# if you are doing heap profiling
dhat-heap = ["dhat"]
dhat-ad-hoc = ["dhat"]

# Prevents the query execution to continue if any error occurs while fetching
# the data of a subgraph. This is useful in development as you want to be
# alerted early when something is wrong instead of receiving an invalid result.
failfast = []

# Enables usage of tokio-console with the router
# tokio-console also requires at build time the environment variable
# RUSTFLAGS="--cfg tokio_unstable"
console = ["tokio/tracing", "console-subscriber"]

# "fake" feature to disable V8 usage when building on docs.rs
# See https://github.com/apollographql/federation-rs/pull/185
docs_rs = ["router-bridge/docs_rs"]

[package.metadata.docs.rs]
features = ["docs_rs"]

[dependencies]
askama = "0.12.1"
access-json = "0.1.0"
anyhow = "1.0.75"
apollo-compiler = "0.11.3"
apollo-encoder = "0.7.0"
apollo-parser = "0.6.3"
arc-swap = "1.6.0"
async-compression = { version = "0.4.3", features = [
    "tokio",
    "brotli",
    "gzip",
    "deflate",
] }
async-trait = "0.1.73"
axum = { version = "0.6.20", features = ["headers", "json", "original-uri"] }
base64 = "0.21.4"
bloomfilter = "1.0.12"
buildstructor = "0.5.4"
bytes = "1.5.0"
clap = { version = "4.4.6", default-features = false, features = [
    "env",
    "derive",
    "std",
    "help",
] }
console-subscriber = { version = "0.1.10", optional = true }
ci_info = { version = "0.14.13", features = ["serde-1"] }
dashmap = { version = "5.5.3", features = ["serde"] }
derivative = "2.2.0"
derive_more = { version = "0.99.17", default-features = false, features = [
    "from",
    "display",
] }
dhat = { version = "0.3.2", optional = true }
diff = "0.1.13"
directories = "5.0.1"
displaydoc = "0.2"
flate2 = "1.0.27"
fred = { version = "6.3.2", features = ["enable-rustls", "no-client-setname"] }
futures = { version = "0.3.28", features = ["thread-pool"] }
graphql_client = "0.13.0"
hex = "0.4.3"
http = "0.2.9"
http-body = "0.4.5"
heck = "0.4.1"
humantime = "2.1.0"
humantime-serde = "1.1.1"
hyper = { version = "0.14.27", features = ["server", "client"] }
hyper-rustls = { version = "0.24.1", features = ["http1", "http2"] }
indexmap = { version = "2.0.2", features = ["serde"] }
itertools = "0.11.0"
jsonpath_lib = "0.3.0"
jsonpath-rust = "0.3.2"
jsonschema = { version = "0.17.1", default-features = false }
jsonwebtoken = "8.3.0"
lazy_static = "1.4.0"
libc = "0.2.149"
linkme = "0.3.17"
lru = "0.11.1"
maplit = "1.0.2"
mediatype = "0.19.15"
mockall = "0.11.4"
mime = "0.3.17"
multer = "2.1.0"
multimap = "0.9.0"
# To avoid tokio issues
notify = { version = "6.1.1", default-features = false, features = [
    "macos_kqueue",
] }
nu-ansi-term = "0.49"
once_cell = "1.18.0"

# Any package that starts with `opentelemetry` needs to be updated with care
# because it is tightly intertwined with the `tracing` packages on account of
# the `opentelemetry-tracing` package.
#
# We are constrained in our ability to update the `tracing` packages and that is
# tracked in https://github.com/apollographql/router/issues/1407.
#
# To codify this with code, a rule in our Renovate configuration constraints and
# groups `^tracing` and `^opentelemetry*` dependencies together as of
# https://github.com/apollographql/router/pull/1509.  A comment which exists
# there (and on `tracing` packages below) should be updated should this change.
opentelemetry = { version = "0.20.0", features = [
    "rt-tokio",
    "metrics",
    "testing"
] }
opentelemetry_api = "0.20.0"
opentelemetry-aws = "0.8.0"
opentelemetry-datadog = { version = "0.8.0", features = ["reqwest-client"] }
opentelemetry-http = "0.9.0"
opentelemetry-jaeger = { version = "0.19.0", features = [
    "collector_client",
    "reqwest_collector_client",
    "rt-tokio",
] }
opentelemetry-otlp = { version = "0.13.0", default-features = false, features = [
    "grpc-tonic",
    "gzip-tonic",
    "tonic",
    "tls",
    "http-proto",
    "metrics",
    "reqwest-client",
] }
opentelemetry-semantic-conventions = "0.12.0"
opentelemetry-zipkin = { version = "0.18.0", default-features = false, features = [
    "reqwest-client",
    "reqwest-rustls",
] }
opentelemetry-prometheus = "0.13.0"
paste = "1.0.14"
pin-project-lite = "0.2.13"
prometheus = "0.13"
prost = "0.11.9"
prost-types = "0.11.9"
proteus = "0.5.0"
rand = "0.8.5"
rand_core = "0.6.4"
rhai = { version = "1.16.2", features = ["sync", "serde", "internals"] }
regex = "1.10.0"
reqwest = { version = "0.11.22", default-features = false, features = [
    "rustls-tls",
    "rustls-native-certs",
    "json",
    "stream",
] }
# note: this dependency should _always_ be pinned, prefix the version with an `=`
router-bridge = "=0.5.6+v2.5.5"
rust-embed = "6.8.1"
rustls = "0.21.7"
rustls-pemfile = "1.0.3"
schemars = { version = "0.8.15", features = ["url"] }
shellexpand = "3.1.0"
sha2 = "0.10.8"
serde = { version = "1.0.188", features = ["derive", "rc"] }
serde_derive_default = "0.1"
serde_json_bytes = { version = "0.2.2", features = ["preserve_order"] }
serde_json = { version = "1.0.107", features = [
    "preserve_order",
    "float_roundtrip",
] }
serde_urlencoded = "0.7.1"
serde_yaml = "0.8.26"
static_assertions = "1.1.0"
strum_macros = "0.25.2"
sys-info = "0.9.1"
thiserror = "1.0.49"
tokio = { version = "1.33.0", features = ["full"] }
tokio-stream = { version = "0.1.14", features = ["sync", "net"] }
tokio-util = { version = "0.7.9", features = ["net", "codec", "time"] }
tonic = { version = "0.9.2", features = [
    "transport",
    "tls",
    "tls-roots",
    "gzip"
] }
tower = { version = "0.4.13", features = ["full"] }
tower-http = { version = "0.4.4", features = [
    "add-extension",
    "trace",
    "cors",
    "compression-br",
    "compression-deflate",
    "compression-gzip",
    "decompression-br",
    "decompression-deflate",
    "decompression-gzip",
    "timeout",
] }
tower-service = "0.3.2"
tracing = "0.1.37"
tracing-core = "0.1.31"
tracing-futures = { version = "0.2.5", features = ["futures-03"] }
tracing-opentelemetry = "0.21.0"
tracing-subscriber = { version = "0.3.17", features = ["env-filter", "json"] }
url = { version = "2.4.1", features = ["serde"] }
urlencoding = "2.1.3"
uuid = { version = "1.4.1", features = ["serde", "v4"] }
yaml-rust = "0.4.5"
wiremock = "0.5.19"
wsl = "0.1.0"
tokio-tungstenite = { version = "0.20.1", features = ["rustls-tls-native-roots"] }
tokio-rustls = "0.24.1"
http-serde = "1.1.3"
hmac = "0.12.1"
parking_lot = "0.12.1"
memchr = "2.6.4"
brotli = "3.4.0"
zstd = "0.12.4"
zstd-safe = "6.0.6"
# note: AWS dependencies should always use the same version
aws-sigv4 = "0.56.1"
aws-credential-types = "0.56.1"
aws-config = "0.56.1"
aws-types = "0.56.1"
sha1 = "0.10.6"

[target.'cfg(macos)'.dependencies]
uname = "0.1.1"

[target.'cfg(unix)'.dependencies]
uname = "0.1.1"

[target.'cfg(target_os = "linux")'.dependencies]
tikv-jemallocator = "0.5"

[dev-dependencies]
axum = { version = "0.6.20", features = [
    "headers",
    "json",
    "original-uri",
    "ws",
] }
ecdsa = { version = "0.15.1", features = ["signing", "pem", "pkcs8"] }
fred = { version = "6.3.2", features = ["enable-rustls", "no-client-setname"] }
futures-test = "0.3.28"
insta = { version = "1.34.0", features = ["json", "redactions", "yaml"] }
maplit = "1.0.2"
memchr = { version = "2.6.4", default-features = false }
mockall = "0.11.4"
num-traits = "0.2.17"
once_cell = "1.18.0"
opentelemetry-stdout = { version = "0.1.0", features = ["trace"] }
p256 = "0.12.0"
rand_core = "0.6.4"
redis = { version = "0.21.7", features = ["tokio-comp"] }
reqwest = { version = "0.11.22", default-features = false, features = [
    "json",
    "stream",
] }
rhai = { version = "1.16.2", features = [
    "sync",
    "serde",
    "internals",
    "testing-environ",
] }
similar-asserts = "1.5.0"
tempfile = "3.8.0"
test-log = { version = "0.2.12", default-features = false, features = [
    "trace",
] }
test-span = "0.7"
toml = "0.7"
tower-test = "0.4.0"

# See note above in this file about `^tracing` packages which also applies to
# these dev dependencies.
tracing-subscriber = { version = "0.3", default-features = false, features = [
    "env-filter",
    "fmt",
] }
tracing-test = "0.2.4"
walkdir = "2.4.0"
wiremock = "0.5.19"

[target.'cfg(target_os = "linux")'.dev-dependencies]
rstack = { version = "0.3.3", features = ["dw"], default-features = false }


[build-dependencies]
tonic-build = "0.9.2"


[[test]]
name = "integration_tests"
path = "tests/integration_tests.rs"

[[bench]]
name = "huge_requests"
harness = false
